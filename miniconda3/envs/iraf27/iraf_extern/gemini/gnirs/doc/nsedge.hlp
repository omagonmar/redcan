.help nsedge November2011 gemini.gnirs
.ih
NAME
.nf
nsedge -- Generate/extend a BPM to exclude the edge of apertures
.fi
.ih
USAGE
nsedge inimages bpmfile
.ih
PARAMETERS
.ls inimages
One or more images that will be used to detect the edge of apertures
by measuring local changes in the gradient.  Multiple images are 
combined using GEMCOMBINE.  The images should illuminate the apertures
as evenly as possible - typically flats will be used.
.le
.ls bpmfile
The output file.  This must not exist when the task is called.  On
successful completion of the task it will contain a bad pixel mask (BPM)
that excludes aperture edges.
.le
.ls flatbpm = ""
The BPM generated by NSFLAT.  This is included in \fIbpmfile\fR.
.le
.ls threshold = 0.5
The fraction of the peak gradient at which aperture edges are marked.
A smaller value will help avoid mis-identification of structure in the
input images.
.le
.ls grow = 1
The distance by which edges are extended to guarantee the exclusion of
bad data.
.le
.ls logfile = ""
Name of logfile.  The GNIRS package logfile "gnirs.log" is used by default.
.le
.ls verbose = yes
Print more actions to the screen.
.le
.ls status = 0
Exit status will be non-zero if the procedure halted with an error.
This parameter is always set by the task, and should not be modified
by the user.
.le

.ce
Parameters from NSHEADERS
.sp
The following values are read from GNIRS.NSHEADERS
.ls key_dispaxis
Header keyword for dispersion axis
.le
.ls key_cut_section
Header keyword for image section that was cut
.le
.ls sci_ext
Name of science extension
.le
.ls dq_ext
Name of data quality extension
.le
.ls var_ext
Name of variance extension
.le
.ih
DESCRIPTION
This task generates a bad pixel mask (BPM) that can be provided to
NSPREPARE to exclude data at the edge of apertures.
.sp
A typical reduction process would prepare the flats with NSPREPARE,
then generate a flat field with NSFLAT.  After this, the flats can be
used with NSEDGE to extend the BPM generated by NSFLAT to include
aperture edge information.
.sp
The task can use files that are already cut into apertures, but it is
generally better to use the prepared but uncut files, as they show the
aperture edges more clearly.
.sp
After combining the input images (using the median), the GRADIENT
task is used to measure variations in the spatial direction.  The maximum
and minimum values are then multiplied by \fIthreshold\fR and any values
outside this range are flagged as "bad" in the output BPM.
.sp
If \fIradius\fR is greater than zero, the bad pxiels identified in this
manner are extended using the task CRGROW.  Finally, the BPM is combined
with the previous BPM from the NSFLAT task, if provided.
.ih
EXAMPLE
1. The following sequence was taken from a session reducing IFU data.
The flat is generated from files listed in "flt" and "drk".  Next,
the BPM (flat_bpm) is extended to include edge information.  Finally,
the remaining data (listed in "all") are reduced with the new BPM.
.sp
.nf
  gn> nsprepare @flt shiftx=INDEF shifty=INDEF fl_forcewcs+
  gn> nsprepare @drk shiftimage=nS20041120S0181 fl_forcewcs+
  gn> nscut n@flt
  gn> nsflat sn@flt darks=n@drk flatf=flat darkf=dark fl_save+ \
  >>> thr_flo=0.1 thr_fup=2
  gn> nsedge n@flt mask flatbpm=flat_bpm
  gn> nsprepare @all shiftimage=nS20041120S0181 fl_forcewcs+ bpm=mask
.fi
.ih
BUGS AND LIMITATIONS
.ih
SEE ALSO
nsprepare, nsflat
.endhelp
