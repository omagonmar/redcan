.help nireduce November2011 gemini.niri
.ih
NAME
nireduce -- Reduce images from NIRI (dark or sky subtraction, flat)
.ih
USAGE
nireduce inimages
.ih
PARAMETERS
.ls inimages
Images to reduce. Can be a list of images.  The images must be
multi-extension FITS images.  If there are no existing variance or
data quality extensions, the reduced image will not have them either.  
All input files must have been run through NPREPARE previously.
.le
.ls outimages= ""
Output multi-extension FITS images. Can be a list of images. \fIoutimages\fR 
has preference over \fIoutprefix\fR.
.le
.ls outprefix = "r"
Prefix for output images. Names of output images are the
names of the input images with a prefix attached.
\fIoutprefix\fR is used if \fIoutimages\fR="".
.le
.ls logfile = ""
Name of logfile.
.le
.ls fl_sky = yes
Perform sky subtraction using \fIskyimage\fR.
.le
.ls skyimage = ""
Sky image to subtract.
.le
.ls skylevel = 0.0
Constant to add after reduction (in ADU).
.le
.ls fl_autosky = yes
If set to "yes", NIREDUCE will determine the constant sky level to add back
on by computing the median of the sky image (with bad pixels ignored).
If this flag is set and \fIskylevel\fR is not set to 0.0, NIREDUCE will halt
since it cannot know which sky level the user intended to add.  
\fIfl_sky\fR
must be set and the sky image present for \fIfl_autosky\fR to work.   
.le
.ls fl_scalesky = yes
Scale the sky image such that the median of the sky image is the same as
the median of the image being reduced (as measured in the region defined
by \fIstatsec\fR.  Care should be taken to make sure that \fIstatsec\fR
is sampling the background, not the object being observed.
.le
.ls fl_dark = no
Perform dark subtraction using \fIdarkimage\fR.
.le
.ls darkimage = ""
Dark current image to subtract.
.le
.ls fl_flat = yes
Perform flat field correction (division) using \fIflatimage\fR.
.le
.ls flatimage = ""
Normalized flat field image.
.le
.ls statsec = "[100:924,100:924]"
Section of the images to use for statistics.
.le
.ls sci_ext = "SCI"
Name or number of science extension.
.le
.ls var_ext = "VAR"
Name or number of variance extension.
.le
.ls dq_ext = "DQ"
Name or number of data quality extension.
.le
.ls key_filter = "FILTER"
Header keyword for filter.
.le
.ls key_ron = "RDNOISE"
Header keyword for approximate read noise in electrons.
.le
.ls key_sat = "SATURATI"
Header keyword for the saturation level in ADU.
.le
.ls key_nonlinear = "NONLINEA"
Header keyword for the non-linear level in ADU.
.le
.ls fl_vardq = yes
Create the variance and data quality images?
.le
.ls verbose = yes
Print actions to the screen?
.le
.ls status = 0
This flag is non-zero after execution of NIREDUCE if a fatal error was
encountered.
.le
.ih
DESCRIPTION
.le
NIREDUCE is used for basic reductions of images from NIRI.
Input images must be multi-extension FITS files, previously
processed using the NPREPARE script.  
If the variance and data quality frames do not exist, the 
output image will not be generated for the output image.  
If output VAR and DQ frames are not desired (to save disk
space and processing time), the flag 
\fIfl_vardq\fR should be set to "no".

The reduction steps are defined by the flags
(\fIfl_sky\fR, \fIfl_dark\fR, and \fIfl_flat\fR).
The flat field images are assumed to be normalized, division flat 
fields.
If \fIskylevel\fR!=0, then this constant level is added to the output
image. This feature can be used to restore the sky level to the
original level and thereby maintain the noise characteristics
of the image.  If the \fIfl_autosky\fR=yes, \fIfl_sky\fR=yes, and
\fIskylevel\fR=0, the median of the sky image will be added on as
the constant sky level.  Pixels deviating by more than 4 sigma are
ignored in computing the median sky value.  Ambiguous combinations of
these parameters will cause NIREDUCE to halt.

The sky image \fIskyimage\fR needed for sky subtraction should be 
constructed using NIFASTSKY or NISKY.  
NIREDUCE will not create a sky image that does
not already exist. Similarly, the \fIdarkimage\fR must exist
if dark subtraction is desired.  Both \fIskyimage\fR and
\fIdarkimage\fR must be multi-extension FITS;  if they do not have
variance and data quality frames then the parameter \fIfl_vardq\fR
will be set to "no" and the output images will not have VAR or D
extensions.

The variance is calculated as follows for the arithmetic operations
performed by NIREDUCE:

.nf   
     f=a+/-b    var(f) = var(a) + var(b)
.fi

.nf
     f=ab       var(f) = sci(a)^2*var(b) + sci(b)^2*var(a)
.fi

.nf
     f=a/b      var(f) = [(sci(a)^2/sci(b)^4]*var(b) + [1/sci(b)^2]*var(a)
.fi

.nf
     f=(a-b)/c  var(f) = [(sci(a)-sci(b))^2/sci(c)^4]*var(c) +
                            (1/sci(c)^2)*[var(a)+var(b)]
.fi

.le
The data quality frame is generated by combining the data quality frames
of all the relevant input images using a bit-wise OR, 
so that the resulting data quality frame contains all the flags that were 
present in the input images.

The variance frame contains the definitive measure of the noise in
each pixel.  Nevertheless, NIREDUCE tries to keep the header keywords
for read noise and saturation level sensible.  It does so by adding
in quadrature the read noise values from the input image and the
sky or dark image subtracted.  No allowance is made for additional
read noise from the flat field division.  The saturation level is
adjusted by subtracting the median value from the sky or dark image
and adding the constant sky level added to the input data.
.le
.ih
EXAMPLES

1. To reduce one input image.  The sky image is the output of 
NIFASTSKY or NISKY.  The flat field image has already been 
normalized.

.nf
     cl> nireduce inimage1 outim=outimage1 skyimage=skyKJan14 \
         flatimage=flatKJan14
.fi

2. To reduce a list of images and add a constant back on.  The 
filter keyword value of each input image is checked against those
for sky and the flat images to ensure that they match.

.nf
    cl> nireduce inimage1,inimage2,inimage3 \
        outim=outimage1,outimage2,outimage3 \
        skyimage=skyKJan14 skylevel=10000. flatimage=flatKJan14
.fi

3. To reduce a list of images, constructing the output image names
by attaching a prefix "r" to the input image names, and automatically 
determine the sky level to add on.

.nf
    cl> nireduce n*fits outpre="r" skyimage=skyKJan14 skylevel=0. \
        fl_autosky+ flatimage=flatKJan14
.fi

.ih
BUGS

.ih
SEE ALSO
nprepare, nisky, nifastsky, addmasks, wmef
.endhelp
