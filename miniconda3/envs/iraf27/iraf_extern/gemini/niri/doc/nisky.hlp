.help nisky March2012 gemini.niri
.ih
NAME
nisky -- Derive sky image for NIRI, includes masking of objects
.ih
USAGE
nisky inimages
.ih
PARAMETERS
.ls inimages 
List of images to combine.  Can be a comma-separated list of file
names or use the * wildcard.  NISKY also accepts @filename to 
point to a file containing the names of the input files.  If the 
input files are not multi-extension FITS, NISKY stops with an error.
.le
.ls outimage = ""
Output sky image.  If not specified, the output image will be the 
first input file name with "_sky" appended.
.le
.ls outtitle = "default"
The outtitle string will be written in the output image header 
under the keyword specified by the \fIi_title\fR (see help page
for HEDIT). If set to "default", NISKY will write
"SKY IMAGE from gemini.niri.nisky" in the output image header.
.le
.ls combtype = "default" (default|median|average)
Type of combination operation to be used by IMCOMBINE after
all the stars have been removed from each image.  The default is
"average".  Note that \fIcombtype\fR="default" overrides the setting 
of \fIrejtype\fR below.
.le
.ls rejtype = "avsigclip" (none|avsigclip|minmax)
Type of rejection algorithm to be used by IMCOMBINE.  Note that
if \fIcombtype\fR = "default" and the number of files is 3 or more,
the reject type will be set to "avsigclip", regardless of
how \fIrejtype\fR is set.  If only two images are specified, they are
combined by taking the minimum of the two.
.le
.ls logfile = ""
Logfile of operations.
.le
.ls statsec = "default"
Section of the images to use for statistics. The default is 
"[100:924,100:924]" for full-frame images, and "[*,*] for subarrays. 
.le
.ls nlow = 0, nhigh = 1
Number of low and high pixels to reject, when using \fIrejtype\fR=minmax.
Note that using \fIcombtype\fR = "default" will override the user-specified
values of \fInlow\fR and \fInhigh\fR.
.le
.ls lsigma = 3., hsigma = 3.
Number of multiples of sigma (lower and higher) for rejection using
IMCOMBINE.
.le
.ls threshold = 3.
Threshold in sigma for object detection by OBJMASKS.  This 
parameter can be tuned to balance between finding faint objects and
triggering on spurious noise peaks.
.le
.ls ngrow = 3
Number of iterations used by OBJMASKS to extend identified objects 
to surrounding regions of lower surface brightness, to remove the wings.
.le
.ls agrow = 3.
This  parameter sets the maximum area objects can be extended into the 
wings by OBJMASKS.
.le
.ls minpix = 6
Number of contiguous pixels above \fIthreshold\fR required for
OBJMASKS to identify an object.
.le
.ls key_exptime = "EXPTIME"
Header keyword for the exposure time.
.le
.ls key_ron = "RDNOISE", key_gain = "GAIN" 
Header keywords for readout noise and gain
.le
.ls masksuffix = "msk"
NISKY produces an object mask for each input image.  The names of these
images are the input image names + \fImasksuffix\fR.
.le
.ls fl_keepmasks = no
If set to yes, the object masks for each input image will not be deleted.
The mask files will have the input image names with the suffix defined
by the parameter \fImasksuffix\fR.
.le
.ls fl_nifastsky = yes
If set to no, the images from \fIinimages\fR will not be flatfielded and
sky subtracted with the NIFASTSKY outputs before the object masks are
calculated.  This can be useful in exceptional cases where there is a very
bright star covering a large fraction of the field of view.  Otherwise, 
this parameter should be set to 'yes'.
.le
.ls sci_ext = "SCI"
Name or number of science extension.
.le
.ls var_ext = "VAR"
Name or number of variance extension.
.le
.ls dq_ext = "DQ"
Name or number of data quality extension.
.le
.ls fl_vardq = yes
Generate variance and data quality planes in the final output image?
VAR and DQ planes need not exist in the input images.
.le
.ls fl_dqprop = no
Propagate all DQ values of individual images through to final DQ extension?
If \fIfl_dqprop\fR = "no" then the pixel mask from the combine operation
is used to create a new DQ frame for the combined image.
If \fIfl_dqprop\fR = "yes" then the output DQ frame is the pixel mask from the
combine operation combined with (logical OR) of all the input DQ frames.  Note
that if any of the input images do not have DQ frames, \fIfl_dqprop\fR will be
reset to "no".
.le
.ls verbose = yes
Print actions to the screen.
.le
.ls status = 0
This flag is non-zero after execution of NISKY if a fatal error was
encountered.
.le
.ih
DESCRIPTION
.le
NISKY constructs a sky image from a list of input images.
Images must have been previously run through NPREPARE.  NISKY then calls
NIFASTSKY to generate a simple median sky image, which it uses to 
reduce the input sky images.  
A flat field is generated by normalizing this quick sky image. The
input images, sky subtracted and flattened, are then used to
identify objects and create an object mask.

OBJMASKS is then run to identify all objects in the field.
The parameters \fIthreshold\fR and \fIminpix\fR can be
adjusted to fine tune how many faint objects are detected.
The OBJMASKS parameters \fIngrow\fR and \fIagrow\fR dictate
how identified objects are expanded in the mask to cover the
faint extended wings.  OBJMASKS works best on fields with
many smaller objects rather than large extended objects.
Since large extended objects are usually not used for
creating sky frames, OBJMASKS is ideal for use in NISKY.
  
Once the masks are generated using OBJMASKS, IMCOMBINE is called with 
the appropriate input parameters and masks to generate the final sky 
image (average by default) with the stars masked.  The variance and 
data quality frames are derived from the IMCOMBINE output.  
if \fIfl_dqprop\fR=yes, then the saturated pixels (or other flags) 
in the input files are included in the final sky image DQ frame as 
appropriate. Otherwise the sky image will only have values of 1 in 
the DQ frame indicating empty pixels after combining.

With \fIcombtype\fR="default" the final image is always combined using
the average.  If only two files are being combined, the minimum is
used (i.e., \fIreject\fR = "minmax" and \fInhigh\fR = 1); 
otherwise \fIreject\fR = "avsigclip" is used to remove cosmic rays from
individual sky images.  The type of combining and rejection can be
controlled by changing the input NISKY parameters.
NISKY also warns the user if images with different exposure times
are combined.

The variance frame contains the definitive measure of the noise in
each pixel.  Nevertheless, NISKY tries to keep the header keywords
for read noise and gain in the output image sensible.  
It does so by dividing the read noise in the first input image
header by the square root of the number of images.  If the read
noise is not the same for all the input images, the value in the
header of the output image will be wrong (although the variance
plane will be computed correctly).  Similarly, the gain in the
output image header will be the first input gain times the number
of frames, and will be wrong if all the input images do not have
the same gain.  These header values should be considered estimates
only.

For deep imaging, it is better to identify objects in a combined,
stacked image.  This can be done using the task NISUPERSKY.  After
combining the final image using IMCOADD, run NISUPERSKY to create
new mask files for NISKY.  Then, re-run NISKY with the new masks.
All subsequent steps in the reduction must be repeated.

.le
.ih
EXAMPLES

1. To combine a list of images to a sky image

.nf
      cl> nisky image1,image2,image3,image4,image5 skyimage
.fi

2. To combine all fits images starting with "n" in the current directory
to make a sky image, and to chop out a slightly larger region around each star
(saving the mask files for later examination):

.nf
      cl> nisky n*fits skyimage ngrow=5 fl_keepmasks+
.fi

.ih
BUGS
.ih
SEE ALSO
nifastsky, nisupersky, nprepare, objmasks, imcombine, addmasks
.endhelp
