

procedure f_acestruct (xqzrkc)

pointer	xqzrkc

int	fd, stropen()
errchk	malloc

begin
	call malloc (xqzrkc, 10626, TY_CHAR)
	fd = stropen (Memc[xqzrkc], ARB, NEW_FILE)
	call fprintf (fd, "# This file defines the object parameters for a single catalog.\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "# The following are the parameter ids which are the offsets into the object\n")
	call fprintf (fd, "# data structure.  Note that the first group of parameters are those\n")
	call fprintf (fd, "# determined during detection for potential objects.  The second group\n")
	call fprintf (fd, "# are parameters added after an object has been accepted.\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "define  ID_NUM           1 # i """" """"		/ Object number\n")
	call fprintf (fd, "define  ID_PNUM          2 # i """" """"		/ Parent number\n")
	call fprintf (fd, "define	ID_XPEAK	 3 # r pixels %%.3f	/ X peak coordinate\n")
	call fprintf (fd, "define	ID_YPEAK	 4 # r pixels %%.3f	/ Y peak coordinate\n")
	call fprintf (fd, "define	ID_FLUX		 5 # r counts """"	/ Isophotal flux (I - sky)\n")
	call fprintf (fd, "define	ID_NPIX		 6 # i pixels """"	/ Number of pixels\n")
	call fprintf (fd, "define	ID_NDETECT	 7 # i pixels """"	/ Number of detected pixels\n")
	call fprintf (fd, "define	ID_SIG		 8 # r counts """"	/ Sky sigma\n")
	call fprintf (fd, "define	ID_ISIGAVG	 9 # r sigma """"		/ Average (I - sky) / sig\n")
	call fprintf (fd, "define	ID_ISIGMAX	10 # r sigma """"		/ Maximum (I - sky) / sig\n")
	call fprintf (fd, "define	ID_ISIGAV	11 # r sigma """"		/ *Ref average (I - sky) / sig\n")
	call fprintf (fd, "define	ID_FLAGS	12 # 8 """" """"		/ Flags\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "define	ID_SKY		17 # r counts """"	/ Mean sky\n")
	call fprintf (fd, "define	ID_THRESH	18 # r counts """"	/ Mean threshold above sky\n")
	call fprintf (fd, "define	ID_PEAK		19 # r counts """"	/ Peak pixel value above sky\n")
	call fprintf (fd, "define	ID_FCORE	20 # r counts """"	/ Core flux\n")
	call fprintf (fd, "define	ID_GWFLUX	21 # r counts """"	/ Gaussian weighted flux\n")
	call fprintf (fd, "define	ID_CAFLUX_0	22 # r counts """"	/ Circular aperture flux\n")
	call fprintf (fd, "define	ID_CAFLUX_1	23 # r counts """"	/ Circular aperture flux\n")
	call fprintf (fd, "define	ID_CAFLUX_2	24 # r counts """"	/ Circular aperture flux\n")
	call fprintf (fd, "define	ID_CAFLUX_3	25 # r counts """"	/ Circular aperture flux\n")
	call fprintf (fd, "define	ID_CAFLUX_4	26 # r counts """"	/ Circular aperture flux\n")
	call fprintf (fd, "define	ID_CAFLUX_5	27 # r counts """"	/ Circular aperture flux\n")
	call fprintf (fd, "define	ID_CAFLUX_6	28 # r counts """"	/ Circular aperture flux\n")
	call fprintf (fd, "define	ID_CAFLUX_7	29 # r counts """"	/ Circular aperture flux\n")
	call fprintf (fd, "define	ID_CAFLUX_8	30 # r counts """"	/ Circular aperture flux\n")
	call fprintf (fd, "define	ID_CAFLUX_9	31 # r counts """"	/ Circular aperture flux\n")
	call fprintf (fd, "define	ID_FRACFLUX	32 # r counts """"	/ Apportioned flux\n")
	call fprintf (fd, "define	ID_FRAC		33 # r """" %%.3f		/ Apportioned fraction\n")
	call fprintf (fd, "define	ID_XMIN		34 # i pixels %%.3f	/ Minimum X\n")
	call fprintf (fd, "define	ID_XMAX		35 # i pixels %%.3f	/ Maximum X\n")
	call fprintf (fd, "define	ID_YMIN		36 # i pixels %%.3f	/ Minimum Y\n")
	call fprintf (fd, "define	ID_YMAX		37 # i pixels %%.3f	/ Maximum Y\n")
	call fprintf (fd, "define	ID_XAP		38 # r pixels %%.3f	/ X aperture coordinate\n")
	call fprintf (fd, "define	ID_YAP		39 # r pixels %%.3f	/ Y aperture coordinate\n")
	call fprintf (fd, "define	ID_X		40 # r pixels %%.3f	/ X centroid\n")
	call fprintf (fd, "define	ID_Y		41 # r pixels %%.3f	/ Y centroid\n")
	call fprintf (fd, "define	ID_XX		42 # r pixels """"	/ X 2nd moment\n")
	call fprintf (fd, "define	ID_YY		43 # r pixels """"	/ Y 2nd moment\n")
	call fprintf (fd, "define	ID_XY		44 # r pixels """"	/ X 2nd cross moment\n")
	call fprintf (fd, "define	ID_R		45 # r pixels %%.3f	/ R moment\n")
	call fprintf (fd, "define	ID_RII		46 # r pixels %%.3f	/ RI2 moment\n")
	call fprintf (fd, "define	ID_FWHM		47 # r pixels %%.3f	/ FWHM estimate\n")
	call fprintf (fd, "define	ID_EAELLIP	48 # r """" """"		/ Ellip aperture ellipticity\n")
	call fprintf (fd, "define	ID_EATHETA	49 # r degrees %%.2f	/ Ellip aperture pos angle\n")
	call fprintf (fd, "define	ID_EAR_0	50 # r pixels %%.3f	/ Ellip aperture radius\n")
	call fprintf (fd, "define	ID_EAR_1	51 # r pixels %%.3f	/ Ellip aperture radius\n")
	call fprintf (fd, "define	ID_EAR_2	52 # r pixels %%.3f	/ Ellip aperture radius\n")
	call fprintf (fd, "define	ID_EAR_3	53 # r pixels %%.3f	/ Ellip aperture radius\n")
	call fprintf (fd, "define	ID_EAR_4	54 # r pixels %%.3f	/ Ellip aperture radius\n")
	call fprintf (fd, "define	ID_EAR_5	55 # r pixels %%.3f	/ Ellip aperture radius\n")
	call fprintf (fd, "define	ID_EAR_6	56 # r pixels %%.3f	/ Ellip aperture radius\n")
	call fprintf (fd, "define	ID_EAR_7	57 # r pixels %%.3f	/ Ellip aperture radius\n")
	call fprintf (fd, "define	ID_EAR_8	58 # r pixels %%.3f	/ Ellip aperture radius\n")
	call fprintf (fd, "define	ID_EAR_9	59 # r pixels %%.3f	/ Ellip aperture radius\n")
	call fprintf (fd, "define	ID_EAFLUX_0	60 # r pixels %%.3f	/ Ellip aperture flux\n")
	call fprintf (fd, "define	ID_EAFLUX_1	61 # r pixels %%.3f	/ Ellip aperture flux\n")
	call fprintf (fd, "define	ID_EAFLUX_2	62 # r pixels %%.3f	/ Ellip aperture flux\n")
	call fprintf (fd, "define	ID_EAFLUX_3	63 # r pixels %%.3f	/ Ellip aperture flux\n")
	call fprintf (fd, "define	ID_EAFLUX_4	64 # r pixels %%.3f	/ Ellip aperture flux\n")
	call fprintf (fd, "define	ID_EAFLUX_5	65 # r pixels %%.3f	/ Ellip aperture flux\n")
	call fprintf (fd, "define	ID_EAFLUX_6	66 # r pixels %%.3f	/ Ellip aperture flux\n")
	call fprintf (fd, "define	ID_EAFLUX_7	67 # r pixels %%.3f	/ Ellip aperture flux\n")
	call fprintf (fd, "define	ID_EAFLUX_8	68 # r pixels %%.3f	/ Ellip aperture flux\n")
	call fprintf (fd, "define	ID_EAFLUX_9	69 # r pixels %%.3f	/ Ellip aperture flux\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "define	ID_FLUXVAR	70 # r counts """"	/ *Variance in the flux\n")
	call fprintf (fd, "define	ID_XVAR		71 # r pixels """"	/ *Variance in X centroid\n")
	call fprintf (fd, "define	ID_YVAR		72 # r pixels """"	/ *Variance in Y centroid\n")
	call fprintf (fd, "define	ID_XYCOV	73 # r pixels """"	/ *Covariance of X and Y\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "define	ID_ORDER	74 # i """" """"		/ Order\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "# The following are derived quantities which have ids above 10000.\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "define	ID_A		10001 # r pixels %%.3f	/ Semimajor axis\n")
	call fprintf (fd, "define	ID_B		10002 # r pixels %%.3f	/ Semiminor axis\n")
	call fprintf (fd, "define	ID_THETA	10003 # r degrees %%.2f	/ Position angle\n")
	call fprintf (fd, "define	ID_ELONG	10004 # r """" """"		/ Elongation = A/B\n")
	call fprintf (fd, "define	ID_ELLIP	10005 # r """" """"		/ Ellipticity = 1 - B/A\n")
	call fprintf (fd, "define	ID_RR		10006 # r pixels %%.3f	/ Second moment radius\n")
	call fprintf (fd, "define	ID_CXX		10007 # r pixels """"	/ Second moment ellipse\n")
	call fprintf (fd, "define	ID_CYY		10008 # r pixels """"	/ Second moment ellipse\n")
	call fprintf (fd, "define	ID_CXY		10009 # r pixels """"	/ Second moment ellipse\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "define	ID_FLUXERR	10011 # r counts """"	/ Error in flux\n")
	call fprintf (fd, "define	ID_XERR		10012 # r pixels """"	/ Error in X centroid\n")
	call fprintf (fd, "define	ID_YERR		10013 # r pixels """"	/ Error in Y centroid\n")
	call fprintf (fd, "define	ID_AERR		10014 # r """" """"		/ Error in A\n")
	call fprintf (fd, "define	ID_BERR		10015 # r """" """"		/ Error in B\n")
	call fprintf (fd, "define	ID_THETAERR	10016 # r degrees """"	/ Error in THETA\n")
	call fprintf (fd, "define	ID_CXXERR	10017 # r pixels """"	/ Error in CXX\n")
	call fprintf (fd, "define	ID_CYYERR	10018 # r pixels """"	/ Error in CYY\n")
	call fprintf (fd, "define	ID_CXYERR	10019 # r pixels """"	/ Error in CXY\n")
	call close (fd)
end


procedure f_catdef (xqzrkc)

pointer	xqzrkc

int	fd, stropen()
errchk	malloc

begin
	call malloc (xqzrkc, 908, TY_CHAR)
	fd = stropen (Memc[xqzrkc], ARB, NEW_FILE)
	call fprintf (fd, "NUM\n")
	call fprintf (fd, "#PNUM\n")
	call fprintf (fd, "NPIX\n")
	call fprintf (fd, "#NDETECT\n")
	call fprintf (fd, "FLAGS\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "X\n")
	call fprintf (fd, "Y\n")
	call fprintf (fd, "#XPEAK\n")
	call fprintf (fd, "#YPEAK\n")
	call fprintf (fd, "#XAP\n")
	call fprintf (fd, "#YAP\n")
	call fprintf (fd, "#XMIN\n")
	call fprintf (fd, "#XMAX\n")
	call fprintf (fd, "#YMIN\n")
	call fprintf (fd, "#YMAX\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "RA(X,Y)		RA\n")
	call fprintf (fd, "DEC(X,Y)	DEC\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "#PEAK%%\n")
	call fprintf (fd, "#FCORE%%\n")
	call fprintf (fd, "#FLUX%%\n")
	call fprintf (fd, "#GWFLUX%%\n")
	call fprintf (fd, "#CAFLUX%%\n")
	call fprintf (fd, "#EAFLUX%%\n")
	call fprintf (fd, "#FRACFLUX%%\n")
	call fprintf (fd, "#SKY%%\n")
	call fprintf (fd, "#THRESH%%\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "MAG(FLUX%%)	MAG%%\n")
	call fprintf (fd, "MAG(GWFLUX%%)	GWMAG%%\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "#R\n")
	call fprintf (fd, "#RII\n")
	call fprintf (fd, "#FWHM%%\n")
	call fprintf (fd, "#EAELLIP\n")
	call fprintf (fd, "#EATHETA\n")
	call fprintf (fd, "#EAR%%\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "#SIG\n")
	call fprintf (fd, "#ISIGAVG\n")
	call fprintf (fd, "#ISIGMAX\n")
	call fprintf (fd, "#ISIGAV\n")
	call fprintf (fd, "#FRAC\n")
	call fprintf (fd, "#XX\n")
	call fprintf (fd, "#YY\n")
	call fprintf (fd, "#XY\n")
	call fprintf (fd, "#A\n")
	call fprintf (fd, "#B\n")
	call fprintf (fd, "#THETA\n")
	call fprintf (fd, "#ELONG\n")
	call fprintf (fd, "#ELLIP\n")
	call fprintf (fd, "#RR\n")
	call fprintf (fd, "#CXX\n")
	call fprintf (fd, "#CYY\n")
	call fprintf (fd, "#CXY\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "#FLUXVAR\n")
	call fprintf (fd, "#FLUXERR\n")
	call fprintf (fd, "#XVAR\n")
	call fprintf (fd, "#YVAR\n")
	call fprintf (fd, "#XYCOV\n")
	call fprintf (fd, "#XERR\n")
	call fprintf (fd, "#YERR\n")
	call fprintf (fd, "#AERR\n")
	call fprintf (fd, "#BERR\n")
	call fprintf (fd, "#THETAERR\n")
	call fprintf (fd, "#CXXERR\n")
	call fprintf (fd, "#CYYERR\n")
	call fprintf (fd, "#CXYERR\n")
	call close (fd)
end


procedure p_aceall (xqzrkc)

pointer	xqzrkc

int	fd, stropen()
errchk	malloc

begin
	call malloc (xqzrkc, 6626, TY_CHAR)
	fd = stropen (Memc[xqzrkc], ARB, NEW_FILE)
	call fprintf (fd, "# ACEALL\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "images,f,a,,,,""List of input images""\n")
	call fprintf (fd, "masks,s,h,""!BPM"",,,""List of bad pixel masks""\n")
	call fprintf (fd, "exps,s,h,"""",,,""List of exposure maps""\n")
	call fprintf (fd, "gains,s,h,"""",,,""List of gain maps""\n")
	call fprintf (fd, "scales,s,h,"""",,,""List of image intensity scale factors""\n")
	call fprintf (fd, "extnames,s,h,"""",,,""Extension names""\n")
	call fprintf (fd, "logfiles,s,h,"""",,,""List of log files""\n")
	call fprintf (fd, "verbose,i,h,2,0,,""Verbose level\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "# Reference Image(s)""\n")
	call fprintf (fd, "rimages,f,h,,,,""List of reference images""\n")
	call fprintf (fd, "rmasks,s,h,""!BPM"",,,""List of reference bad pixel masks""\n")
	call fprintf (fd, "rexps,s,h,"""",,,""List of reference exposure maps""\n")
	call fprintf (fd, "rgains,s,h,"""",,,""List of reference gain maps""\n")
	call fprintf (fd, "rscales,s,h,"""",,,""List of reference intensity scale factors""\n")
	call fprintf (fd, "roffset,s,h,"""",,,""Offset for reference image\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "# Cataloging""\n")
	call fprintf (fd, "rcatalogs,s,h,"""",,,""List of input reference catalogs""\n")
	call fprintf (fd, "catalogs,s,h,""+_cat"",,,""List of output catalogs""\n")
	call fprintf (fd, "catdefs,s,h,"""",,,""List of catalog definitions""\n")
	call fprintf (fd, "catfilter,s,h,"""",,,""Output catalog filter""\n")
	call fprintf (fd, "order,s,h,"""",,,""Ordering expression""\n")
	call fprintf (fd, "nmaxrec,i,h,INDEF,,,""Maximum number of output records""\n")
	call fprintf (fd, "magzero,s,h,""INDEF"",,,""Magnitude zero point""\n")
	call fprintf (fd, "fwhm,r,h,4,,,""Default FWHM (pix)""\n")
	call fprintf (fd, "cafwhm,r,h,2,,,""Default circular ap diameter (FWHM)""\n")
	call fprintf (fd, "gwtsig,r,h,INDEF,,,""Mag weighting PSF sigma (pix)""\n")
	call fprintf (fd, "gwtnsig,r,h,INDEF,,,""Centroid weighting scale (sigma)\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "# Object masks""\n")
	call fprintf (fd, "objmasks,s,h,""+_obm"",,,""List of object masks""\n")
	call fprintf (fd, "omtype,s,h,""all"",""boolean|numbers|bboolean|bnumbers|all"",,""Object mask type\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "# Sky""\n")
	call fprintf (fd, "skyotype,s,h,""subsky"",""sky|subsky"",,""Sky output type""\n")
	call fprintf (fd, "skyimages,s,h,"""",,,""List of output sky images""\n")
	call fprintf (fd, "sigimages,s,h,"""",,,""List of output sigma images""\n")
	call fprintf (fd, "skies,s,h,""+_skymap"",,,""List of sky maps""\n")
	call fprintf (fd, "sigmas,s,h,""+_sigmap"",,,""List of sigma maps""\n")
	call fprintf (fd, "rskies,s,h,"""",,,""List of reference skies""\n")
	call fprintf (fd, "rsigmas,s,h,"""",,,""List of reference sky sigmas""\n")
	call fprintf (fd, "fitstep,i,h,100,1,,""Line step for sky sampling""\n")
	call fprintf (fd, "fitblk1d,i,h,10,,,""Block average for line fitting""\n")
	call fprintf (fd, "fithclip,r,h,2.,,,""High sky clipping during 1D sky estimation""\n")
	call fprintf (fd, "fitlclip,r,h,3.,,,""Low sky clippling during 1D sky estimation""\n")
	call fprintf (fd, "fitxorder,i,h,1,1,,""Sky fitting x order""\n")
	call fprintf (fd, "fityorder,i,h,1,1,,""Sky fitting y order""\n")
	call fprintf (fd, "fitxterms,s,h,""half"",""none|full|half"",,""Sky fitting cross terms""\n")
	call fprintf (fd, "blkstep,i,h,1,0,,""Line step for sky sampling""\n")
	call fprintf (fd, "blksize,i,h,-10,,,""Block size (+=pixels, -=blocks)""\n")
	call fprintf (fd, "blknsubblks,i,h,2,1,,""Number of subblocks per axis\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "# Detection""\n")
	call fprintf (fd, "hdetect,b,h,yes,,,""Detect objects above sky?""\n")
	call fprintf (fd, "ldetect,b,h,no,,,""Detect objects below sky?""\n")
	call fprintf (fd, "updatesky,b,h,yes,,,""Update sky after detection, splitting, and growing?""\n")
	call fprintf (fd, "bpdetect,s,h,""1-100"",,,""Input bad pixel values in image""\n")
	call fprintf (fd, "bpflag,s,h,""1-100"",,,""Input bad pixel values to flag in sources""\n")
	call fprintf (fd, "convolve,s,h,""bilinear 3 3"",,,""Convolution kernel""\n")
	call fprintf (fd, "hsigma,r,h,3.,.1,,""Sigma threshold above sky""\n")
	call fprintf (fd, "lsigma,r,h,10.,.1,,""Sigma threshold below sky""\n")
	call fprintf (fd, "neighbors,s,h,""8"",""4|8"",,Neighbor type\n")
	call fprintf (fd, "minpix,i,h,6,1,,""Minimum number of pixels in detected objects""\n")
	call fprintf (fd, "sigavg,r,h,4.,0.,,""Sigma of mean flux cutoff""\n")
	call fprintf (fd, "sigmax,r,h,4.,0.,,""Sigma of maximum pixel""\n")
	call fprintf (fd, "bpval,i,h,INDEF,,,""Output bad pixel value""\n")
	call fprintf (fd, "rfrac,r,h,0.5,,,""Minimum fraction of reference flux in difference\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "# Splitting""\n")
	call fprintf (fd, "splitstep,r,h,0.4,,,""Splitting steps in convolved sigma""\n")
	call fprintf (fd, "splitmax,r,h,INDEF,,,""Maximum sigma above sky for splitting""\n")
	call fprintf (fd, "splitthresh,r,h,5.,,,""Splitting threshold in sigma""\n")
	call fprintf (fd, "sminpix,i,h,8,1,,""Minimum number of pixels in split objects""\n")
	call fprintf (fd, "ssigavg,r,h,10.,0.,,""Sigma of mean flux cutoff""\n")
	call fprintf (fd, "ssigmax,r,h,5.,0.,,""Sigma of maximum pixel\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "# Growing""\n")
	call fprintf (fd, "ngrow,i,h,2,0,,""Number of grow rings""\n")
	call fprintf (fd, "agrow,r,h,2.,0,,""Area grow factor""\n")
	call close (fd)
end


procedure p_acecatalog (xqzrkc)

pointer	xqzrkc

int	fd, stropen()
errchk	malloc

begin
	call malloc (xqzrkc, 5252, TY_CHAR)
	fd = stropen (Memc[xqzrkc], ARB, NEW_FILE)
	call fprintf (fd, "# ACECATALOG\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "images,f,a,,,,""List of input images""\n")
	call fprintf (fd, "masks,s,h,""!BPM"",,,""List of bad pixel masks""\n")
	call fprintf (fd, "exps,s,h,"""",,,""List of exposure maps""\n")
	call fprintf (fd, "gains,s,h,"""",,,""List of gain maps""\n")
	call fprintf (fd, "spatialvar,s,h,"""",,,""List of spatial scale variation maps""\n")
	call fprintf (fd, "extnames,s,h,"""",,,""Extension names""\n")
	call fprintf (fd, "logfiles,s,h,"""",,,""List of log files""\n")
	call fprintf (fd, "verbose,i,h,2,0,,""Verbose level\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "# Cataloging""\n")
	call fprintf (fd, "catalogs,s,h,""+_cat"",,,""List of output catalogs""\n")
	call fprintf (fd, "catdefs,s,h,"""",,,""List of catalog definitions""\n")
	call fprintf (fd, "catfilter,s,h,"""",,,""Output catalog filter""\n")
	call fprintf (fd, "order,s,h,"""",,,""Ordering expression""\n")
	call fprintf (fd, "nmaxrec,i,h,INDEF,,,""Maximum number of output records""\n")
	call fprintf (fd, "magzero,s,h,""INDEF"",,,""Magnitude zero point""\n")
	call fprintf (fd, "fwhm,r,h,4,,,""Default FWHM (pix)""\n")
	call fprintf (fd, "cafwhm,r,h,2,,,""Default circular ap diameter (FWHM)""\n")
	call fprintf (fd, "gwtsig,r,h,""INDEF"",,,"" Mag weighting PSF sigma (pix)""\n")
	call fprintf (fd, "gwtnsig,r,h,""INDEF"",,,""Centroid weighting scale (sigma)\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "# Object masks""\n")
	call fprintf (fd, "objmasks,s,h,""+_obm"",,,""List of object masks""\n")
	call fprintf (fd, "omtype,s,h,""all"",""boolean|numbers|bboolean|bnumbers|all"",,""Object mask type\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "# Sky""\n")
	call fprintf (fd, "skies,s,h,"""",,,""List of sky maps""\n")
	call fprintf (fd, "sigmas,s,h,"""",,,""List of sigma maps""\n")
	call fprintf (fd, "fitstep,i,h,100,1,,""Line step for sky sampling""\n")
	call fprintf (fd, "fitblk1d,i,h,10,,,""Block average for line fitting""\n")
	call fprintf (fd, "fithclip,r,h,2.,,,""High sky clipping during 1D sky estimation""\n")
	call fprintf (fd, "fitlclip,r,h,3.,,,""Low sky clippling during 1D sky estimation""\n")
	call fprintf (fd, "fitxorder,i,h,1,1,,""Sky fitting x order""\n")
	call fprintf (fd, "fityorder,i,h,1,1,,""Sky fitting y order""\n")
	call fprintf (fd, "fitxterms,s,h,""half"",""none|full|half"",,""Sky fitting cross terms""\n")
	call fprintf (fd, "blkstep,i,h,1,0,,""Line step for sky sampling""\n")
	call fprintf (fd, "blksize,i,h,-10,,,""Block size (+=pixels, -=blocks)""\n")
	call fprintf (fd, "blknsubblks,i,h,2,1,,""Number of subblocks per axis\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "# Detection""\n")
	call fprintf (fd, "hdetect,b,h,yes,,,""Detect objects above sky?""\n")
	call fprintf (fd, "ldetect,b,h,no,,,""Detect objects below sky?""\n")
	call fprintf (fd, "updatesky,b,h,yes,,,""Update sky after detection, splitting, and growing?""\n")
	call fprintf (fd, "bpdetect,s,h,""1-100"",,,""Input bad pixel values in image""\n")
	call fprintf (fd, "bpflag,s,h,""1-100"",,,""Input bad pixel values to flag in sources""\n")
	call fprintf (fd, "convolve,s,h,""bilinear 3 3"",,,""Convolution kernel""\n")
	call fprintf (fd, "hsigma,r,h,3.,.1,,""Sigma threshold above sky""\n")
	call fprintf (fd, "lsigma,r,h,10.,.1,,""Sigma threshold below sky""\n")
	call fprintf (fd, "neighbors,s,h,""8"",""4|8"",,Neighbor type\n")
	call fprintf (fd, "minpix,i,h,6,1,,""Minimum number of pixels in detected objects""\n")
	call fprintf (fd, "sigavg,r,h,4.,0.,,""Sigma of mean flux cutoff""\n")
	call fprintf (fd, "sigmax,r,h,4.,0.,,""Sigma of maximum pixel""\n")
	call fprintf (fd, "bpval,i,h,INDEF,,,""Output bad pixel value\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "# Splitting""\n")
	call fprintf (fd, "splitstep,r,h,0.4,,,""Splitting steps in convolved sigma""\n")
	call fprintf (fd, "splitmax,r,h,INDEF,,,""Maximum sigma above sky for splitting""\n")
	call fprintf (fd, "splitthresh,r,h,5.,,,""Splitting threshold in sigma""\n")
	call fprintf (fd, "sminpix,i,h,8,1,,""Minimum number of pixels in split objects""\n")
	call fprintf (fd, "ssigavg,r,h,10.,0.,,""Sigma of mean flux cutoff""\n")
	call fprintf (fd, "ssigmax,r,h,5.,0.,,""Sigma of maximum pixel\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "# Growing""\n")
	call fprintf (fd, "ngrow,i,h,2,0,,""Number of grow rings""\n")
	call fprintf (fd, "agrow,r,h,2.,0,,""Area grow factor""\n")
	call close (fd)
end


procedure p_acediff (xqzrkc)

pointer	xqzrkc

int	fd, stropen()
errchk	malloc

begin
	call malloc (xqzrkc, 6202, TY_CHAR)
	fd = stropen (Memc[xqzrkc], ARB, NEW_FILE)
	call fprintf (fd, "# ACEDIFF\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "images,f,a,,,,""List of input images""\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "masks,s,h,""!BPM"",,,""List of bad pixel masks""\n")
	call fprintf (fd, "exps,s,h,"""",,,""List of exposure maps""\n")
	call fprintf (fd, "gains,s,h,"""",,,""List of gain maps""\n")
	call fprintf (fd, "scales,s,h,"""",,,""List of image intensity scale factors""\n")
	call fprintf (fd, "extnames,s,h,"""",,,""Extension names""\n")
	call fprintf (fd, "logfiles,s,h,"""",,,""List of log files""\n")
	call fprintf (fd, "verbose,i,h,2,0,,""Verbose level\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "# Reference Image(s)""\n")
	call fprintf (fd, "rimages,f,a,,,,""List of reference images""\n")
	call fprintf (fd, "rmasks,s,h,""!BPM"",,,""List of reference bad pixel masks""\n")
	call fprintf (fd, "rexps,s,h,"""",,,""List of reference exposure maps""\n")
	call fprintf (fd, "rgains,s,h,"""",,,""List of reference gain maps""\n")
	call fprintf (fd, "rscales,s,h,"""",,,""List of reference intensity scale factors""\n")
	call fprintf (fd, "roffset,s,h,"""",,,""Offset for reference image\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "# Cataloging""\n")
	call fprintf (fd, "catalogs,s,h,""+_dcat"",,,""List of output catalogs""\n")
	call fprintf (fd, "catdefs,s,h,"""",,,""List of catalog definitions""\n")
	call fprintf (fd, "catfilter,s,h,"""",,,""Output catalog filter""\n")
	call fprintf (fd, "order,s,h,"""",,,""Ordering expression""\n")
	call fprintf (fd, "nmaxrec,i,h,INDEF,,,""Maximum number of output records""\n")
	call fprintf (fd, "magzero,s,h,""INDEF"",,,""Magnitude zero point""\n")
	call fprintf (fd, "fwhm,r,h,4,,,""Default FWHM (pix)""\n")
	call fprintf (fd, "cafwhm,r,h,2,,,""Default circular ap diameter (FWHM)""\n")
	call fprintf (fd, "gwtsig,r,h,""INDEF"",,,"" Mag weighting PSF sigma (pix)""\n")
	call fprintf (fd, "gwtnsig,r,h,""INDEF"",,,""Centroid weighting scale (sigma)\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "# Object masks""\n")
	call fprintf (fd, "objmasks,s,h,""+_dobm"",,,""List of object masks""\n")
	call fprintf (fd, "omtype,s,h,""all"",""boolean|numbers|bboolean|bnumbers|all"",,""Object mask type\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "# Sky""\n")
	call fprintf (fd, "skies,s,h,"""",,,""List of sky maps""\n")
	call fprintf (fd, "sigmas,s,h,"""",,,""List of sigma maps""\n")
	call fprintf (fd, "rskies,s,h,"""",,,""List of reference skies""\n")
	call fprintf (fd, "rsigmas,s,h,"""",,,""List of reference sky sigmas""\n")
	call fprintf (fd, "fitstep,i,h,100,1,,""Line step for sky sampling""\n")
	call fprintf (fd, "fitblk1d,i,h,10,,,""Block average for line fitting""\n")
	call fprintf (fd, "fithclip,r,h,2.,,,""High sky clipping during 1D sky estimation""\n")
	call fprintf (fd, "fitlclip,r,h,3.,,,""Low sky clippling during 1D sky estimation""\n")
	call fprintf (fd, "fitxorder,i,h,1,1,,""Sky fitting x order""\n")
	call fprintf (fd, "fityorder,i,h,1,1,,""Sky fitting y order""\n")
	call fprintf (fd, "fitxterms,s,h,""half"",""none|full|half"",,""Sky fitting cross terms""\n")
	call fprintf (fd, "blkstep,i,h,1,0,,""Line step for sky sampling""\n")
	call fprintf (fd, "blksize,i,h,-10,,,""Block size (+=pixels, -=blocks)""\n")
	call fprintf (fd, "blknsubblks,i,h,2,1,,""Number of subblocks per axis\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "# Detection""\n")
	call fprintf (fd, "hdetect,b,h,yes,,,""Detect objects above sky?""\n")
	call fprintf (fd, "ldetect,b,h,no,,,""Detect objects below sky?""\n")
	call fprintf (fd, "updatesky,b,h,yes,,,""Update sky after detection, splitting, and growing?""\n")
	call fprintf (fd, "bpdetect,s,h,""1-100"",,,""Input bad pixel values in image""\n")
	call fprintf (fd, "bpflag,s,h,""1-100"",,,""Input bad pixel values to flag in sources""\n")
	call fprintf (fd, "convolve,s,h,""bilinear 3 3"",,,""Convolution kernel""\n")
	call fprintf (fd, "hsigma,r,h,3.,.1,,""Sigma threshold above sky""\n")
	call fprintf (fd, "lsigma,r,h,10.,.1,,""Sigma threshold below sky""\n")
	call fprintf (fd, "neighbors,s,h,""8"",""4|8"",,Neighbor type\n")
	call fprintf (fd, "minpix,i,h,6,1,,""Minimum number of pixels in detected objects""\n")
	call fprintf (fd, "sigavg,r,h,4.,0.,,""Sigma of mean flux cutoff""\n")
	call fprintf (fd, "sigmax,r,h,4.,0.,,""Sigma of maximum pixel""\n")
	call fprintf (fd, "bpval,i,h,INDEF,,,""Output bad pixel value""\n")
	call fprintf (fd, "rfrac,r,h,0.5,,,""Minimum fraction of reference flux in difference\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "# Splitting""\n")
	call fprintf (fd, "splitstep,r,h,0.,,,""Splitting steps in convolved sigma""\n")
	call fprintf (fd, "splitmax,r,h,INDEF,,,""Maximum sigma above sky for splitting""\n")
	call fprintf (fd, "splitthresh,r,h,5.,,,""Splitting threshold in sigma""\n")
	call fprintf (fd, "sminpix,i,h,8,1,,""Minimum number of pixels in split objects""\n")
	call fprintf (fd, "ssigavg,r,h,10.,0.,,""Sigma of mean flux cutoff""\n")
	call fprintf (fd, "ssigmax,r,h,5.,0.,,""Sigma of maximum pixel\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "# Growing""\n")
	call fprintf (fd, "ngrow,i,h,2,0,,""Number of grow rings""\n")
	call fprintf (fd, "agrow,r,h,2.,0,,""Area grow factor""\n")
	call close (fd)
end


procedure p_aceevaluate (xqzrkc)

pointer	xqzrkc

int	fd, stropen()
errchk	malloc

begin
	call malloc (xqzrkc, 2948, TY_CHAR)
	fd = stropen (Memc[xqzrkc], ARB, NEW_FILE)
	call fprintf (fd, "# ACEEVALUATE\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "images,f,a,,,,""List of input images""\n")
	call fprintf (fd, "exps,s,h,"""",,,""List of exposure maps""\n")
	call fprintf (fd, "gains,s,h,"""",,,""List of gain maps""\n")
	call fprintf (fd, "extnames,s,h,"""",,,""Extension names""\n")
	call fprintf (fd, "logfiles,s,h,"""",,,""List of log files""\n")
	call fprintf (fd, "verbose,i,h,2,0,,""Verbose level\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "# Cataloging""\n")
	call fprintf (fd, "rcatalogs,s,a,"""",,,""List of input reference catalogs""\n")
	call fprintf (fd, "catalogs,s,h,""+_cat"",,,""List of output catalogs""\n")
	call fprintf (fd, "catdefs,s,h,"""",,,""List of catalog definitions""\n")
	call fprintf (fd, "catfilter,s,h,"""",,,""Output catalog filter""\n")
	call fprintf (fd, "order,s,h,"""",,,""Ordering expression""\n")
	call fprintf (fd, "nmaxrec,i,h,INDEF,,,""Maximum number of output records""\n")
	call fprintf (fd, "magzero,s,h,""INDEF"",,,""Magnitude zero point""\n")
	call fprintf (fd, "fwhm,r,h,4,,,""Default FWHM (pix)""\n")
	call fprintf (fd, "cafwhm,r,h,2,,,""Default circular ap diameter (FWHM)""\n")
	call fprintf (fd, "gwtsig,r,h,""INDEF"",,,"" Mag weighting PSF sigma (pix)""\n")
	call fprintf (fd, "gwtnsig,r,h,""INDEF"",,,""Centroid weighting scale (sigma)\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "# Object masks""\n")
	call fprintf (fd, "objmasks,s,h,"""",,,""List of object masks""\n")
	call fprintf (fd, "omtype,s,h,""all"",""boolean|numbers|bboolean|bnumbers|all"",,""Object mask type\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "# Sky""\n")
	call fprintf (fd, "skies,s,h,"""",,,""List of sky maps""\n")
	call fprintf (fd, "sigmas,s,h,"""",,,""List of sigma maps""\n")
	call fprintf (fd, "fitstep,i,h,100,1,,""Line step for sky sampling""\n")
	call fprintf (fd, "fitblk1d,i,h,10,,,""Block average for line fitting""\n")
	call fprintf (fd, "fithclip,r,h,2.,,,""High sky clipping during 1D sky estimation""\n")
	call fprintf (fd, "fitlclip,r,h,3.,,,""Low sky clippling during 1D sky estimation""\n")
	call fprintf (fd, "fitxorder,i,h,1,1,,""Sky fitting x order""\n")
	call fprintf (fd, "fityorder,i,h,1,1,,""Sky fitting y order""\n")
	call fprintf (fd, "fitxterms,s,h,""half"",""none|full|half"",,""Sky fitting cross terms""\n")
	call fprintf (fd, "blkstep,i,h,1,0,,""Line step for sky sampling""\n")
	call fprintf (fd, "blksize,i,h,-10,,,""Block size (+=pixels, -=blocks)""\n")
	call fprintf (fd, "blknsubblks,i,h,2,1,,""Number of subblocks per axis""\n")
	call close (fd)
end


procedure p_acesegment (xqzrkc)

pointer	xqzrkc

int	fd, stropen()
errchk	malloc

begin
	call malloc (xqzrkc, 4554, TY_CHAR)
	fd = stropen (Memc[xqzrkc], ARB, NEW_FILE)
	call fprintf (fd, "# ACESEGMENT\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "images,f,a,,,,""List of input images""\n")
	call fprintf (fd, "masks,s,h,""!BPM"",,,""List of bad pixel masks""\n")
	call fprintf (fd, "exps,s,h,"""",,,""List of exposure maps""\n")
	call fprintf (fd, "extnames,s,h,"""",,,""Extension names""\n")
	call fprintf (fd, "logfiles,s,h,"""",,,""List of log files""\n")
	call fprintf (fd, "verbose,i,h,2,0,,""Verbose level\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "# Object masks""\n")
	call fprintf (fd, "objmasks,s,h,""+_obm"",,,""List of object masks""\n")
	call fprintf (fd, "omtype,s,h,""all"",""boolean|numbers|bboolean|bnumbers|all"",,""Object mask type\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "# Sky""\n")
	call fprintf (fd, "skyotype,s,h,""sky"",""sky|subsky"",,""Output sky type (sky|subsky)""\n")
	call fprintf (fd, "skyimages,s,h,""+_sky"",,,""List of output sky images""\n")
	call fprintf (fd, "sigimages,s,h,"""",,,""List of output sigma images""\n")
	call fprintf (fd, "skies,s,h,""+_skymap"",,,""List of input/output sky maps""\n")
	call fprintf (fd, "sigmas,s,h,"""",,,""List of input/output sigma maps""\n")
	call fprintf (fd, "fitstep,i,h,100,1,,""Line step for sky sampling""\n")
	call fprintf (fd, "fitblk1d,i,h,10,,,""Block average for line fitting""\n")
	call fprintf (fd, "fithclip,r,h,2.,,,""High sky clipping during 1D sky estimation""\n")
	call fprintf (fd, "fitlclip,r,h,3.,,,""Low sky clippling during 1D sky estimation""\n")
	call fprintf (fd, "fitxorder,i,h,1,1,,""Sky fitting x order""\n")
	call fprintf (fd, "fityorder,i,h,1,1,,""Sky fitting y order""\n")
	call fprintf (fd, "fitxterms,s,h,""half"",""none|full|half"",,""Sky fitting cross terms""\n")
	call fprintf (fd, "blkstep,i,h,1,0,,""Line step for sky sampling""\n")
	call fprintf (fd, "blksize,i,h,-10,,,""Block size (+=pixels, -=blocks)""\n")
	call fprintf (fd, "blknsubblks,i,h,2,1,,""Number of subblocks per axis\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "# Detection""\n")
	call fprintf (fd, "hdetect,b,h,yes,,,""Detect objects above sky?""\n")
	call fprintf (fd, "ldetect,b,h,no,,,""Detect objects below sky?""\n")
	call fprintf (fd, "updatesky,b,h,yes,,,""Update sky after detection, splitting, and growing?""\n")
	call fprintf (fd, "bpdetect,s,h,""1-100"",,,""Input bad pixel values in image""\n")
	call fprintf (fd, "bpflag,s,h,""1-100"",,,""Input bad pixel values to flag in sources""\n")
	call fprintf (fd, "convolve,s,h,""bilinear 3 3"",,,""Convolution kernel""\n")
	call fprintf (fd, "hsigma,r,h,3.,.1,,""Sigma threshold above sky""\n")
	call fprintf (fd, "lsigma,r,h,10.,.1,,""Sigma threshold below sky""\n")
	call fprintf (fd, "neighbors,s,h,""8"",""4|8"",,Neighbor type\n")
	call fprintf (fd, "minpix,i,h,6,1,,""Minimum number of pixels in detected objects""\n")
	call fprintf (fd, "sigavg,r,h,4.,0.,,""Sigma of mean flux cutoff""\n")
	call fprintf (fd, "sigmax,r,h,4.,0.,,""Sigma of maximum pixel""\n")
	call fprintf (fd, "bpval,i,h,INDEF,,,""Output bad pixel value\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "# Splitting""\n")
	call fprintf (fd, "splitstep,r,h,0.4,,,""Splitting steps in convolved sigma""\n")
	call fprintf (fd, "splitmax,r,h,INDEF,,,""Maximum sigma above sky for splitting""\n")
	call fprintf (fd, "splitthresh,r,h,5.,,,""Splitting threshold in sigma""\n")
	call fprintf (fd, "sminpix,i,h,8,1,,""Minimum number of pixels in split objects""\n")
	call fprintf (fd, "ssigavg,r,h,10.,0.,,""Sigma of mean flux cutoff""\n")
	call fprintf (fd, "ssigmax,r,h,5.,0.,,""Sigma of maximum pixel\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "# Growing""\n")
	call fprintf (fd, "ngrow,i,h,2,0,,""Number of grow rings""\n")
	call fprintf (fd, "agrow,r,h,2.,0,,""Area grow factor""\n")
	call close (fd)
end


procedure f_acefocus (xqzrkc)

pointer	xqzrkc

int	fd, stropen()
errchk	malloc

begin
	call malloc (xqzrkc, 714, TY_CHAR)
	fd = stropen (Memc[xqzrkc], ARB, NEW_FILE)
	call fprintf (fd, "# ACEFOCUS.H -- Catalog information.\n")
	call fprintf (fd, "\n")
	call fprintf (fd, "define	ID_SIZE		0 # r	 / Image size (width, radius, etc)\n")
	call fprintf (fd, "define	ID_STARID	1 # i	 / Star ID\n")
	call fprintf (fd, "define	ID_RA		2 # d	 / RA\n")
	call fprintf (fd, "define	ID_DEC		4 # d	 / DEC\n")
	call fprintf (fd, "define	ID_X		6 # d	 / X Position\n")
	call fprintf (fd, "define	ID_Y		8 # d	 / Y Position\n")
	call fprintf (fd, "define	ID_FLUX		10 # r	 / Flux\n")
	call fprintf (fd, "define	ID_ELLIP	11 # r	 / Ellipticity\n")
	call fprintf (fd, "define	ID_PA		12 # r	 / Position angle\n")
	call close (fd)
end
