include	<acecat.h>
include	"ac.h"

# ACECLUSTER -- Cluster on a specified field.
#
# This is the template for a recursive procedure.
# Replace $A and $B.

procedure acecluster$A (icat, recs, nrecs, field, sep, mincluster, cluster)

pointer	icat			#I Input catalog
pointer	recs			#I Records to cluster
pointer	nrecs			#I Number of records
int	field			#I Field number
real	sep[ARB]		#I Cluster separations
int	mincluster		#I Minimum cluster
int	cluster			#U Last cluster ID

int	i, cl, ncluster
real	sep1, val1, val2
pointer	rec1, rec2
$ if not last field
errchk	acecluster$B
$ else
pointer	rec
$ end

begin
	# If there is only a single record assign the cluster and return.
	if (nrecs == 1) {
	    rec1 = recs
	    ncluster = 1
	    if (ncluster < mincluster)
		cl = INDEFI
	    else {
		cluster = cluster + 1
		cl = cluster
	    }
	    CL_CL(Memi[rec1]) = cl
	    CL_NCL(Memi[rec1]) = ncluster
	    do i = 1, CL_NC+CL_NF
		call acecluster_avg (rec1, ncluster, ID_C1+i-1, ID_AVC1+i-1)
	    return
	}

	# Sort by field to be clustered if a separation is specified.
	sep1 = sep[field-ID_C1+1]
	if (!IS_INDEFR(sep1))
	    call catsort (icat, Memi[recs], nrecs, field, 1)

	# Find breaks of sep or more.
	rec1 = recs
	val1 = RECR(Memi[rec1],field)
	do rec2 = rec1+1, recs+nrecs-1 {
	    if (IS_INDEFR(sep1) || IS_INDEFR(val1)) {
	        rec2 = recs+nrecs
		break
	    }
	    val2 = RECR(Memi[rec2],field)
	    if (IS_INDEFR(val2) || val2 - val1 > sep1) {
		# Cluster on next field.
		$ If not last field.
		call acecluster$B (icat, rec1, rec2-rec1, field+1, sep,
		    mincluster, cluster)
		$ else
		# Assign cluster ID and averages.
		ncluster = rec2 - rec1
		if (ncluster < mincluster)
		    cl = INDEF
		else {
		    cluster = cluster + 1
		    cl = cluster
		}
		do rec = rec1, rec2-1 {
		    CL_CL(Memi[rec]) = cl
		    CL_NCL(Memi[rec]) = ncluster
		    do i = 1, CL_NC+CL_NF
			call acecluster_avg (rec1, ncluster, ID_C1+i-1,
			    ID_AVC1+i-1)
		}
		$ end
		rec1 = rec2
	    } 
	    val1 = val2
	}

	# Do last cluster.
	$ if not last field
	call acecluster$B (icat, rec1, rec2-rec1, field+1, sep,
	    mincluster, cluster)
	$ else
	ncluster = rec2 - rec1
	if (ncluster < mincluster)
	    cl = INDEF
	else {
	    cluster = cluster + 1
	    cl = cluster
	}
	do rec = rec1, rec2-1 {
	    CL_CL(Memi[rec]) = cl
	    CL_NCL(Memi[rec]) = ncluster
	    do i = 1, CL_NC+CL_NF
		call acecluster_avg (rec1, ncluster, ID_C1+i-1, ID_AVC1+i-1)
	}
	$ end
end
