.help simspec Aug95 stsdas.hst_calib.synphot
.ih
NAME
simspec -- Two-dimensional HST spectral instrument simulator
.ih
USAGE
simspec obsmode input output
.ih
DESCRIPTION 
This task computes a simulated image for spectral instruments with
two-dimensional formats on the HST. Currently, the only such
instrument for the HST is the STIS.  This task computes a spectral
image for long slit and echelle modes, given the observing
configuration and the object description table. For each spectral
order, the object shapes are convolved with the PSF, masked by the
spatial extent of the slit, and optionally maked in the dispersion
direction by the appropriate line spread function. Each order is then
mapped onto the detector pixels.  tHe task also optionally models and
add the celestial and/or instrument background, and introduces noise
that is appropriate for the specified instrument/detector combination.

The observing configuration (or "observation mode") is a list of
space- or comma-separated keywords that uniquely describe the
instrument used and its configuration. Typical observation modes name
the instrument, filters, and grating. (A list of valid observation
mode keywords can be generated by running the `obsmode' task.) The
input table describes up to five attributes for each object to be
modelled, including its position, brightness, and spatial orientation
and extent.  The format of the table is described in detail below.
The output is an image (in any supported IRAF format) which contains
the spectra of all the input objects that fall within the instrument's
field of view.

.ls Input Table of Objects
The input table describes the objects to be viewed, and contains one
row for each object. There are five fields for each object. The fields
specify the object x coordinate, y coordinate, magnitude, spectrum,
and shape.  The object coordinates are in the reference frame of the
detector.The magnitude is used to scale the integrated flux of the
object. The magnitude passband and form are specified by the hidden
task parameters "magband" and "magform". The spectrum is an expression
evaluated by the synphot expression evaluator.  (The syntax for a
synphot expression is described in the help file for `calcspec' and in
the Synphot User's Guide.) The spectrum is used to compute the object
flux as a function of wavelength and to compute how the light from the
object is dispersed. The flux is renormalized to the object magnitude
over the magnitude passband. The object shape specifies the shape and
extent of non-point source objects.

The input table can either be an STSDAS binary table or a text table. 
If a binary table, the five columns containing the object description 
are named by the task parameter "colnames".  (The defaults are meant 
to be self describing.)  If the input table is a text table, the first 
five columns are the right ascension, declination, magnitude, spectrum, 
and shape, respectively.  Text table entries (fields) cannot contain 
embedded spaces unless the fields are enclosed in quotes. The spectrum 
and shape columns are optional in the input table: in a binary table 
they would just be left blank, but in a text table they can be either 
omitted or set to a pair of adjacent quote marks. If the "spectrum" 
field for any object is omitted, the spectrum specified by the task 
parameter "spectrum" is used in its place. If the shape field is 
omitted the object is assumed to be a point source, i.e., a star. 
If the input table is a text table, any extended objects (i.e., objects 
with a "shape" field) must be placed first in the table, so that the 
table library knows the maximum number of columns in the table. 
Units for the right ascension and declination are read from the column 
units if the input table is an STSDAS table. If it is a text table, the 
units for right ascension are assumed to be hours, and that for 
declination are assumed to be degrees. Brightness units are read from
the parameter "magform".
.le
.ls Object Extent/Shape
The shape specification is very much like a function call--that is, 
the type of the shape is followed by a parenthesized list of 
function arguments. Most shapes take three arguments. The first is the 
radius, which is the radius of a circle (or the semi-major axis of an 
ellipse) containing half the flux of the object. The radius is measured 
in arcseconds. The second argument is the axial ratio, the ratio 
between the semimajor and semiminor axes of the ellipse. (Recall that 
the axial ratio is one for circular objects.) The third argument is the 
position angle: the angle between the positive (detector) x-axis and
the semimajor axis. The following is a list of the available shape 
functions.

.ls gauss(r,ar,pa)		Gaussian (normal) distribution
.nf
r: radius in seconds
ar: axial ratio 
pa: position angle
.fi

The gaussian distribution is described by the equation
.nf
    z = exp (- d ** 2)
.fi
where d is the distance from the center of the distribution along the
major axis

.le
.ls moffat(r,ar,pa,beta)	Moffat distribution
.nf
r: radius in seconds
ar: axial ratio
pa: position angle
beta: distribution exponent
.fi

The moffat distribution is described by the equation
.nf
    z = 1.0 / ((1.0 + d ** 2) ** beta)
.fi
.le
.ls exp(r,ar,pa)		Exponential distribution
.nf
r: radius in seconds
ar: axial ratio
pa: position angle
.fi

The exponential distribution is described by the equation
.nf
    z = exp (- d)
.fi
.le
.ls devauc(r,ar,pa)		Devaucalors distribution
.nf
r: radius in seconds
ar: axial ratio
pa: position angle
.fi

The Devaucalors distribution is described by the equation
.nf
    z = exp (- d  ** 0.25)
.fi
.le
.ls prof(tab,r,ar,pa)		Tabulated profile
.nf
tab: table name
r: radius in seconds
ar: axial ratio
pa: position angle
.fi

The profile an evenly spaced array of points read from a table. The
first point is the value at the center of the distribution and the last
point is the value at the specified radius. If the table in a binary
table, the profile is read from column PROFILE; if it is a text table,
the profile is read from the first column.
.le

.ls img(im,r)			Image template
.nf
im: image name
r: radius in seconds
.fi

An image template is an object shape read from an image. The image
size is calculated from the world coordinate information (the CD 
matrix) in the image header and then the image is rescaled so its size 
is equal to the specified radius.
.le

.ls Detector Background
The addition of background and noise are controlled by the three task
parameters, "calcback", "calcnoise", and "backfile". Calcback and
calcnoise control the addition of calculated noise and background,
respectively, and backfile control the addition of background from a
file. Calcback and calcnoise are boolean flags and the respective
calculations are done if their values are yes. Backfile is a string
containing the name of the background fileto be added to the
output. No background file will be added if the parameter is blank or
set to "none". All three switches are independent, one can have all
three or none of the types of background added to an image.

The instrument noise is calculated from the NOISE parameter stored in
the throughput table headers. The NOISE parameter contains an
expression which is used to compute the mean of a Poisson random
process. The distribution is sampled and a random noise is added to
each pixel.  If more than one throughput table contains a NOISE
parameter, the strings will be concatenated with the & operator
(explained later). The noise expression can contain constants and the
three variables t, n, and x. These represent the exposure time, the
number of reads, and the pixel flux. If the noise expression is a
function of x, the mean of the noise will vary from pixel to
pixel. Otherwise, the mean will be constant over the image. The noise
expression may contain the following operators and functions:

.nf
+	addition
-	subtraction or negation
*	multiplication 
/	division
**	exponentiation
&	magnitude (e.g., 3 & 4 = sqrt(3 ** 2 + 4 ** 2) = 5)
log()	natural logarithm
sqrt()	square root
.fi

Operator precedence and associativity are the same as in Fortran,
though these can be changed by grouping with parentheses. The
magnitude operator has lower precedence than any of the other
operators. 

The calculated background has contributions due to zodiacal light,
earthlight, and thermal background. Zodiacal light is a function of
the relative position of the telescope and sun. The telescope position
is set by task parameters "det_ra" and "det_dec", the sun position is
set by task parameter "time", which controls the date of the
observation.  Yhe earthlight background is calculated from task
parameter "earthtab", which specifies the maximum earthlight spectrum,
and task parameter "eshine", which specifies a fraction of the maximum
eathlight. The thermal background is calculated from "thermtab", which
specifies the spectrum of the thermal background.
.le

.ls Aperture Catalog
The apertures used by this task are stored in the aperture
catalog. The catalog has two columns. The first column contains the
observation mode associated with that aperture. The second column
countains a string describing the aperture shape. The string is
written as a function call, that is, the name of the aperture type
followed by a parenthesized list of numeric arguments. Four types of
aperture shapes are supported: rectangles, barred rectangles,
planetary, and multislit. The corresponding function calls are:

.ls rect(w,l)		Rectangular aperture
.nf
w: aperture width
l: aperture length
.fi
The aperture is a simple aperture. The width is the rectangle length
in the x dimension and the length is the length in the y dimension.
.le
.ls barred(w,l1,g1,...) Barred aperture
.nf
w: aperture width
l1: length of first part of aperture
g1: gap between first and second parts of aperture
.fi
The lengths and gaps may alternate an arbitrary number of times, but
must end with a length. The length represents an open area in the
aperture and the gap an obscured area. The dimensions of the aperture
parts are listed from left to right.
.le
.ls planet(w1,l1,w2,l2,w3,l3,ang) Planetary aperture
.nf
w1: width of first part of aperture
l1: length of first part of aperture
w2: width of second part of aperture
l2: length of second part of aperture
w3: width of third part of aperture
l3: length of third part of aperture
ang: rotation angle of aperture
.fi
The planetary apertures are dumbell shaped, narrower at the middle
than at the ends. They are also rotated with respect to the dispersion
axis. The dimensions of the three rectangles making up the dumbell
shape are specified from the leftmost (unrotated) end, followed by the
rotation angle. The rotation angle is specified in
degrees. Counterclockwise rotations from the x axis are positive.
.le
.ls multi(w,l,y1,x1,...) Multiple aperture
.nf
w: width of all apertures
l: length of all apertures
y1: y offset to midpoint of first aperture
x1: x distance between first and second apertures
.fi
Multiple apertures are collections of several simple rectangular
apertures, each which has the same width and length. The location of
each subaperture is specified by the offset to the midpoint of the
aperture and distance between successive apertures.
.le
.ih
PARAMETERS
.ls obsmode [string]
Telescope observation mode. The observation mode is a comma- or 
space-separated list of keywords that specifies a valid light path 
through the telescope. The observation mode is used to compute the 
instrument throughput, and select the point spread function and 
detector dimensions.
.le
.ls input [string]
Object description table. The table contains one row for each object
to be simulated. It has up to five columns, containing the x position,
y position, magnitude, spectrum, and shape. If the table 
is a text table, the columns must be in this order; the x and y
positions are in seconds of arc relative to the detector center. 
If the table is a binary table, column names are specified by the 
task parameter "colnames" and the units of right ascension and 
declination are specified by the column units.
.le
.ls output [string]
Output image name. The result of running this task is a single group
image whose dimensions are set according to the detector that is to 
be simulated. 
.le
.ls (exptime = 1.0) [real] [min = 0.0] [max = INDEF]
Observation exposure time in seconds.
.le
.ls (nread = 1) [int] [min = 1, max = INDEF]
Number of detector reads to obtain the final image.  Most of the HST 
instruments offer the capability of taking more than one exposure on 
a target in order to reduce the detector read noise and/or detect 
cosmic rays.  This parameter will be used in conjuction with the 
expression for detector noise to determine the final noise level for 
the output image.  
.le 
.ls (lsf_flag = no) [bool]
Use the line spread function? If this parameter is set to yes, the
object will be convolved with the line spread function, which
represents the diffraction effects of the aperture.
.le
.ls (dsf_flag = no) [bool]
Use the detector point spread function? The detector point spread
function quantifies how charge "leaks" from a point source on the
detector. Its application is controlled by this flag because the
required convolution of the output image with the point spread
function is computationally expensive.
.le
.ls (calcback = yes) [bool]
Add calculated background to the output image? If this task parameter
is set to yes the task will calculate a background and add it to the
output image.
.le
.ls (calcnoise = yes) [bool]
Add calculated noise to the output image? If this task parameter is
set to yes the task will calculate a poisson random noise with zero
mean and add it to the output image.
.le
.ls (quant = no) [bool]
If this parameter is set to yes, counts in each pixel are rounded to
the nearest home number. This allows simulation of the quantization
error of the instruments.
.le
.ls (det_ra = 0.0) [real] [min = 0.0] [max = 24.0]
Right ascension (in hours) of the center of the detector aperture.
.le
.ls (det_dec = 0.0) [real] [min = -90.0] [max = 90.0]
Declination (in degrees) of the center of the detector aperture.
.le
.ls (det_ang = 0.0) [real]
Detector position angle (in degrees) relative to equitorial 
coordinates. The position angle is measure counterclockwise from 
north.
.le
.ls (backfile = "none") [string]
The name of the background image to be added to the output image. The
image must be two dimensional and be the same size as the output
iamge. If this task parameter is set to "none" (the default) or left
blank, no background image will be added to the output.
.le
.ls (noisefile = "none") [string]
The name of the noise image to be added to the output image. The image
must be two dimensional and be the same size as the output iamge. If
this task parameter is set to "none" (the default) or left blank, no
noise image will be added to the output. The distinction between the
background and noise image is that the background image is added
before flat fielding and the noise image is added after flat fielding.
.le
.ls (wavetab = "none") [string]
Wavelength table An appropriate table can be generated by using 
the `genwave' task. If a binary table is used, the wavelength 
column name must be WAVELENGTH. If a text table is used the first 
column is taken to be the wavelength column.  The subdirectory 
synphot$data has text wavelength tables useful for specific HST 
passbands.

If no wavelength table is specified, a default wavelength set is
used. The default wavelength table covers the wavelength range where
the telescope and magnitude passbands are non-zero. Wavelengths are
spaced logarithmically over this range.
.le
.ls (simmodp = "") [pset]
The parameter set containing the model parameters. These are:
.ls (magband = "v") [string]
Passband of object magnitude. The flux of each object is renormalized
so that it has the indicated magnitude in the passband specified by
'magband'. The default passband in the Johnson V passband. Other 
filter systems include "cousins", "landolt", and "stromgren"; see the 
Synphot User's Guide (Appendix A) for details.  
.le
.ls (magform = "vegamag") [string] 
Form of object magnitude. The following forms are recognized:
.nf

	FNU		erg / s / cm^2 / Hz
	FLAM		erg / s / cm^2 / A
	PHOTNU		photons / s / cm^2 / Hz
	PHOTLAM		photons / s / cm^2 / A
	COUNTS		photons / s / hstarea / d_wave
	ABMAG		-2.5 log_10 (FNU)  - 48.60
	STMAG		-2.5 log_10 (FLAM) - 21.10
	VEGAMAG		-2.5 log_10 (F/F_vega)
	OBMAG		-2.5 log_10 (COUNTS)
	JY		10^-23 erg / s / cm^2 / Hz
 	MJY		10^-26 erg / s / cm^2 / Hz

.fi
A standard magnitude system is VEGAMAG, for which Vega by definition
has magnitude 0 at all wavelengths. The AB and ST magnitude systems are
based on constant flux per unit frequency and per unit wavelength,
respectively.  The zero points for these two systems are set for
convenience so that Vega has magnitude 0 in both systems for the
Johnson V passband.
.le
.ls (colnames = "ra dec mag spectrum shape") [string]
Input file column names. The column names specify which columns the
right ascension, declination, magnitude, spectrum and object shape are
read from, respectively. The column names in the list are separated by
commas or spaces. The list may contain fewer than five names, in which
case the omitted columns are assumed not to be present in the table
and default names are used instead. This task parameter is not used 
if the input file is a text file. 
.le
.ls (dynrange = 1000.) [real] [min = 1.] [max = 1e7]
Dynamic range of the object fluxes distribution. Extended objects 
and PSFs are truncated when the flux falls to 1/dynrange of its 
central value. 
.le
.ls (nsub = 5) [int] [min = 1] [max = 100]
Number of pixel subdivisions. Results are calculated on a finer grid
than the detector's pixel spacing. The number of subpixels along each
linear dimension of the pixel is nsub, so the total number of
subpixels is nsub ** 2.
.le
.le
.ls (simbackp = "") [pset]
The parameter file containing the noise and background
parameters. These are:
.ls (eshine = 0.0) [real] [min = 0.0] [max = 1.0]
Fraction of maximum earhlight to include in spectrum
.le
.ls (time = "Jun 21 1997 1:55:42 PM") [string]
The time of the observation. The time is used to compute solar
position. The background light is a function of the angle between the
sun and the telescope, so this date controls the background light
contribution. All times are UT (Universal time).  The time may be
entered in a variety of formats. The month field must be first,
followed by the day of month and year. All other fields are optional
and will be set to zero if omitted. Fields must be separated by one
non-alphanumeric character. Months may be specified by number or any
unique abbreviation of the English name.
.le
.ls (seed = 42) [int]
The seed for the random number generator used by the noise model.
.le
.le
.ls (simcatp = "") [pset]
The parameter set containing the file and catalog parameters. These
are: 
.ls (spectrum = "crcalspec$alpha_lyr_stis_002.fits") [string]
Default spectrum. If a row in the input table does not contain a
spectrum filed or the field is left blank, the default spectrum will
be used instead. This task parameter is mainly intended for reading
star positions from catalogs that do not contain a spectral type.
.le
.ls (psfcat = " ") [string]
Point spread function or catalog of point spread functions.  If the
file is an image, the task will use it as the sole point spread
function. If it is not, the task will treat the file as a catalog of
point spread functions. The catalog is in the form of a table with
three columns: the observation mode, the PSF wavelength, and the
filename that contains the PSF image. If the catalog is a binary
table, these columns are named OBSMODE, WAVELENGTH, and FILENAME. If
the catalog is a text table, they are the first, second, and third
table columns. Point spread functions are selected for use if the
input observation mode is a superset of the observation mode in the
table. The PSF convolved with each object is computed by weighting the
selected PSFs according to the flux in the object spectrum. Pixels in
each point spread function image are assumed to be square. The size of
the pixel is calculated from the world coordinate information (the CD
matrix) in the image header. If the CD matrix is zero, a warning
message is printed and the pixel scale is assumed to be that of the
detector. If the header keywords XCENTER and YCENTER are present, the
PSF center is read from these keywords. Otherwise, The PSF is assumed
to be approximately centered in the image, and the task takes the
pixel with the maximum value in a small box in the center of the PSF
to be the central pixel.
.le
.ls (lsfcat = " ") [string]
Line spread function or catalog of line spread functions.  If the file
is an image, the task will use it as the sole line spread function. If
it is not, the task will treat the file as a catalog of line spread
functions. The structure of the catalog and method of selection is the
same as for the point spread function. The size of the pixel is
calculated from the world coordinate information (the CD matrix) in
the image header. If the CD matrix is zero, a warning message is
printed and the pixel scale is assumed to be that of the detector. If
the header keyword CENTER is present, the LSF center is read from this
keyword. Otherwise, the center is assumed to be the pixel with the
maximum value. If more than one pixel has the maximum value, their
positions are averaged.
.le
.ls (dsfcat = " ") [string]
Detector point spread function or catalog of point spread
functions. If the file is an image, it will use it as the sole
detector point spread function. If it is not, the task will treat the
file as a catalog of detector point spread functions. If the catlog is
a binary table, it has two columns: OBSMODE and FILENAME. If the
catalog is a text table these are the first and second columns
respectively. The detector point spread function is selected by
matching the input observation mode with an observation mode in the
catalog. The size of pixels in the detector point spread function are
calculated from the world coordinate information in the image header,
just as for the point and line spread functions. If the header
keywords XCENTER and YCENTER are present, the PSF center is read from
these keywords. Otherwise, The PSF is assumed to be approximately
centered in the image, and the task takes the pixel with the maximum
value in a small box in the center of the PSF to be the central pixel.
.le
.ls (detcat = "synphot$data/detectors.dat") [string]
Catalog of detector dimensions. The catalog is a table containing four
columns: the observation mode, the pixel scale, the number of pixels
in the X dimension, and the number of pixels in the Y dimension. If
the catalog is a binary table, the columns are named OBSMODE, SCALE,
NX and NY. If it is a text table, they are the first through fourth
columns. The row in the catalog is selected if the input observation
mode is a superset of the catalog observation mode. If the table is a
binary table, the units of the detector scale are read from the SCALE
column units. If the table is a text table, the units are assumed to
be arcseconds. 
.le
.ls (apercat = "synphot$data/apertures.dat") [string]
Catalog of aperture shapes. The catalog is a table containing two
columns: OBSMODE and SHAPE. If the catalog is a text table, these are
the first and second columns, respectively. The row where the input
observation mode matches the catalog observation mode is selected. The
aperture shape is specified as a function call. The function names and
arguments are discussed above in this help file.
.le
.ls (gratecat = "synphot$data/gratings.dat") [string]
Catalog of grating dispersion parameters. The catalog has fifteen
columns. The first column is the OBSMODE column and is used to select
a row from the catalog. The remaining columns are M1, the first
spectral order modelled, M2, the last spectral order modelled, SIZE,
the detector size in milimeters, F, the focal length in milimeters,
GY, the grating lines per milimeter, BETA_Y, the grating blaze angle
in degrees, SIGMA_Y, the half angle between the collimator and
disperser parallel to the ruling, DELTA_Y, the half angle between the
grating and ruling perpendicular to the ruling, THETA_Y, the grating
scan angle, and GX, BETA_X, SIGMA_X, DELTA_X, and THETA_X, the same
quantities for the cross-disperser grating. If there is no cross
disperser, these last columns are set to zero. If the catalog is a
text table, it has the same fifteen columns in the order described
here. 
.le
.ls (limitcat = "synphot$data/limits.dat") [string]
Catalog of count rate limits. The task prints a warning message
whenever these limits are exceeded. The catalog has five columns. The
first is the OBSMODE column and it is used for selecting a row from
the catalog. The remaining columns are LOCALCOUNT, the local count
rate limit, GLOBALCOUNT, the global count rate limit, LOCALBRIGHT, the
local bright object limit, and GLOBALBRIGHT, the global bright object
limit. If the catalog is an ascii table, the second through fourth
columns contain the same information in the order described here.
.le
.ls (flatcat = "synphot$data/flatfields.dat") [string]
Catalog of inverse flat fields. The inverse flat field tracks the
sensitivity of the detector as a function of position. The output
image is multiplied by the flat field before noise is added. The flat
field images must have the same size as the detector.
.le
.ls (zodtab = "synphot$data/zodiac.dat") [string]
A table of zodiacal light flux. The units of the flux are tenth
magnitude solar type stars per square degree. The table is a function
of ecliptic latitude and heliocentric longitude of the detector. The
heliocentric longitude is the absolute value of the difference of the
ecliptic longitude of the detector and the sun. The first row in the
table contains the latitudes and the first column contains the
longitudes at which the flux values are tabulated. The default table
is taken from "A.C. Levasseur-Regourd and R. Dumont, "Absolute
Photometry of Zodiacal Light," Astr. and Ap., 84, 277 (1980)". If the
table name is blank or set to none, the zodiacal contribution to the
background will be omitted.
.le
.ls (earthtab = "synphot$data/earth.dat") [string]
The earthlight spectrum at its maximum value. The flux is given in
units per square arcseond. If the table name is blank or set to none,
the earthlight contribution to the background will be omitted.
.le
.ls (thermtab = "synphot$data/thermal.dat") [string]
The thermal background spectrum. The flux is given in units of square
arcsecond. If the table name is blank or set to none, the thermal
contribution to the background will be omitted.
.le
.le
.ls (refdata = "") [pset]
The parameter set for reference data used in calculations.
This pset contains the following parameters:
.ls (area = 45238.93416) [real]
HST telescope area in cm**2.
.le
.ls (grtbl = "crcomp$hstgraph_*") [string]  
HST graph table.  By default, this uses the most recent version. 
.le
.ls (cmptbl = "crcomp$hstcomp_*") [string]
Instrument component table.  By default, this uses the most recent version.
.le
.le
.ih
EXAMPLES 
1. Simulate an observation of a star by the STIS using the g140m
grating and the s01x0025 grating. The object file contains the line:

.nf
0.0	0.0	15.0	bb(5e4)
.fi

Then run this task with the command:

.nf
    cl> simspec stis,g140m,s01x0025,all object.dat output.hhh
.fi
.ih
TIME REQUIREMENTS 
.ih
BUGS 
The simulator is currently incomplete. d
yet.
.ih
REFERENCES
Written by Bernie Simon.
.ih
SEE ALSO
calcspec, obsmode, ttools.tcreate
.endhelp

