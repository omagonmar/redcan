.help msbadpix Feb97 stsdas.hst_calib.ctools
.ih
NAME
msbadpix -- NICMOS/STIS bad pixel tool
.ih
USAGE
msbadpix input output
.ih
DESCRIPTION
This task generates the MASK static bad pixel reference file for the
CALNICA NICMOS calibration pipeline software. It can also handle STIS
files and generate a similar bad pixel mask from them.

The basic algorithm can be described as follows. The task is fed with a 
large number of NICMOS/STIS IMSETs from the same scene, typically the 
ones used to build flat-fields. These IMSETs must have any low-frequency 
trends removed prior to submission to the task. In other words, the 
algorithm assumes that the input's SCI pixel contents can be described 
by a constant (per image) plus noise only.

The task then computes the residual (deviation from the local mean) of a 
given pixel in a given IMSET, in units of the local standard deviation. 
The local mean and standard deviation are computed inside a pixel-centered
square window of user-settable size (of course discarding the central pixel
itself). If the central pixel value departs more than  k-sigma from the mean, 
the task flags it *in that IMSET* only. It does this for all IMSETs in the 
list. Next it looks into each pixel's flag across the set, and flag as 
bad the ones that are flagged at least in a given minimum fraction of all 
the IMSETs. This minimum fraction is also user-selectable.

Since the mean and standard deviation computation inside each window can 
be spoiled by outliers (bad pixels, cosmic rays, etc.), this computation 
is (optionally) performed with an iterative sigma-clipping algorithm. The
computation is also preceded by an histogram cleanup algorithm, which 
consists in sorting the pixel values inside the window and clipping off
a given fraction of them at both the high and low extremes. Experience 
showed that certain bad pixel structures as e.g a bad column with very 
large values cannot be detected without this cleanup operation.

Input files must follow the standard NICMOS/STIS FITS format, with IMSETs
comprised of 5 (NICMOS) or 3 (STIS) HDUs per EXTVER 
number. Either ACCUM or MULTIACCUM files can be fed to the task, but only 
the first IMSET in MULTIACCUM files is read, all others are ignored. This 
first IMSET is identified by the EXTVER=1 keyword. Only the science HDU 
(EXTNAME=SCI) in each input IMSET is read by the task, the remaining HDUs 
being ignored.

Input headers are checked for the presence of the following keywords:
.nf

NICMOS:  INSTRUME, CAMERA, FILTER, OBSMODE
STIS:    INSTRUME, TARGNAME, OPMODE, CCDGAIN

.fi
Values of these keywords should be the same in all files in the input 
list. Their science array's axis sizes are also checked against the value 
expected for a raw NICMOS IMSET (256 sq.) or a STIS IMSET (1024 sq.). 
The task aborts if an invalid file is found.

The main output product is a single-IMSET file with only the DQ extension 
populated with the Data Quality flags generated by the algorithm. 
Bad pixels receive the value 32, good pixels the value zero. Pixels in 
the remaining HDUs are zeroed.

No image sections are supported, as well as no extension constructs
in file names (as e.g. [SCI,1]).

The task is written in C and can be easily re-built to be run as a 
stand-alone program under the native operating system. In this mode it 
provides a command line interface for setting up parameter values.
.ih
PARAMETERS
.ls input = "" [file name list/template]
Input file name list/template. 
.le
.ls output = "" [file]
Name of the output file that stores the bad pixel MASK. It must have a
".fits" or ".fit" extension.
.le
.ls (window = 7) [int, min = 3]
Size of pixel-centered window where stats are computed. Even window
sizes are rounded up to odd to ensure symmetry in the pixel array. 
Out-of-bounds pixels are discarded from the stat computations.
.le
.ls (threshold = 3.0) [real, min = 0.0]
Threshold value in standard deviation units. Pixels that depart from
the local mean more than that are flagged (in the current IMSET only).
.le
.ls (badfrac = 0.8) [real, min = 0.0, max = 1.0]
To be flagged as bad in the output mask image, a pixel must be flagged 
at least in this fraction of the number of IMSETs in the input list.
.le
.ls (cleanfrac = 0.0) [real, min = 0.0, max = 1.0]
Fraction of pixels in the stat window that are clipped off by the histogram
cleaning algorithm. Half of these are taken from the upper histogram wing,
and half from the lower wing. This ensures that the average is not disturbed
in case there are *no* outliers in the window. If set to zero, histogram
cleaning is disabled.
.le
.ls (kclip = 4.0) [real, min = 0.0]
Threshold for the sigma-clipping algorithm that acts in the stat window
after histogram cleaning.
.le
.ls (nclip = 0) [int, min = 0]
Number of sigma-clipping iterations. If set to zero sigma-clipping is turned
off.
.le
.ls (verbose = yes) [boolean]
Print out messages as the task progresses ?
.le
.ih
EXAMPLES
1. Produce a MASK file based on all flatfield NICMOS files in the local 
directory, using a 11-pixel window. Redirect output messages to the file 
'mask.log' and run in the background.

.nf
> msbadpix *_flt.fit mask.fit window=11 ver+ >& mask.log &
.fi
.ih
BUGS
.ih
REFERENCES
This task was written by I. Busko.
.ih
SEE ALSO
.endhelp
