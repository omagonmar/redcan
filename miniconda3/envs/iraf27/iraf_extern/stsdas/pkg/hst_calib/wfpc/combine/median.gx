# MEDIAN --	Determine the median of image lines with no scaling.  This 	#
# Calling arguments:
# Local variables:
# Initialize working array. 
# Sort pixel values into increasing order.
# Select median value.  For an even number of elements compute the mean of the 
# two values @midpoint.  
# DQMEDIAN --	Combine the images by scaling and taking the median, excluding 	#
# Calling arguments:
# Local variables:
# Select user-chosen Data Quality bits.
# Initialize working array. 
# Sort pixel values into increasing order.
# Select median value.  For an even number of elements compute the mean of the 
# two values @midpoint.  
# SCMEDIAN --	Combine the images by scaling and taking the median, excluding 	#
# Calling arguments:
# Local variables:
# Initialize working array.
# Sort pixel values into increasing order.
# Select median value.  For an even number of elements compute the mean of the 
# two values @midpoint.  
# BIGSORT --	Sort array "work" of length "n" into ascending numerical order 	#
# Calling arguments:
# Local variables:
# The index "m" will be decremented from its initial value down to 1 during the 
# heap creation phase.  Once it reaches 1, the index "ir" will be decremented 
# from its initial value down to 1 during the heap selection phase. 
# SMALLSORT --	Sort vector by increasing value.  This algorithm is based on 	#
# 		replaced on output by its sorted rearrangement.  		#
# Calling arguments:
# Local variables:
# Pick out each element in turn.
# Look for the place to insert it.

###  Proprietary source code removed  ###
