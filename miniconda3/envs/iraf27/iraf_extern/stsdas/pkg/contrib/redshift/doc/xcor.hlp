.help xcor Aug92 stsdas.contrib.redshift
.ih
NAME
xcor -- Redshift and velocity dispersion using the cross-correlation technique.
.ih
USAGE
xcor templates spectra
.ih
DESCRIPTION
The 'xcor' task provides an interactive facility to determine redshifts and
velocity dispersions using the Cross-correlation Technique (e.g.,
Tonry and Davis 1979, A. J., 84, 1511).
 
WARNING: The cross-correlation technique may be hazardous to your scientific
results.  High signal-to-noise spectra will produce what appear to be
superb results with small errors.  Keep in mind, however, that these errors
only reflect the statistical errors involved in fitting a single template.
There are many sources of systematic error that are not taken into account.
For example, drifts in the wavelength solution over the interval of an
integration can artificially broaden spectra (see Whitmore et al., 1979, Ap. J.,
234, 68).  A light profile that is not centered in the slit can give
systematic errors in redshift.  To obtain accurate velocity dispersions,
the coefficients for the conversion of a correlation peak width to a
velocity dispersion must be carefully determined from the template stars
for the chosen values of the 'order', 'bell_window', 
'low_bin', and 'nrun' parameters.
See Tonry and Davis (1979) for a more extensive discussion.  Your data,
your observation log, and the solutions provided by this program must all be
examined carefully as an integral whole to produce accurate results.
 
In brief, the cross-correlation technique assumes that a galaxy spectrum is
simply the convolution of a stellar spectrum with a Gaussian which describes
the line of sight velocity dispersion of the galaxy's constituent stars.
Cross-correlating a template spectrum with the galaxy spectrum then produces
a function with a peak at the redshift of the galaxy with a width related to
the dispersion of the galaxy.  Peaks in the cross-correlation function are
identified and fit by parabolas to obtain their position and width and hence
the redshift and velocity dispersion of the galaxy.
 
The templates are all read first.  They are checked to make sure that 
1) they are all on the same wavelength scale, and 2) they each have the same
number of data points.  The wavelength scale must be logarithmic.  It is
specified in the header by the starting wavelength (W0 or CRVAL1) and the
delta log lambda per pixel (WPC or CDELT1).  The dispersion must run along
axis 1 of the image.  The templates should have the keyword VELOCITY in their
headers.  This specifies the OBSERVED velocity (km/sec, + => receding) for the
date of the observation.  (N.B.: you must do your own correction from
heliocentric to observed velocities.)  If VELOCITY is not found, it is assumed
to be zero.

The objects are then read one at a time.  They must match the templates in
number of points and in wavelength scale.  The object and the templates are
fit by a low order polynomial which is subtracted to remove the continuum,
and they are divided by the average value of the spectrum.  The ends of the
spectra are windowed by a cosine bell to suppress high frequency noise.
If the number of points is not a power of two, the windowed spectra are padded
with zeroes to the next highest power of two.
 
The object and template are filtered in Fourier space and multiplied together
to form the transform of the cross-correlation function.  This is transformed
back into real space.  The largest peak is found and fit by a parabola.
The fitted parameters are saved, and a
summary output is produced for each object.  In this summary, the redshift is
corrected for the velocity of the template star.  The redshift is given as
cz in km/sec.  Note that you must supply your own correction from observed
velocities to heliocentric velocities.  The quoted errors are one sigma on
each parameter.  The results of each template are evaluated to determine
if they are acceptable solutions:
.nf
1) -500. < cz < 50000.,
2) 25. < sigma < 750.,
3) ABS( (cz - median cz) / error) < 3., and
4) 0.001 < fractional uncertainty in a parameter < 10.0.
.fi

Results for acceptable templates are then averaged using uniform weighting
and weighting by errors.  These averages and their dispersions are tabulated
along with the mean error observed for each parameter and the largest error
observed.  THESE VALUES MUST BE EXAMINED CAREFULLY SINCE THE CRITERIA FOR
ACCEPTABLE SOLUTIONS IS SUBJECTIVE.

The following keystrokes are active in addition to the normal IRAF
cursor facilities (available with ":.help"):
 
.ls c
Prints cursor position in X and Y.  This is the default.  All other
undefined keys perform this same function.
.le
.ls d
Replaces a region between the marked vertical cursors with interpolated
values from the edges of the marked region.  This is typically used to
eliminate poorly subtracted night sky lines or emission lines.
.le
.ls q
Quit and exit.
.le
.ls r
Forces a replot of the current spectrum at the original scale.
.le
.ls p
Forces the current vertical cursor location to be chosen as the peak in the
cross-correlation function which is used to obtain the redshift and dispersion.
.le
.ih
PARAMETERS
.ls templates [file name template]
List of file names of images to use as templates.
.le
.ls spectra [file name]
List of file names of spectra to analyze.
.le
.ls obj_plot = yes [boolean]
Display a plot of the object spectrum?

When the plot is displayed, normal IRAF cursor commands are enabled,
and can be used along with those commands described in the DESCRIPTION
section of this help file.
.le
.ls window_plot = yes [boolean]
Display a plot of the windowed object spectrum?

This is most
useful for determining the appropriateness of the order of the polynomial
chosen to fit the continuum and the size of the cosine bell window applied
to either end of the spectrum.
.le
.ls fft_plot = no [boolean]
Display the power spectrum of the transformed object data?

This is useful for setting the low order cutoff for the fits and for seeing
if any periodic noise is present in the data.
.le
.ls fit_plot = yes [boolean]
Display the cross-correlation function?

Cursor commands are
activated, and a peak other than the highest one can be chosen to be the
"answer" with the keystroke 'p'.
.le
.ls intermediate = yes [boolean]
Record the parameter values fit to the selected peak in a log file?

Mostly useful for debugging.
.le
.ls order = 4 [integer, min=1, max=10]
This is the number of terms in the polynomial fit to the object and template
spectra.  This polynomial is then subtracted from the raw object spectrum to
remove the lowest frequency Fourier components.  The resulting spectrum can be 
viewed by setting the parameter 'window_plot = yes'.  
If 'order' is set properly, the spectrum should
have a mean of zero with excursions from -1 to +1.
.le
.ls bell_window = 0.1 [real]
A fraction 'bell_window' of the ends of the object and template spectrum are
multiplied by a cosine bell.  This is to reduce high wave number Fourier
components that would be produced by abrupt cutoffs at the ends of the spectra.
.le
.ls low_bin = 5 [integer], nrun = 100 [integer]
The object and template spectra are filtered in Fourier space to remove low
and high frequency Fourier components that can distort or add noise to the
cross-correlation function.  The real portion of the Fourier amplitudes are
multiplied by a window function that is 0 up to 'low_bin', ramps up to unity at
2*'low_bin', remains unity to 'nrun', and ramps down to 0 at 2*'nrun'.  
Values chosen
for 'low_bin' and 'nrun' are not critical. Generally, 'low_bin' should be about
5 to 10 for a 1024 point spectrum of 2-4 pixel resolution.  Set 'nrun' based
on the number of points in your spectrum and the resolution.
For a spectrum of NPTS pixels and resolution FWHM,
'nrun' ~ NTPS / (2PI * FWHM/2.355).  See Tonry and Davis 1979, A.J., 84, 1511.
.le
.ls sig0 = 0. [real], sig1 = 1. [real], sig2 = 0. [real], sig3 = 0. [real]
These are the coefficients of a polynomial used to convert the width of a
parabola fit to the cross-correlation peak to a velocity dispersion:
.le
.ls
dispersion = sig0 + sig1 * w + sig2 * w^2 + sig3 * w^3 ,
.le
.ls
Where the width w is in pixels.  Appropriate values for these coefficients are
best found by convolving Gaussians of known width with your template spectra,
running 'xcor'with the defaults for 'sig0' through 'sig3' and 
fitting a polynomial to the
results.  Make sure you have selected appropriate values of 
'order', 'bell_window',
'low_bin', and 'nrun' before doing this calibration since these coefficients are
affected by those parameters in a non-linear way.
NOTE: THE ACCURACY OF VELOCITY DISPERSIONS FOUND BY XCOR DEPEND
CRITICALLY ON PROPER VALUES FOR THESE COEFFICIENTS.
.le
.ls logfiles = "STDOUT,xcor.log" [file name]
All task results are recorded in these files.
.le
.ls cursor = "" [graphics cursor file]
Graphics cursor input.  When null the standard cursor is used otherwise
the specified file is used.
.le
.ih
EXAMPLES
1. Obtain the redshift and dispersion of a single galaxy:

.nf
cl> xcor template galaxy
.fi

2. Obtain redshifts for a whole night's worth of galaxy spectra using 5
different templates:

.nf
cl> xcor @temp.ls @nite1.ls
.fi

Where the file 'temp.ls' contains the names of the 5 template images and the
file 'nite1.ls' contains the name of the galaxy images.
.ih
BUGS
Arithmetic errors are not trapped, and they cause the process to halt.
This can be annoying if you wish to run many solutions overnight and a
rotten apple ruins the job near the beginning.
.ih
SEE ALSO
.endhelp
