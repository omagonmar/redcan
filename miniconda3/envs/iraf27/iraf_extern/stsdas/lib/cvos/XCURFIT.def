xcurfit

# Library $iraf/math/curfit

# Notes
# ----
# Functions contained in cv_userfncd.x and cv_userfncr.x were not 
# included because they all take the address of an external user routine.  
# The routines that were not included are:
#		dcv_b1user (cv, x)
#		dcv_buser (cv, x, npts)
#		dcv_evuser (cv, x, yfit, npts)
#		dcvuserfnc (cv, fnc)
#		rcv_b1user (cv, x)
#		rcv_buser (cv, x, npts)
#		rcv_evuser (cv, x, yfit, npts)
#		cvuserfnc (cv, fnc)


/h/# include <c_iraf.h>
/h/

/c/# include <xcurfit.h>
/c/# include <c_iraf_priv.h>
/c/# include <stdlib.h>
/c/

cv_b1evald.x:procedure dcv_b1leg (x, order, k1, k2, basis)
cv_b1evald.x:procedure dcv_b1cheb (x, order, k1, k2, basis)
cv_b1evald.x:procedure dcv_b1spline1 (x, npieces, k1, k2, basis, left)
cv_b1evald.x:procedure dcv_b1spline3 (x, npieces, k1, k2, basis, left)
cv_b1evalr.x:procedure rcv_b1leg (x, order, k1, k2, basis)
cv_b1evalr.x:procedure rcv_b1cheb (x, order, k1, k2, basis)
cv_b1evalr.x:procedure rcv_b1spline1 (x, npieces, k1, k2, basis, left)
cv_b1evalr.x:procedure rcv_b1spline3 (x, npieces, k1, k2, basis, left)
cv_bevald.x:procedure dcv_bcheb (x, npts, order, k1, k2, basis)
cv_bevald.x:procedure dcv_bleg (x, npts, order, k1, k2, basis)
cv_bevald.x:procedure dcv_bspline1 (x, npts, npieces, k1, k2, basis, left)
cv_bevald.x:procedure dcv_bspline3 (x, npts, npieces, k1, k2, basis, left)
cv_bevalr.x:procedure rcv_bcheb (x, npts, order, k1, k2, basis)
cv_bevalr.x:procedure rcv_bleg (x, npts, order, k1, k2, basis)
cv_bevalr.x:procedure rcv_bspline1 (x, npts, npieces, k1, k2, basis, left)
cv_bevalr.x:procedure rcv_bspline3 (x, npts, npieces, k1, k2, basis, left)
cv_fevald.x:procedure dcv_evcheb (coeff, x, yfit, npts, order, k1, k2)
cv_fevald.x:procedure dcv_evleg (coeff, x, yfit, npts, order, k1, k2)
cv_fevald.x:procedure dcv_evspline1 (coeff, x, yfit, npts, npieces, k1, k2)
cv_fevald.x:procedure dcv_evspline3 (coeff, x, yfit, npts, npieces, k1, k2)
cv_fevalr.x:procedure rcv_evcheb (coeff, x, yfit, npts, order, k1, k2)
cv_fevalr.x:procedure rcv_evleg (coeff, x, yfit, npts, order, k1, k2)
cv_fevalr.x:procedure rcv_evspline1 (coeff, x, yfit, npts, npieces, k1, k2)
cv_fevalr.x:procedure rcv_evspline3 (coeff, x, yfit, npts, npieces, k1, k2)
#cv_userfncd.x:procedure dcv_b1user (cv, x)
#cv_userfncd.x:procedure dcv_buser (cv, x, npts)
#cv_userfncd.x:procedure dcv_evuser (cv, x, yfit, npts)
#cv_userfncd.x:procedure dcvuserfnc (cv, fnc)
#cv_userfncr.x:procedure rcv_b1user (cv, x)
#cv_userfncr.x:procedure rcv_buser (cv, x, npts)
#cv_userfncr.x:procedure rcv_evuser (cv, x, yfit, npts)
#cv_userfncr.x:procedure cvuserfnc (cv, fnc)
cvaccumd.x:procedure dcvaccum (cv, x, y, w, wtflag)
cvaccumr.x:procedure cvaccum (cv, x, y, w, wtflag)
cvacptsd.x:procedure dcvacpts (cv, x, y, w, npts, wtflag)
cvacptsr.x:procedure cvacpts (cv, x, y, w, npts, wtflag)
cvchomatd.x:procedure dcvchofac (matrix, nbands, nrows, matfac, ier)
cvchomatd.x:procedure dcvchoslv (matfac, nbands, nrows, vector, coeff)
cvchomatr.x:procedure rcvchofac (matrix, nbands, nrows, matfac, ier)
cvchomatr.x:procedure rcvchoslv (matfac, nbands, nrows, vector, coeff)
cvcoeffd.x:procedure dcvcoeff (cv, coeff, ncoeff)
cvcoeffr.x:procedure cvcoeff (cv, coeff, ncoeff)
cverrorsd.x:procedure dcverrors (cv, y, w, yfit, npts, chisqr, errors)
cverrorsr.x:procedure cverrors (cv, y, w, yfit, npts, chisqr, errors)
cvevald.x:double procedure dcveval (cv, x)
cvevalr.x:real procedure cveval (cv, x)
cvfitd.x:procedure dcvfit (cv, x, y, w, npts, wtflag, ier)
cvfitr.x:procedure cvfit (cv, x, y, w, npts, wtflag, ier)
cvfreed.x:procedure dcvfree (cv)
cvfreer.x:procedure cvfree (cv)
cvinitd.x:procedure dcvinit (cv, curve_type, order, xmin, xmax)
cvinitr.x:procedure cvinit (cv, curve_type, order, xmin, xmax)
cvpowerd.x:procedure dcvpower (cv, ps_coeff, ncoeff)
cvpowerd.x:procedure dcvepower (cv, y, w, yfit, npts, chisqr, perrors)
cvpowerd.x:procedure dcv_mlegen (matrix, ncoeff)
cvpowerd.x:procedure dcv_etransform (cv, covar, elm, perrors, ncoeff)
cvpowerd.x:procedure dcv_legen (matrix, cf_coeff, ps_coeff, ncoeff)
cvpowerd.x:double procedure dcv_legcoeff (k, n)
cvpowerd.x:procedure dcv_mcheby (matrix, ncoeff)
cvpowerd.x:procedure dcv_cheby (matrix, cf_coeff, ps_coeff, ncoeff)
cvpowerd.x:double procedure dcv_chebcoeff (m, n)
cvpowerd.x:procedure dcv_normalize (cv, ps_coeff, ncoeff)
cvpowerd.x:procedure dcv_enormalize (cv, elm, ncoeff)
cvpowerd.x:double procedure dcv_bcoeff (n, i)
cvpowerd.x:double procedure dcv_factorial (n)
cvpowerd.x:procedure cv_mmuld (a, b, c, ndim)
cvpowerr.x:procedure cvpower (cv, ps_coeff, ncoeff)
cvpowerr.x:procedure cvepower (cv, y, w, yfit, npts, chisqr, perrors)
cvpowerr.x:procedure rcv_mlegen (matrix, ncoeff)
cvpowerr.x:procedure rcv_etransform (cv, covar, elm, perrors, ncoeff)
cvpowerr.x:procedure rcv_legen (matrix, cf_coeff, ps_coeff, ncoeff)
cvpowerr.x:double procedure rcv_legcoeff (k, n)
cvpowerr.x:procedure rcv_mcheby (matrix, ncoeff)
cvpowerr.x:procedure rcv_cheby (matrix, cf_coeff, ps_coeff, ncoeff)
cvpowerr.x:double procedure rcv_chebcoeff (m, n)
cvpowerr.x:procedure rcv_normalize (cv, ps_coeff, ncoeff)
cvpowerr.x:procedure rcv_enormalize (cv, elm, ncoeff)
cvpowerr.x:double procedure rcv_bcoeff (n, i)
cvpowerr.x:double procedure rcv_factorial (n)
cvpowerr.x:procedure cv_mmulr (a, b, c, ndim)
cvrefitd.x:procedure dcvrefit (cv, x, y, w, ier)
cvrefitr.x:procedure cvrefit (cv, x, y, w, ier)
cvrejectd.x:procedure dcvrject (cv, x, y, w)
cvrejectr.x:procedure cvrject (cv, x, y, w)
cvrestored.x:procedure dcvrestore (cv, fit)
cvrestorer.x:procedure cvrestore (cv, fit)
cvsaved.x:procedure dcvsave (cv, fit)
cvsaver.x:procedure cvsave (cv, fit)
cvsetd.x:procedure dcvset (cv, curve_type, xmin, xmax, coeff, ncoeff)
cvsetr.x:procedure cvset (cv, curve_type, xmin, xmax, coeff, ncoeff)
cvsolved.x:procedure dcvsolve (cv, ier)
cvsolver.x:procedure cvsolve (cv, ier)
cvstatd.x:int procedure dcvstati (cv, param)
cvstatd.x:double procedure dcvstatd (cv, param)
cvstatr.x:int procedure cvstati (cv, param)
cvstatr.x:real procedure cvstatr (cv, param)
cvvectord.x:procedure dcvvector (cv, x, yfit, npts)
cvvectorr.x:procedure cvvector (cv, x, yfit, npts)
cvzerod.x:procedure dcvzero (cv)
cvzeror.x:procedure cvzero (cv)
