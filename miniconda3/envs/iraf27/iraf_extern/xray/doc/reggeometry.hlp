.help reggeometry Oct92 xray
.ih
NAME
reggeometry -- description of region geometry 

.ih
USAGE
This document describes the geometry of regions available for spatial
filtering in IRAF/PROS analysis.

.ih
GEOMETRIC SHAPES
Several   geometric shapes are  used to   describe  regions. The valid
shapes are:
.nf

shape:		arguments:

ANNULUS		xcenter ycenter inner_radius outer_radius
BOX		xcenter ycenter xwidth yheight (optional angle)
CIRCLE		xcenter ycenter radius
ELLIPSE		xcenter ycenter xwidth yheight angle
FIELD		none
PIE		xcenter ycenter angle1 angle2
POINT		x1 y1 x2 y2 ... xn yn
POLYGON		x1 y1 x2 y2 ... xn yn
ROTBOX		xcenter ycenter xwidth yheight angle

.fi
All  arguments   are real values;  integer  values   are automatically
converted  to real where  necessary.   All angles  are in degrees  and
specify angles that run counter-clockwise from the positive y-axis.


Shapes can be specified using "command" syntax:
.nf

		<shape> arg1 arg2 ...

or using "routine" syntax:

		<shape>(arg1, arg2, ...)

.fi
or by any combination of the these. (Of course, the parentheses must 
balance and there cannot be more commas than necessary.) The shape 
keywords are case-insensitive.  Furthermore, any shape can be 
specified by its unique abbreviation.  For example, one can specify 
three circular regions as:
.nf

	"CIRCLE 512 512 50; CIR(128 128, 10); c(650,650,20)"

.fi
(Quotes are required when a region descriptor is placed on an IRAF command
line.  They are not required when a region descriptor is input in response
to an IRAF parameter query.)

The  \fIannulus\fR    shape  specifies  annuli, centered  at  xcenter,
ycenter, with inner and outer radii (r1, r2). For example,
.nf

		ANNULUS 25 25 5 10

.fi
specifies an annulus centered at 25.0 25.0 with an inner radius of 5.0 and
an outer radius of 10. Assuming (as will be done for all examples in this
document, unless otherwise noted) this shape is saved in a mask of size 40x40,
it can be displayed using the task \fBpllist\fR:
.tp 50
.nf

mask file:	foo.pl
region_A:	ANNULUS(25.00,25.00,5.00,10.00)

  40: ........................................
  39: ........................................
  38: ........................................
  37: ........................................
  36: ........................................
  35: ........................................
  34: ....................111111111...........
  33: ...................11111111111..........
  32: .................111111111111111........
  31: .................111111111111111........
  30: ................11111111111111111.......
  29: ...............1111111.....1111111......
  28: ...............111111.......111111......
  27: ...............11111.........11111......
  26: ...............11111.........11111......
  25: ...............11111.........11111......
  24: ...............11111.........11111......
  23: ...............11111.........11111......
  22: ...............111111.......111111......
  21: ...............1111111.....1111111......
  20: ................11111111111111111.......
  19: .................111111111111111........
  18: .................111111111111111........
  17: ...................11111111111..........
  16: ....................111111111...........
  15: ........................................
  14: ........................................
  13: ........................................
  12: ........................................
  11: ........................................
  10: ........................................
   9: ........................................
   8: ........................................
   7: ........................................
   6: ........................................
   5: ........................................
   4: ........................................
   3: ........................................
   2: ........................................
   1: ........................................

.fi
The \fIbox\fR shape specifies an orthogonally oriented box,
centered at xcenter, ycenter, of size xwidth, yheight. It requires four
arguments and accepts an optional fifth argument to specify a rotation angle.
When the rotation angle is specified (in degrees), the box is rotated by
an angle that runs counter-clockwise from the positive y-axis.

The \fIrotbox\fR shape specifies a rotated box, centered at
xcenter, ycenter, of size xwidth, yheight. The box is rotated by an angle
specified in degrees that runs counter-clockwise from the positive y-axis.
Rotbox requires five arguments.  Rotbox is identical to box when the latter
is called with 5 arguments.  It is provided for backwards compatibility
with ximage, which has a rotbox cursor as well as a box cursor.

The \fIcircle\fR shape specifies a circle, centered at xcenter,
ycenter, of radius r.  It requires three arguments.

The \fIellipse\fR shape specifies an ellipse, centered at
xcenter, ycenter, with x-axis width a and the y-axis length b defined such
that:
.nf

		x**2/a**2 + y**2/b**2 = 1

.fi
Note that a can be less than, equal to, or greater than b. The ellipse
is rotated the specified number of degrees.  The rotation is done according
to astronomical convention, counter-clockwise from the positive y-axis.
An ellipse defined by:
.nf

		ELLIPSE 20 20 5 10 45

will look like this:
.fi
.tp 50
.nf

mask file:	foo.pl
region_A:	ELLIPSE(20.00,20.00,5.00,10.00,45.00)

  40: ........................................
  39: ........................................
  38: ........................................
  37: ........................................
  36: ........................................
  35: ........................................
  34: ........................................
  33: ........................................
  32: ........................................
  31: ........................................
  30: ........................................
  29: ........................................
  28: ........................................
  27: ............111111......................
  26: ............11111111....................
  25: ............111111111...................
  24: ............11111111111.................
  23: ............111111111111................
  22: ............111111111111................
  21: .............111111111111...............
  20: .............1111111111111..............
  19: ..............111111111111..............
  18: ...............111111111111.............
  17: ...............111111111111.............
  16: ................11111111111.............
  15: ..................111111111.............
  14: ...................11111111.............
  13: .....................111111.............
  12: ........................................
  11: ........................................
  10: ........................................
   9: ........................................
   8: ........................................
   7: ........................................
   6: ........................................
   5: ........................................
   4: ........................................
   3: ........................................
   2: ........................................
   1: ........................................

.fi
The \fIfield\fR shape specifies the entire field as a
region.  It is not usually specified explicitly, but is used implicitly in the
case where no regions are specified, that is, in cases where either a null
string or some abbreviation of the string "none" is input.
\fIField\fR takes no arguments.

The \fIpie\fR shape specifies an angular wedge of the entire field,
centered at xcenter, ycenter.  The wedge runs between the two specified angles.
The angles are given in degrees, running counter-clockwise from the positive
y-axis. For example,
.nf

		PIE 20 20 90 180

.fi
defines a region from 90 degrees to 180 degrees, i.e., quadrant 3 of the
Cartesian plane. The display of such a region looks like this:
.tp 50
.nf

mask file:	foo.pl
region_A:	PIE(20.00,20.00,90.00,180.00)

  40: ........................................
  39: ........................................
  38: ........................................
  37: ........................................
  36: ........................................
  35: ........................................
  34: ........................................
  33: ........................................
  32: ........................................
  31: ........................................
  30: ........................................
  29: ........................................
  28: ........................................
  27: ........................................
  26: ........................................
  25: ........................................
  24: ........................................
  23: ........................................
  22: ........................................
  21: ........................................
  20: 11111111111111111111....................
  19: 11111111111111111111....................
  18: 11111111111111111111....................
  17: 11111111111111111111....................
  16: 11111111111111111111....................
  15: 11111111111111111111....................
  14: 11111111111111111111....................
  13: 11111111111111111111....................
  12: 11111111111111111111....................
  11: 11111111111111111111....................
  10: 11111111111111111111....................
   9: 11111111111111111111....................
   8: 11111111111111111111....................
   7: 11111111111111111111....................
   6: 11111111111111111111....................
   5: 11111111111111111111....................
   4: 11111111111111111111....................
   3: 11111111111111111111....................
   2: 11111111111111111111....................
   1: 11111111111111111111....................

.fi
The pie slice specified is always a counter-clockwise sweep between
the angles, starting at the first angle and ending at the second.  Thus:
.nf

		PIE 10 15 30 60

.fi
describes a 30 degree sweep from 11 o'clock to 10 o'clock, while:
.nf

		PIE 10 15 60 30

.fi
describes a 330 degree counter-clockwise sweep from 10 o'clock to 11 o'clock
passing through 12 o'clock (0 degrees). Note in both of these examples that
the center of the slice can be anywhere on the plane.  The second mask looks
like this:
.tp 50
.nf

mask file:	foo.pl
region_A:	PIE(10.00,15.00,60.00,30.00)

  40: 1111111111111111111111111111111111111111
  39: 1111111111111111111111111111111111111111
  38: 1111111111111111111111111111111111111111
  37: 1111111111111111111111111111111111111111
  36: 1111111111111111111111111111111111111111
  35: 1111111111111111111111111111111111111111
  34: 1111111111111111111111111111111111111111
  33: 1111111111111111111111111111111111111111
  32: 1111111111111111111111111111111111111111
  31: 1111111111111111111111111111111111111111
  30: .111111111111111111111111111111111111111
  29: .111111111111111111111111111111111111111
  28: ..11111111111111111111111111111111111111
  27: ...1111111111111111111111111111111111111
  26: ...1111111111111111111111111111111111111
  25: ....111111111111111111111111111111111111
  24: ....111111111111111111111111111111111111
  23: .....11111111111111111111111111111111111
  22: .....11111111111111111111111111111111111
  21: ......1111111111111111111111111111111111
  20: 1......111111111111111111111111111111111
  19: 111....111111111111111111111111111111111
  18: 1111....11111111111111111111111111111111
  17: 111111..11111111111111111111111111111111
  16: 11111111.1111111111111111111111111111111
  15: 1111111111111111111111111111111111111111
  14: 1111111111111111111111111111111111111111
  13: 1111111111111111111111111111111111111111
  12: 1111111111111111111111111111111111111111
  11: 1111111111111111111111111111111111111111
  10: 1111111111111111111111111111111111111111
   9: 1111111111111111111111111111111111111111
   8: 1111111111111111111111111111111111111111
   7: 1111111111111111111111111111111111111111
   6: 1111111111111111111111111111111111111111
   5: 1111111111111111111111111111111111111111
   4: 1111111111111111111111111111111111111111
   3: 1111111111111111111111111111111111111111
   2: 1111111111111111111111111111111111111111
   1: 1111111111111111111111111111111111111111

.fi
The pie slice is usually combined with other shapes, such as circles
and annuli, using boolean operations (see below and in "help regalgebra").

The \fIpoint\fR shape allows single pixels to be included or
excluded.  Although the (x,y) values are real numbers, they are truncated
to integer and the corresponding pixel is included or excluded, as specified.

Several points can be put in one region declaration; they are given the
same region mask value.  For example,
.nf

		POINT (5,6,  10,11,  20,20,  35,30)

.fi
will give the same region mask value to all four points, as shown below:
.tp 50
.nf

mask file:	foo.pl
region_A:	POINT(5.00,6.00,10.00,11.00,20.00,20.00,35.00,40.00)

  40: ..................................1.....
  39: ........................................
  38: ........................................
  37: ........................................
  36: ........................................
  35: ........................................
  34: ........................................
  33: ........................................
  32: ........................................
  31: ........................................
  30: ........................................
  29: ........................................
  28: ........................................
  27: ........................................
  26: ........................................
  25: ........................................
  24: ........................................
  23: ........................................
  22: ........................................
  21: ........................................
  20: ...................1....................
  19: ........................................
  18: ........................................
  17: ........................................
  16: ........................................
  15: ........................................
  14: ........................................
  13: ........................................
  12: ........................................
  11: .........1..............................
  10: ........................................
   9: ........................................
   8: ........................................
   7: ........................................
   6: ....1...................................
   5: ........................................
   4: ........................................
   3: ........................................
   2: ........................................
   1: ........................................

.fi
The \fIpolygon\fR shape specifies a polygon with vertices
(x1, y1) ... (xn, yn). The polygon is closed automatically: one should
not specify the last vertex to be the same as the first.  Any number of
vertices are allowed.  For example, the following polygon defines a
right triangle as shown below:
.nf

		POLY (10,10,  10,30,  30,30)
.fi
.tp 50
.nf

mask file:	foo.pl
region_A:	POLYGON(10.00,10.00,10.00,30.00,30.00,30.00)

  40: ........................................
  39: ........................................
  38: ........................................
  37: ........................................
  36: ........................................
  35: ........................................
  34: ........................................
  33: ........................................
  32: ........................................
  31: ........................................
  30: ..........11111111111111111111..........
  29: ..........1111111111111111111...........
  28: ..........111111111111111111............
  27: ..........11111111111111111.............
  26: ..........1111111111111111..............
  25: ..........111111111111111...............
  24: ..........11111111111111................
  23: ..........1111111111111.................
  22: ..........111111111111..................
  21: ..........11111111111...................
  20: ..........1111111111....................
  19: ..........111111111.....................
  18: ..........11111111......................
  17: ..........1111111.......................
  16: ..........111111........................
  15: ..........11111.........................
  14: ..........1111..........................
  13: ..........111...........................
  12: ..........11............................
  11: ..........1.............................
  10: ........................................
   9: ........................................
   8: ........................................
   7: ........................................
   6: ........................................
   5: ........................................
   4: ........................................
   3: ........................................
   2: ........................................
   1: ........................................

.fi
Note that polygons can get twisted upon themselves if edge lines
cross.  Thus:
.nf

		POLY (10,10,  20,20,  20,10,  10,20)

.fi
will produce an area which is two triangles, like butterfly wings, as shown
below:
.tp 50
.nf

mask file:	foo.pl
region_A:	POLYGON(10.00,10.00,20.00,20.00,20.00,10.00,10.00,
		20.00)

  40: ........................................
  39: ........................................
  38: ........................................
  37: ........................................
  36: ........................................
  35: ........................................
  34: ........................................
  33: ........................................
  32: ........................................
  31: ........................................
  30: ........................................
  29: ........................................
  28: ........................................
  27: ........................................
  26: ........................................
  25: ........................................
  24: ........................................
  23: ........................................
  22: ........................................
  21: ........................................
  20: ........................................
  19: ..........1........1....................
  18: ..........11......11....................
  17: ..........111....111....................
  16: ..........1111..1111....................
  15: ..........1111111111....................
  14: ..........1111..1111....................
  13: ..........111....111....................
  12: ..........11......11....................
  11: ..........1........1....................
  10: ........................................
   9: ........................................
   8: ........................................
   7: ........................................
   6: ........................................
   5: ........................................
   4: ........................................
   3: ........................................
   2: ........................................
   1: ........................................

.fi

Several regions with different mask values can be combined in the 
same mask.  This supports comparing data from the different regions.  
(For information on how to combine different shapes into a single 
region, see "help regalgebra".)  For example, consider the following 
set of regions:
.nf

		ANNULUS 25 25 5 10
		ELLIPSE 20 20 5 10 315
		BOX 15 15 5 10

.fi
The resulting mask will look as follows:
.tp 50
.nf

mask file:	foo.pl
region_A:	ANNULUS(25.00,25.00,5.00,10.00)
region_B:	ELLIPSE(20.00,20.00,5.00,10.00,315.00)
region_C:	BOX(15.00,15.00,5.00,10.00)

  40: ........................................
  39: ........................................
  38: ........................................
  37: ........................................
  36: ........................................
  35: ........................................
  34: ....................111111111...........
  33: ...................11111111111..........
  32: .................111111111111111........
  31: .................111111111111111........
  30: ................11111111111111111.......
  29: ...............1111111.....1111111......
  28: ...............111111.......111111......
  27: ...............11111.222222..11111......
  26: ...............111122222222..11111......
  25: ...............111222222222..11111......
  24: ...............122222222222..11111......
  23: ...............222222222222..11111......
  22: ...............222222222222.111111......
  21: ..............222222222222.1111111......
  20: ............333332222222221111111.......
  19: ............33333222222221111111........
  18: ............33333222222211111111........
  17: ............333332222222111111..........
  16: ............33333222222111111...........
  15: ............333332222...................
  14: ............33333222....................
  13: ............333332......................
  12: ............33333.......................
  11: ............33333.......................
  10: ........................................
   9: ........................................
   8: ........................................
   7: ........................................
   6: ........................................
   5: ........................................
   4: ........................................
   3: ........................................
   2: ........................................
   1: ........................................
.fi

.ih
REGION ACCELERATORS
Two types of \fBaccelerators\fR, to simplify region specification, are 
provided as natural extensions to the ways shapes are described.
These are:  extended lists of parameters, specifying multiple regions, 
valid for annulus and pie; and a form \fIn=<int>\fR, also valid for 
annulus and pie.  In both cases, one specification is used to define 
several different regions, that is, to define shapes with different 
mask values in the region mask.

Several annuli at the same center can be specified in one region
expression by specifying more than two radii.  If \fIN\fR radii are
specified, then \fIN\fR-1 annuli result, with the outer radius of each
preceding annulus being the inner radius of the succeeding annulus.  
Each annulus is considered a separate region, and is given a separate 
mask value. For example,
.nf

		ANNULUS 20 20 0 2 5 10 15 20

.fi
specifies five different annuli centered at 20 20, and is equivalent to:
.nf

		ANNULUS 20.0 20.0  0  2
		ANNULUS	20.0 20.0  2  5
		ANNULUS 20.0 20.0  5 10
		ANNULUS 20.0 20.0 10 15
		ANNULUS 20.0 20.0 15 20

.fi
The mask is shown below:
.tp 50
.nf

mask file:	foo.pl
region_A:	ANNULUS(20.00,20.00,0.00,2.00,5.00,10.00,15.00,20.00)

  40: ........................................
  39: .............5555555555555..............
  38: ...........55555555555555555............
  37: .........555555555555555555555..........
  36: ........55555555555555555555555.........
  35: ......555555555555555555555555555.......
  34: .....55555555544444444444555555555......
  33: ....5555555544444444444444455555555.....
  32: ....5555555444444444444444445555555.....
  31: ...555555444444444444444444444555555....
  30: ..55555544444444444444444444444555555...
  29: ..55555544444443333333334444444555555...
  28: .5555554444444333333333334444444555555..
  27: .5555544444433333333333333344444455555..
  26: 555555444444333333333333333444444555555.
  25: 555554444443333333333333333344444455555.
  24: 555554444433333332222233333334444455555.
  23: 555554444433333322222223333334444455555.
  22: 555554444433333222222222333334444455555.
  21: 555554444433333222111222333334444455555.
  20: 555554444433333222111222333334444455555.
  19: 555554444433333222111222333334444455555.
  18: 555554444433333222222222333334444455555.
  17: 555554444433333322222223333334444455555.
  16: 555554444433333332222233333334444455555.
  15: 555554444443333333333333333344444455555.
  14: 555555444444333333333333333444444555555.
  13: .5555544444433333333333333344444455555..
  12: .5555554444444333333333334444444555555..
  11: ..55555544444443333333334444444555555...
  10: ..55555544444444444444444444444555555...
   9: ...555555444444444444444444444555555....
   8: ....5555555444444444444444445555555.....
   7: ....5555555544444444444444455555555.....
   6: .....55555555544444444444555555555......
   5: ......555555555555555555555555555.......
   4: ........55555555555555555555555.........
   3: .........555555555555555555555..........
   2: ...........55555555555555555............
   1: .............5555555555555..............

.fi
The annulus type also  accepts an \fIn=<int>\fR syntax for specifying
radii.  If \fIn=<int>\fR is specified, the two immediately preceding 
radii (\fIrn\fR and \fIrm\fR) are divided into \fIint\fR annuli, such 
that the inner radius of the first is \fIrn\fR and the outer radius of
the last is \fIrm\fR.  This \fIn=<int>\fR syntax can occur at any 
place in an ANNULUS description.  (Note, however, that no more than 
one ANNULUS keyword in an expression may have any accelerators.)
For example,
.nf

		ANNULUS 20 20 0 2 5 20 n=3

.fi
is equivalent to the last two examples given above. Note that the 
\fIn=<int>\fR syntax allows any single alphabetic character before the 
"=", i.e, i=3, z=3, etc. are all equivalent.

Specifying several angles in one pie slice expression is equivalent to
specifying several separate slices with the same  center.  As with the
annulus, if \fIN\fR  angles  are  specified,  then  \fIN\fR-1   slices
result, with the ending angle of each preceding slice being the 
starting angle  of the succeeding  slice.  Each slice is  considered a
separate region, and is given a separate mask value. For example,
.nf

	PIE 12 12 315 45 115 270

.fi
specifies three regions as shown below:
.tp 50
.nf

mask file:	foo.pl
region_A:	PIE(12.00,12.00,315.00,45.00,115.00,220.00)

  40: 1111111111111111111111111111111111111111
  39: 111111111111111111111111111111111111111.
  38: 11111111111111111111111111111111111111..
  37: 1111111111111111111111111111111111111...
  36: 111111111111111111111111111111111111....
  35: 11111111111111111111111111111111111.....
  34: 1111111111111111111111111111111111......
  33: 111111111111111111111111111111111.......
  32: 11111111111111111111111111111111........
  31: 1111111111111111111111111111111.........
  30: 111111111111111111111111111111..........
  29: 11111111111111111111111111111...........
  28: 1111111111111111111111111111............
  27: 111111111111111111111111111.............
  26: 11111111111111111111111111..............
  25: 1111111111111111111111111...............
  24: 111111111111111111111111................
  23: 21111111111111111111111.................
  22: 2211111111111111111111..................
  21: 222111111111111111111...................
  20: 22221111111111111111....................
  19: 2222211111111111111.....................
  18: 222222111111111111......................
  17: 22222221111111111.......................
  16: 2222222211111111........................
  15: 222222222111111.........................
  14: 22222222221111..........................
  13: 2222222222211...........................
  12: 222222222222............................
  11: 222222222333............................
  10: 2222222333333...........................
   9: 22222333333333..........................
   8: 222333333333333.........................
   7: 2333333333333333........................
   6: 33333333333333333.......................
   5: 33333333333333333.......................
   4: 333333333333333333......................
   3: 3333333333333333333.....................
   2: 33333333333333333333....................
   1: 333333333333333333333...................

.fi
The pie type also accepts the \fIn=<int>\fR syntax for specifying
angles.  If \fIn=<int>\fR is specified, the two immediately preceding 
angles (\fIan\fR and \fIam\fR) are divided  into \fIint\fR wedges, 
such that the starting angle of the first is \fIan\fR and the ending 
angle of the last is \fIam\fR.  This \fIn=<int>\fR syntax can occur at 
any place in a pie description. (Note, however, that no more than one 
PIE keyword in an expression may have any accelerators.)  For example,
.nf

	PIE 12 12 275 310 50 a=5 85 90

is equivalent to

	PIE 12 12 275 310 330 350 10 30 50 85 90

.fi
In this example, eight separate regions are defined as shown:
.tp 50
.nf

mask file:	foo.pl
region_A:	PIE(12.00,12.00,275.00,310.00,50.00,a=5.00,85.00,
		135.00)

  40: 5555555444444444333333333333222222222222
  39: 5555555444444444333333333332222222222222
  38: 5555555444444444333333333332222222222222
  37: 5555555444444444333333333322222222222222
  36: 5555555444444444333333333222222222222222
  35: 5555555444444444333333333222222222222221
  34: 5555555544444443333333332222222222222211
  33: 5555555544444443333333332222222222222111
  32: 5555555544444443333333322222222222211111
  31: 6555555544444443333333222222222222111111
  30: 6555555544444443333333222222222221111111
  29: 6655555554444433333332222222222211111111
  28: 6655555554444433333332222222222111111111
  27: 6665555554444433333322222222211111111111
  26: 6665555554444433333322222222111111111111
  25: 6666555554444433333222222221111111111111
  24: 6666655554444433332222222211111111111111
  23: 6666655555444333332222222111111111111111
  22: 6666665555444333322222211111111111111111
  21: 7666665555444333322222111111111111111111
  20: 7766666555444333222221111111111111111111
  19: 7776666555444333222211111111111111111111
  18: 7777666655444332222111111111111111111111
  17: 7777776665543322211111111111111111111111
  16: 7777777665543322111111111111111111111111
  15: 7777777766543221111111111111111111111111
  14: 7777777776543211111111111111111111......
  13: 77777777776421111111111.................
  12: 888888888888............................
  11: 88888888888.............................
  10: 8888888888..............................
   9: 888888888...............................
   8: 88888888................................
   7: 8888888.................................
   6: 888888..................................
   5: 88888...................................
   4: 8888....................................
   3: 888.....................................
   2: 88......................................
   1: 8.......................................

.fi
Note that an extended list of pixels in a point specification is \fInot\fR 
an accelerator.  An accelerator is a way to define multiple regions 
with a single specification, whereas the points are all given the same 
mask value.

.ih
TIME REQUIREMENTS
The time required to make a mask is proportional to the number
of separate regions being created.  It can take a minute or more if
many regions are involved.  For such cases, it is recommended that
\fIplcreate\fR be used to make a binary PL mask from the ASCII region
descriptor, if the mask is going to be input into a task more than
once.

.ih
BUGS
There is a limit to the number of separate regions that can be
created in a single mask.  We are looking into how to raise that
limit.

.ih
SEE ALSO
.nf
	see also help regions
		 help regalgebra
		 help regcoords
.fi
See the IRAF PLIO documentation for more information about PLIO.

See the COORDS help for a description of how pixels partly in regions
are handled.
.endhelp
