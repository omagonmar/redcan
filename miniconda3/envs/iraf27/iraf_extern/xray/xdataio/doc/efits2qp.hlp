# $Log: efits2qp.hlp,v $
# Revision 11.0  1997/11/06 16:34:04  prosb
# General Release 2.5
#
# Revision 9.0  1995/11/16 18:57:55  prosb
# General Release 2.4
#
#Revision 8.0  1994/06/27  15:19:04  prosb
#General Release 2.3.1
#
#Revision 1.12  94/05/18  17:32:09  prosb
#krm - made some small edits.
#
#Revision 1.11  94/05/17  15:47:09  prosb
#krm - updated examples.
#
#Revision 1.10  94/05/17  13:48:15  prosb
#krm - updated for efits2qp change ... replaced "dataset" parameter with
#"inst" and "datatype".
#
#Revision 1.9  94/05/16  15:45:40  prosb
#krm - added a comment to the BUGS section, regarding the screening
#of y=1 photons.
#
#Revision 1.8  94/05/13  17:04:57  prosb
#Modified help file slightly.
#
#Revision 1.7  94/05/12  17:19:00  prosb
#Slightly modified efits2qp help file.
#
#Revision 1.6  94/05/06  15:08:19  prosb
#krm - modified sortsize description.
#
#Revision 1.5  94/05/06  14:31:42  prosb
#krm - moved sortsize parameter to the bottom of the list.
#
#Revision 1.4  94/05/06  11:02:07  prosb
#krm - 5/6/94 - added comment for filtering y=1 events for IPCU data.
#
#Revision 1.3  94/04/13  17:23:41  prosb
#krm - 4/13/94 - EFITS2QP was modified to write the intermediate file
#"root"_unsrtd.qp, instead of "./dummy.qp".  Made the help file consistent
#with this change.
#
#Revision 1.2  94/04/05  15:04:58  prosb
#KRM - 4/5/94 - added comments to the SEE ALSO section.
#
#Revision 1.1  94/03/17  14:11:53  prosb
#Initial revision
#
# $Header: /home/pros/xray/xdataio/doc/RCS/efits2qp.hlp,v 11.0 1997/11/06 16:34:04 prosb Exp $
#
.help efits2qp Mar94 xray.xdataio
.ih
NAME
efits2qp -- Convert an Einstein FITS file (containing BINTABLE extensions) 
into an IRAF/PROS QPOE file.
.ih
USAGE
efits2qp fitsfile inst datatype qpoefile
.ih
DESCRIPTION

\fIefits2qp\fR converts an Einstein FITS file (containing BINTABLE extensions)
into an IRAF/PROS QPOE file.  The user must specify the full name of the
FITS file as well as the appropriate Einstein instrument type (ipc or hri).
If the instrument is "ipc", the user must specify the datatype
of the FITS file (event, slew, or unscreened).  If the instrument
is "hri", the datatype is set to "event".

The conversion is performed by the task \fIfits2qp\fR with the parameters 
set to the values appropriate to the particular instrument and datatype.

In addition, if the input FITS file is of datatype "event", the \fIqpaddaux\fR 
task is run to convert the Einstein TGR records to the general TSI extension.

If the input FITS file is from the IPC unscreened dataset (IPCU), \fIfits2qp\fR 
creates an intermediate file ("root_unsrtd.qp") which is then sorted by the 
task \fIqpsort\fR to the specified output qpoefile name, and then deleted.
.ih 
PARAMETERS
.ls fitsfile = ""

The input FITS file name.
.le 
.ls inst = ""		(hri or ipc)

Einstein instrument type.
.le
.ls datatype = ""	(event, slew, or unscreened)

If the input instrument is "ipc", the user must provide the datatype
of the input FITS file.  If the input instrument is "hri", the 
datatype is set to "event".
.le
.ls qpoefile = "."

The output IRAF/PROS QPOE file name.  A ".qp" extension will be
added to any specified name that does not contain this extension.  
If the null string is specified, the name will be the same as the 
input FITS root with a ".qp" extension.  If a "." is used, the name 
will be the same as the input FITS root without the path so that the 
output file will be written to the current working directory.  (Note
that if the input FITS file is from the IPCU data set, an intermediate
file "root_unsrtd.qp" will be written to the same directory as the
output qpoefile.)
.le
.ls (clobber = no)	  [boolean]

If the output QPOE file already exists, this flag specifies whether
or not it can be overwritten.
.le
.ls (display = 1)	  [int]

The level of stdout display.  A setting of 0 should display no output
except warnings.  Settings above 3 are only useful for debugging purposes.
.le
.ls (qp_internals = yes)  [boolean]

Boolean flag controlling whether the internal QPOE parameters are
prompted for (see below), or whether they are defaulted to values
that are internally hardwired.  This parameter is not usually changed by 
the user.  (Prompting is normally turned off during stand-alone debugging 
only).
.le
.ls (qp_pagesize = 2048)  [int]

Page size for the QPOE file.  This parameter is internal to the 
QPOE file and should not normally be changed.
.le
.ls (qp_bucketlen = 4096) [int]

Bucket length for the QPOE file.  This parameter is internal to the
QPOE file and should not normally be changed.
.le
.ls (qp_mkindex = yes)    [boolean]

Boolean flag to indicate whether or not an index should be made for
the QPOE file.  This parameter is internal to the QPOE file and
should not normally be changed.

The qp_mkindex flag should only be set to "yes" for FITS files
with position sorted events.  The IPC unscreened FITS files are
not position sorted; hence, for IPCU data, this task will override
any user specified value and set the parameter to "no".
The default value of "yes" is used for all other datasets.

.le
.ls (qp_key = "")	  [string]

Key on which to make the QPOE index.  This parameter is internal to
the QPOE file and should not normally be changed.  With the parameter
qp_mkindex set to "yes", fits2qp generates a QPOE index of "y x".  
This parameter is not used if qp_mkindex is set to "no" (for instance,
for the IPCU dataset). 

.le
.ls (qp_debug = 0)	  [int]

Debug level for QPOE internals.  This parameter is internal to the QPOE
file and should not normally be changed.
.le
.ls (sortsize = 1000000)  [int]

For  IPCU  data, this parameter is used when sorting the events.
This parameter represents the number of bytes  that  are  to  be
sorted  at  a  time.   The  user can then tailor the task to the
amount of available memory.   Use  "help  qpsort"  to  see  more
details on sorting.
.ih
EXAMPLES

1. Use efits2qp to convert an HRI event file.
.nf
ei> efits2qp
input FITS file name: /data/hrievt2/data/17h/H1700S37.XPA
Einstein instrument (hri|ipc): hri
output IRAF/PROS QPOE file name (.): H1043.qp

Using FITS file /data/hrievt2/data/17h/H1700S37.XPA to create QPOE file.

Writing output QPOE file: H1043.qp

aux=.convtgr, type=convtgr -> H1043.qp

.fi
2. Use efits2qp to convert an IPC event file.
.nf
ei> efits2qp
input FITS file name: /data/ipcevt1/data/04h/i0423n15.xpa
Einstein instrument (hri|ipc): ipc
datatype of FITS file (event|slew|unscreened): event
output IRAF/PROS QPOE file name (.):    

Using FITS file /data/ipcevt1/data/04h/i0423n15.xpa to create QPOE file.

Writing output QPOE file: ./i0423n15.qp

aux=.convtgr, type=convtgr -> ./i0423n15.qp

.fi

3. Use efits2qp to convert an IPC slew file.
.nf
ei> efits2qp
input FITS file name: /data/slewcd/data/08h/s0824s42.f3d
Einstein instrument (hri|ipc): ipc
datatype of FITS file (event|slew|unscreened): slew
output IRAF/PROS QPOE file name (.): slew.qp

Using FITS file /data/slewcd/data/08h/s0824s42.f3d to create QPOE file.

Writing output QPOE file: slew_stemp.qp

slew_stemp.qp[y=2:] (; no exp.) -> slew.qp
Creating QPOE output file: slew.qp

.fi
4. Use efits2qp to convert an IPC unscreened file.
.nf
ei> efits2qp
input FITS file name: /data/ipcu1/data/00h/i0036s71.upa
Einstein instrument (hri|ipc): ipc
datatype of FITS file (event|slew|unscreened): unscreened
output IRAF/PROS QPOE file name (.): ipcu.qp

Using FITS file /data/ipcu1/data/00h/i0036s71.upa to create QPOE file.

char strings not yet implemented - skipping
Writing output QPOE file: ipcu_unsrtd.qp

ipcu_unsrtd.qp[y=2:] (; no exp.) -> ipcu.qp
Creating QPOE output file: ipcu.qp

.fi
.ih
BUGS

The slew and IPCU datasets have a few events which contain y pixel values
of 1.  There is a current IRAF bug which allows these events to "leak" into
any spatial screening, i.e., any region. 
Because of this bug, these events are always removed from the data by the
current version of this task.  

For the slew dataset, the FITS2QP task is used to create an intermediate
file "root_stemp.qp".  A call to QPCOPY is used to remove the y=1 events
from the intermediate file, and write out the final QPOE file.  The 
intermediate file is then deleted.

For the IPCU dataset, the events are removed during the QPSORT call.
.ih
SEE ALSO
See \fIfits2qp\fR for details on how the FITS file is converted into a 
QPOE file.  See \fIqpaddaux\fR for details on how the TGR records are
converted into the TSI extension.  See \fIqpsort\fR for details on
the sorting of the IPCU data.
For the conversion of Einstein FITS image files, see \fIstrfits\fR.
For direct access to the FITS files on the Einstein CD-ROM archive,
see the \fIeincdrom\fR package.

