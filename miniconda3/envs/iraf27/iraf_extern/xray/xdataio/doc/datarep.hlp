#$Header: /home/pros/xray/xdataio/doc/RCS/datarep.hlp,v 11.0 1997/11/06 16:34:03 prosb Exp $
#$Log: datarep.hlp,v $
#Revision 11.0  1997/11/06 16:34:03  prosb
#General Release 2.5
#
#Revision 9.0  1995/11/16 18:57:54  prosb
#General Release 2.4
#
Revision 8.0  1994/06/27  15:19:01  prosb
General Release 2.3.1

Revision 7.0  93/12/27  18:38:10  prosb
General Release 2.3

Revision 6.1  93/12/22  09:59:25  janet
*** empty log message ***

Revision 6.0  93/05/24  16:23:52  prosb
General Release 2.2

Revision 5.0  92/10/29  21:36:17  prosb
General Release 2.1

Revision 4.0  92/04/27  15:00:55  prosb
General Release 2.0:  April 1992

Revision 3.1  91/11/25  18:00:30  mo
MC	11/25/91		Update for new package structure

Revision 3.0  91/08/02  01:12:25  prosb
General Release 1.1

#Revision 2.0  91/03/06  23:36:31  pros
#General Release 1.0
#
.help datarep Dec93 xray.xdataio
.ih
NAME
datarep -- data representation conversion program
.ih
USAGE
datarep input output template iformat
.ih
DESCRIPTION
Datarep converts data files from one machine representation to
another.  The conversion is directed by a data structure template
given in the template file.  Templates have the following syntax:
.nf

	file	: deflist
	deflist	:
		| struct deflist
		| data	 deflist
	struct	: "struct" IDENTIFIER  '{' datlist '}'
	datlist	: # empty
		| data datlist
	data	: PRIMARY
		| array
	array	: PRIMARY '[' index ']'
	index	: INTEGER
		| INTEGER ',' index

	PRIMARY : "bool" | "short" | "int" | "long" | "real" | "double"
		| IDENTIFIER

.fi
.ih
PARAMETERS
.ls input = ""			prompt = input data file

The input data file.
.le
.ls ofile = ""			prompt = output data file

The output data file.
.le
.ls template = ""		prompt = datarep template

The template file.  This file contains a data structure definition to
drive the data conversion.
.le
.ls (iformat = "") [string]

The data representations of the input file.  Currently the following
formats are supported:
.nf

	IEEE 	to 	Host
	Vax	to	Host
	DG	to	Host

	(Sun is provided as a synonym of IEEE)
.fi	
.le
.ls (oformat = "host") [string]

The data representation of the output file.  Currently only the value "host"
is allowed since datarep converts an input format to host format.
.le
.ls (clobber = no) [boolean]

Hidden boolean flag specifying whether or not the output file can be
overwritten, if it already exists.
.le
.ih
EXAMPLES
Here is an example of the template used to convert a raymond data file
used in the PROS spectral package:
.nf

	# Raymond Table datarep template.

	struct	Header {
		real		# revision number of table
		char[16]	# creation time
		char[80]	# name of table
		char[16]	# space left from a bug in raymond
		real		# percent
		real[13]	# abundance
		real		# number of abundances
		real		# minimum energy
		real		# energy step increment
		real		# number of bins	
		real		# temperature of first row
		real		# temperature step increment
		real		# number of temparature rows
	}

	struct	Line {
		real		# temperature of Line
		real[180]	# each bin at this temperature
	}

	Header
	Line

.fi
Notice that comments are allowed and blank lines are skipped.  Datarep
continues to convert the last item in the definitions list until EOF.
In the above example the structure Line will continue to be used until
the end on the input file is reached.  Also note that you can declare
an array of structures or use a structure identifier in another
structure definition, e.g.:
.nf

	# Show off example

	# Foo's definition must occur before
	# it is referenced in Goo.

	struct Foo {
		int
		real[5]
	}

	struct Goo {
		char[32]
		Foo[4]		# Structure Foo used as an array.
	}

	Goo

	# Wow!
.fi
.ih
TIME REQUIREMENTS
.ih
BUGS
The number of characters given in a definition list or in an array
must be even.  This bug arises from the current implimentation of SPP.
.ih
SEE ALSO
.endhelp
