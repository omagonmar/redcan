# $Log: ecd2pros.hlp,v $
# Revision 11.0  1997/11/06 16:36:37  prosb
# General Release 2.5
#
# Revision 9.0  1995/11/16 19:00:59  prosb
# General Release 2.4
#
#Revision 8.0  1994/06/27  15:23:57  prosb
#General Release 2.3.1
#
#Revision 1.5  94/05/19  13:51:40  prosb
#krm - updated example.
#
#Revision 1.4  94/05/18  17:36:54  prosb
#krm - changed "/mydir/" to "mydir$".
#
#Revision 1.3  94/05/17  15:54:17  prosb
#krm - updated slew example.
#
#Revision 1.2  94/05/12  17:19:41  prosb
#Made minor changes to help file.
#
#Revision 1.1  94/05/06  18:19:51  prosb
#Initial revision
#
# $Header: /home/pros/xray/xdataio/eincdrom/doc/RCS/ecd2pros.hlp,v 11.0 1997/11/06 16:36:37 prosb Exp $
.help ecd2pros May94 xray.xdataio.eincdrom
.ih
NAME
ecd2pros -- Copy or convert FITS files from the Einstein CD-ROMs.
.ih
USAGE
ecd2pros specifier inst datatype outroot
.ih
DESCRIPTION
\fIecd2pros\fR will retrieve or convert FITS files from the several
published Einstein CD-ROMs.  There are six sets of CD's available:
IPC image (EOSCAT), HRI image (HRIIMG), IPC slew (SLEW),
HRI event (HRIEVT), IPC event (IPCEVT), and IPC unscreened (IPCU).
Use "help explain_eincdrom" for more details on these CD-ROMs.

To use this task, the user first supplies a FITS file name or sequence 
number. The user is then prompted  
for instrument type (ipc or hri) and/or datatype (image, event, slew, or 
unscreened) if they cannot be determined from the input specifier.  The 
FITS file(s) are then read from the appropriate CD-ROM and either 
converted to PROS format or merely
copied, as indicated by the "convert" parameter.
The user can also copy/convert a list of data.

The default is for this task to convert only the main data file
of the dataset (image or event file); the user can also convert
the auxiliary data for the dataset by setting the "aux" parameter.
See the Auxiliary Data section below for more details.

This task uses \fIefits2qp\fR to convert FITS events files to PROS QPOE
files and \fIstrfits\fR to convert other FITS files into IRAF images
and table files.

Note that the user must have access to the CD-ROMs.  Use \fIeincdpar\fR
to set the directories containing each CD-ROM.
.ih 
PARAMETERS
.ls specifier = ""

The input FITS file name or sequence number.  For example, "i0423n15.xpa",
"i591", and "591" are valid specifiers.  

The user can also pass in a
list of specifiers by using the syntax "@listfile".  In this case, the user
will be prompted for instrument and datatype; all of 
the data specified in the file will be copied or converted into the
current directory using automatic naming conventions.  Note that
the file can contain both FITS file names and sequence numbers, but
if any specifier fails to match the input instrument
or datatype, or is found to be invalid, it will be skipped over.  

.le
.ls inst = ""		(hri or ipc)

Einstein instrument type. The user
will not be prompted for this parameter if the instrument is contained
in the input specifier.

.le
.ls datatype = ""	(event, image, slew, unscreened)

The type of Einstein data (event, image, slew, or unscreened).
The user
will not be prompted for this parameter if the datatype can be
deduced from the specifier.

Note that there is no slew or unscreened data available for HRI.

.le
.ls outroot = "."

The root name for output files, used to construct the output file names.
The extensions of the output files are determined by the type of data; event
files will have the extension ".qp", exposure images will have the
extension "_exp.imh", etc.  If the FITS files are being copied (and not
converted), the extension will simply be the FITS extension (e.g., ".xpa",
".f3d", etc.).

If the parameter is empty (""), or is a directory (e.g., "." or "mydir$"), 
this task will use an automatic naming convention for the output root. 
If the input specifier is a sequence number (such as
IPC sequence "591"), the output root will be that sequence number (e.g., 
"i591".)  The initial 
letter of the instrument will automatically be added to the sequence
number.

If the specifier is a FITS file name, the output root will consist
of the FITS root concatenated with the one-letter extension of the
FITS file.  (This ensures uniqueness of the output root.)
For example, a specifier of "i0423n15.xpa" will produce the output
root "i0423n15a".  For IPC slew files, only the FITS root is used.

This parameter is not used if the user passed in a listfile as a specifier.
.le
.ls (im = yes) 		[boolean]

If this parameter is "yes", this task will copy or convert the main
data file for the requested dataset.

If the convert parameter is set to "yes", the main data file will
be converted either to an IRAF image file (for EOSCAT and HRIIMG),
or to a PROS QPOE file (for SLEW, IPCEVT, IPCU, and HRIEVT).  If
the convert parameter is "no", the main data will simply be copied.

.le
.ls (aux = no)		[boolean]

This flag determines whether of not to retrieve any available auxiliary
files for the specified data.  See the Auxiliary Files section below
for information on which files would be copied/converted.

.le
.ls (convert = yes)	[boolean]

This flag indicates whether or not the appropriate FITS files will be
converted or merely copied to the current directory.

.le
.ls (clobber = no)	[boolean]

If the output files already exist, this flag specifies whether
or not they can be overwritten.

.le
.ls (display = 1)	[int]

The level of display.  A setting of 0 should display no output
except warnings.  Settings above 3 are only useful for debugging purposes.

.le
.ls(qp_internals = yes)	[boolean]	     [efits2qp parameters]

Boolean flag controlling whether the internal QPOE parameters are
prompted for (see below), or whether they are defaulted to values
that are internally hardwired.  This parameter is not usually changed by 
the user.  (Prompting is normally turned off during stand-alone debugging 
only).
.le
.ls (qp_pagesize = 2048) [int]

Page size for the QPOE file.  This parameter is internal to the 
QPOE file and should not normally be changed.
.le
.ls (qp_bucketlen = 4096) [int]

Bucket length for the QPOE file.  This parameter is internal to the
QPOE file and should not normally be changed.

.le
.ls (qp_mkindex = yes) 	[boolean]

Boolean flag to indicate whether or not an index should be made for
the QPOE file.  This parameter is internal to the QPOE file and 
should not normally be changed.  

The qp_mkindex flag should only be set to "yes" for FITS files 
with position sorted events.  The IPC unscreened FITS files are
not position sorted; hence, for IPCU data, this task will override
any user specified value and set the parameter to "no".  
The default value of "yes" is used for the HRIEVT, 
IPCEVT and SLEW datasets. 

.le
.ls (qp_key = "")      	[string]

Key on which to make the QPOE index.  This parameter is internal to
the QPOE file and should not normally be changed.  With the parameter
qp_mkindex set to "yes", fits2qp generates a QPOE index of "y x".
This parameter is not used if qp_mkindex is set to "no" (for instance,
for the IPCU dataset).

.le
.ls (qp_debug = 0)	[int]

Debug level for QPOE internals.  This parameter is internal to the QPOE
file and should not normally be changed.

.le
.ls (sortsize = 1000000)  [int]

For IPCU data, this parameter is used when sorting the events.
This parameter
represents the number of bytes that are to be sorted at a time.
The user can then tailor the task to the amount of available
memory.  Use "help qpsort" to see more details on sorting.

.le
.ls (inlist = "") 	[string]

List-directed parameter used in reading filelists.  This is for
temporary use only and need not be modified.

.le

.ih
AUXILIARY FILES

Three of the datasets include auxiliary data as well as the main
event or image data.  These can be copied or converted by setting
the "aux" parameter to "yes".

The EOSCAT dataset contains a blocked exposure image (root_exp.imh)
and a list of sources (root_src.tab).

The HRIEVT dataset contains a barycenter time corrections file (root.tca).
See the CD-ROM file doc/unix/TIMECORR.DOC for more information about this 
text file.  Note that HRIEVT files have slightly incorrect photon 
arrival times.  See \fIecdinfo\fR for how to obtain this event offset time.

The IPCU dataset contains numerous auxiliary files:  

.nf
Level One Processing output file    (.lsa text -> root.lsa)
the observation interval table 	    (.upa FITS -> rootOBS.tab)
background factors table 	    (.bka FITS -> rootBKWCS.tab)
barycenter corrections file         (.bta FITS -> root_cor.tab)
source catalog table		    (.sda FITS -> rootCAT.tab)
Level One detection records         (.sda FITS -> rootDET.tab)
source count rate table             (.sda FITS -> rootCTS.tab)
source component table 		    (.sda FITS -> rootCPTS.tab)
variability analysis table          (.sda FITS -> rootVAR.tab)
source spectrum table (per src)     (.sda FITS -> rootsrc#_obs.tab)
source spectrum BAL table (per src) (.sda FITS -> rootsrc#_bal.tab)
.fi

See the file "doc/files.doc" on any of the unscreened IPC CD-ROMs for more
information about these auxiliary files.

Several of these tables from the IPCU dataset are in a format designed
to be used for specific PROS tasks.  The barycenter corrections file
can be used with \fIapply_bary\fR to correct photon times in the QPOE
file.  The source spectrum tables can be used with the xspectral
task \fIfit\fR.  The background factors table can be used to create
the Level One pipeline background map for the sequence using the task 
\fIeintools.be_ds_rotate\fR [TO BE WRITTEN].


.ih
EXAMPLES

1. Use ecd2pros to convert an IPCEVT file :
.nf
ei> ecd2pros
input FITS file name OR sequence number: 2060
Einstein instrument (hri|ipc): ipc
datatype of FITS file (event|image|slew|unscreened): event
root name for output files (.): 

Using FITS file ipcevt3$data/16h/i1641n39.xpa to create QPOE file.

Writing output QPOE file: ./i2060.qp

aux=.convtgr, type=convtgr -> ./i2060.qp

.fi
2. Use ecd2pros to convert EOSCAT image data and auxiliary files
   (the main data file, as well as a source table and exposure file 
    will be converted) :

.nf
ei> ecd2pros aux+  
input FITS file name OR sequence number: i2060
datatype of FITS file (event|image|slew|unscreened): image
root name for output files (.): eoscat

Converting FITS file : eoscat3$data/16h/i1641n39.xia[0]

Fits_file        IRAFNAME            Dimensions     BP   DATE   OBJECT
eoscat3$data/16h eoscat.imh          256  256       16 23/09/19                
/i1641n39.xia    

Converting FITS file : eoscat3$data/16h/i1641n39.xia[1]

Fits_file        IRAFNAME            Dimensions     BP   DATE   OBJECT
eoscat3$data/16h  ... main FITS unit skipped.
                 eoscat_src01.tab    240  1     Ncols= 20 SOURCES               
                 renamed to eoscat_src.tab

Converting FITS file : eoscat3$data/16h/i1641n39.rea

Fits_file        IRAFNAME            Dimensions     BP   DATE   OBJECT
eoscat3$data/16h eoscat_exp.imh      256  256       16 23/09/19                
/i1641n39.rea    

ei> dir eoscat*

eoscat.imh     	eoscat_src.tab 	    eoscat_exp.imh

.fi
3. Use ecd2pros to copy a set of IPCU FITS files :
.nf
ei> ecd2pros aux+ convert-
input FITS file name OR sequence number: i0423n15.upa
root name for output files (.): mydir$i9004

Copying FITS file : ipcu4$data/04h/i0423n15.upa

Writing file : mydir$i9004.upa

Copying FITS file : ipcu4$data/04h/i0423n15.bka

Writing file : mydir$i9004.bka

Copying FITS file : ipcu4$data/04h/i0423n15.bta

Writing file : mydir$i9004.bta

Copying FITS file : ipcu4$data/04h/i0423n15.sda

Writing file : mydir$i9004.sda

Copying ascii file : ipcu4$data/04h/i0423n15.lsa

Writing file : mydir$i9004.lsa
.fi

4. Use ecd2pros to convert a list of SLEW event list files :
.nf

ei> ty slew.list
s0728n48.f3d
s1000s24.f3d
s1824n06.f3d

ei> ecd2pros
input FITS file name OR sequence number: @slew.list
Einstein instrument (hri|ipc): ipc
datatype of FITS file (event|image|slew|unscreened): slew

### Working on list item : s0728n48.f3d

Using FITS file slewcd$data/07h/s0728n48.f3d to create QPOE file.

Writing output QPOE file: ./s0728n48_stemp.qp

./s0728n48_stemp.qp[y=2:] (; no exp.) -> ./s0728n48.qp
Creating QPOE output file: ./s0728n48.qp

### Working on list item : s1000s24.f3d

Using FITS file slewcd$data/10h/s1000s24.f3d to create QPOE file.

Writing output QPOE file: ./s1000s24_stemp.qp

./s1000s24_stemp.qp[y=2:] (; no exp.) -> ./s1000s24.qp
Creating QPOE output file: ./s1000s24.qp

### Working on list item : s1824n06.f3d

Using FITS file slewcd$data/18h/s1824n06.f3d to create QPOE file.

Writing output QPOE file: ./s1824n06_stemp.qp

./s1824n06_stemp.qp[y=2:] (; no exp.) -> ./s1824n06.qp
Creating QPOE output file: ./s1824n06.qp
.fi

.ih
BUGS

The slew and IPCU datasets have a few events which contain y pixel values
of 1.  There is a current IRAF bug which allows these events to "leak" into
any spatial screening, i.e., any region.
Because of this bug, these events are always removed from the data by the
current version of this task.

.ih
SEE ALSO
efits2qp, strfits, ecdinfo, explain_eincdrom.
.endhelp
