#$Header: /home/pros/xray/ximages/doc/RCS/imcompress.hlp,v 11.0 1997/11/06 16:25:48 prosb Exp $
#$Log: imcompress.hlp,v $
#Revision 11.0  1997/11/06 16:25:48  prosb
#General Release 2.5
#
#Revision 9.0  1995/11/16 18:33:08  prosb
#General Release 2.4
#
#Revision 8.0  1994/06/27  14:43:01  prosb
#General Release 2.3.1
#
#Revision 7.1  94/06/08  11:27:32  prosb
#Brought help file up to date.
#
#Revision 7.0  93/12/27  18:22:55  prosb
#General Release 2.3
#
#Revision 6.0  93/05/24  16:04:40  prosb
#General Release 2.2
#
#Revision 5.1  93/04/29  17:19:51  mo
#MC	4/29/93		Update the 'see also' section
#
#Revision 5.0  92/10/29  21:23:39  prosb
#General Release 2.1
#
#Revision 4.0  92/04/27  14:15:35  prosb
#General Release 2.0:  April 1992
#
#Revision 3.1  92/04/23  17:37:26  janet
#error and outerror are hidden now, updated helps.
#
#Revision 3.0  91/08/02  01:15:59  prosb
#General Release 1.1
#
#Revision 2.1  91/07/09  15:12:10  bent
#xray.ximages   7/9/91
#
#Revision 2.0  91/03/06  23:49:40  pros
#General Release 1.0
#
.help imcompress Jun94 xray.ximages
.ih
NAME
imcompress -- compress the 1st two dimensions of an N-dimensional IRAF
image by summing.
.ih
USAGE
imcompress  image  outimage  cfactor
.ih
DESCRIPTION
IMCOMPRESS contracts an IRAF image by summing counts in pixels of a
specified block size.  The image is compressed spatially in the first
2 dimensions.  In the case of a 1-d image the compression is by the
one and only dimension.  The task first runs over an image and then
is optionally repeated for an associated error image.

If an image of dimension (64,64,3) is compressed by a factor of 2,
then the output image is of dimension (32,32,3), and the total number
of image counts is unchanged.  If the compress factor doesn't divide
into the image evenly, then the output image is the size of the number
of evenly divisible bins, and the ends are dropped.  If in the example
above the compress factor was 3, then the output image would have a
dimension of (21,21,3), and the total number of counts in the new
image may be slighty fewer than in the old.
.ih
PARAMETERS
.ls image =		prompt = Input Image name

Name of the input image file to be read.
.le
.ls outimage =		prompt = Output Image name

Name of the output image file to be created.
.le

.ls cfactor =		prompt = Compress Factor

The factor by which the image will be contracted. 
.le
.ls (error = "NONE") [string]		

Name of the input error image file to be read.  An input of NONE will skip 
the error file. 
.le
.ls (outerror =	"NONE") [string]	

Name of the output error image to be created.  This must be set if the above
error image name is not "NONE".
.le

.ls (clobber = no) [boolean]

Boolean flag specifying whether or not the output IRAF image file can be 
overwritten, if it already exists.
.le
.ih
EXAMPLES
1.  Imcompress a 512x512x3 image name foo by 2 and output an image
named goo.
.nf

	xi> imcompress
	Input Image name: foo
	Output Image name: goo
	Compress Factor (1:): 2
	Compressing Image foo by factor of 2

.fi
Outputs a 256x256x3 image with each pixel of foo compressed by summing
consecutive 2x2 boxes.  There is no associated error file to compress.

2.  Imcompress a 64x32x3 image name foo by 5 and output an image named
goo.
.nf

	xi> imcompress
	Input Image name: foo
	Output Image name: goo
	Compress Factor (1:): 5
	Compressing Image foo by factor of 5

.fi
Outputs a 12x6x3x2 image with each pixel of compressed by summing
consecutive 5x5 boxes.  Since 5 does not divide evenly into 64 or 32
the output dimension is actually the number of times the the compress
factor divide evenly in each dimension.
.ih
TIME REQUIREMENTS
.ih
BUGS
.ih
SEE ALSO
This task actually invokes the IRAF task \fIblkavg\fR.  See help
for that task for more information.
.endhelp
