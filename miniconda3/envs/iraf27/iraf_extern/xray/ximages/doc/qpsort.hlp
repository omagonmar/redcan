#$Header: /home/pros/xray/ximages/doc/RCS/qpsort.hlp,v 11.0 1997/11/06 16:25:57 prosb Exp $
#$Log: qpsort.hlp,v $
#Revision 11.0  1997/11/06 16:25:57  prosb
#General Release 2.5
#
#Revision 9.0  1995/11/16 18:33:28  prosb
#General Release 2.4
#
#Revision 8.0  1994/06/27  14:43:36  prosb
#General Release 2.3.1
#
#Revision 7.2  94/06/08  11:38:14  prosb
#Modified eventdef parameter description.
#
#Revision 7.1  94/06/08  11:28:05  prosb
#Brought help file up to date.
#
#Revision 7.0  93/12/27  18:23:30  prosb
#General Release 2.3
#
#Revision 6.2  93/12/22  15:15:48  mo
#MC	12/22/93		Update with notes on buffer sizes, etc
#				and current default parameters
#
#Revision 6.1  93/08/17  14:43:32  mo
#MC	8/17/93		Fix type - bug #694
#
#Revision 6.0  93/05/24  16:05:15  prosb
#General Release 2.2
#
#Revision 5.1  92/12/07  17:01:15  dalex
#added mention of "position" for the sorttype parameter.
#changed example to reflect most common use.
#
#Revision 5.0  92/10/29  21:24:10  prosb
#General Release 2.1
#
#Revision 4.0  92/04/27  14:16:33  prosb
#General Release 2.0:  April 1992
#
#Revision 3.0  91/08/02  01:16:09  prosb
#General Release 1.1
#
#Revision 2.1  91/07/12  12:18:17  prosb
#xray.ximages   7/12/91
#
#Revision 2.0  91/03/06  23:37:28  pros
#General Release 1.0
#
.help qpsort Jun94 xray.ximages
.ih
NAME
qpsort -- sort a qpoe file through filters
.ih
USAGE
qpsort input_qpoe region qpoe eventdef sorttype
.ih
DESCRIPTION
\fIqpsort\fR sorts a qpoe file by any event attribute to another 
qpoe file. Any type of filtering can be applied to the input qpoe
file, including region filtering.  In addition, the size of the 
output event record can be different from the size of the input event 
record.  (Of course, usually one makes the output record equal to or 
smaller than the input.  If the output record size is made greater 
than the input record, a warning is issued and the "extra" part of the
record is undefined.)
        It requires disk space TWICE the size of the
input QPOE file to successfully sort.  Also, if the input file
is LONGER than ~20-25Mbytes, it will be necessary to adjust
the 'sortsize' parameter (nominally 1Mbyte).  This is necessary
because the Operating System won't support more than ~25 simultaneous
files.  So the rule of thumb would be to make 'sortsize' equal
to 1/20 of the size of the input QPOE file.  Of course, your system
must have sufficient memory to allocate a buffer of size 'sortsize'.
        So, adjusting 'sortsize' and finding sufficient disk space
should are necessary to tune this task for large files.  However, for a 
file >25 Mbytes we also recommend  doubling pagesize and bucklen, 
and >50 Mbytes they should be quadrupled.  This error never appears until 
the very end of the task.
.ih
PARAMETERS
.ls input_qpoe = ""		prompt = input qpoe file name

The input qpoe file name.  The extension ".qp" will be added to the
file if there is no extension. Qpoe filters can be
applied using the bracket notation to filter the input photons.
.le
.ls region = ""			prompt = region descriptor

The region descriptor.  If null is input, the entire field is copied
(subject to the qpoe filters specified with the input file name).
Otherwise only those photons are copied which pass the spatial region
filter.
.le
.ls qpoe = ""			prompt = output qpoe file name

The name of the output qpoe file.  The extension ".qp" will be added to the
file if there is no extension. The
output file can be the same as the input file.
.le
.ls eventdef = ""	       	prompt = event definition

The event definition of the output QPOE file.  If the user enters the
empty string, "", the event definition will be copied from the input
QPOE file.  See 'help qpoe' for information on modifying the event
definition.
.le
.ls sorttype = "position"	prompt = type of sort

The type of sort to perform.  This string consists of a list of event
element names that specifies the order in which to sort the event
record.  For example, "y x time" will sort on the "y" element as the
primary key, the "x" element as the secondary key, and "time" as the
tertiary key.  Using "position" (the default) will sort with "y" as
the primary key and "x" as the secondary key.
.le
.ls (exposure = "NONE") [string]

The PLIO mask containing exposure information for the specified
source image.  If the null string is input,  the name will be the
same root as the source image file with a "_exp.pl" extension.
If "NONE" is input, no exposure filtering is performed.
.le
.ls (expthresh = 0.) [real]

The percentage of total exposure required for a given source pixel to pass the
exposure filter, (if an exposure mask is present).  For example, if expthresh
is 50.0, then only pixels whose exposure time is >= 50% will be used.  An
exposure threshold of 0% allows all photons to pass the exposure filter.
.le
.ls (clobber = no) [boolean]

Boolean flag specifying whether or not the qpoe file can be overwritten,
if it already exists.
.le
.ls (display = 1) [int]

The display level. A display level of 0 generates no display.  A display level
of 1 generates a display of header information.
.le
.ls (sortsize = 1000000) [int]

The number of bytes that are to be sorted at a time.  This allows users
to tailor the task to the amount of available memory.  If there is a lot
of memory available, sortsize should be set large enough so that
the task will do an in-core sort.  If only a small amount of memory
is available, use a smaller number.  In this case, several core loads will
be sorted and written to temp files, which are then merged.
.le
.ls (qp_internals = yes) [boolean]

Boolean flag controlling whether the internal qpoe parameters (see
below) are prompted for, or whether they are defaulted to internally
hardwired values.  This parameter is not usually changed by the user.
(Prompting is normally turned off during stand-alone debugging only.)
.ls (qp_pagesize = 2048) [int]

Page size for the qpoe file.  This parameter is internal to qpoe and
should not normally be changed.
.le
.ls (qp_bucketlen = 4096) [int]

Bucket length for the qpoe file.  This parameter is internal to qpoe and
should not normally be changed.
.le
.ls (qp_blockfact = 1) [int]

The default block factor for IMIO.  This parameter is internal to qpoe and
should not normally be changed.
.le
.ls (qp_mkindex = no) [boolean]

Boolean flag that an index should be made for the qpoe file.
This parameter is internal to qpoe and should not normally be changed.
.le
.ls (qp_key = "") [string]

Key on which to make the qpoe index.  This parameter is internal to qpoe and
should not normally be changed.
.le
.ls (qp_debug = 0) [int]

Debug level for qpoe internals.  This parameter is internal to qpoe and
should not normally be changed.
.le
.le
.ih
EXAMPLES
1. Spatially sort a qpoe file, accepting only photons whose pi value is in
the range 0:7, and whose position is within one of 5 annuli.  Make the
resulting qpoe file of size "region", i.e., include the region number
of each event in the file.
.nf

cl> qpsort "i296[pi=0:7]" "ann 512 512 0 100 n=5" "foo" "region" "position"
i296.qp[pi=0:7] (ann 512 512 0 100 n=5; no exp.) -> foo.qp
Creating QPOE output file: foo.qp

.fi
.ih
TIME REQUIREMENTS
.ih
BUGS
For files with length greater than 'sortsize', QPSORT must create
temporary scratch files.  These are always created in the CURRENT
WORKING DIRECTORY regardless of the location of the input and
output files.
.ih
SEE ALSO
Documentation on region filtering (\fIhelp regions\fR) for a
description of the spatial filter user interface.

Documentation on qpoe filtering (\fIhelp qpoe\fR) for a description of
the qpoe filter user interface.

Documentation on file extensions (\fIhelp extensions\fR) for a
description of PROS file extensions.

Documentation on coordinates (\fIhelp coords\fR) for a description of
PROS coordinate conventions.
.endhelp
