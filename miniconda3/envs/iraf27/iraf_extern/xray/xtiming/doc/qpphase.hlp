#$Header: /home/pros/xray/xtiming/doc/RCS/qpphase.hlp,v 11.0 1997/11/06 16:44:15 prosb Exp $
#$Log: qpphase.hlp,v $
#Revision 11.0  1997/11/06 16:44:15  prosb
#General Release 2.5
#
#Revision 9.0  1995/11/16 19:33:13  prosb
#General Release 2.4
#
#Revision 8.0  1994/06/27  17:38:56  prosb
#General Release 2.3.1
#
#Revision 7.1  94/06/08  13:47:32  prosb
#Added new eventdef definition.  Other corrections made as well.
#
#Revision 7.0  93/12/27  19:00:14  prosb
#General Release 2.3
#
#Revision 6.1  93/12/21  12:25:10  janet
#*** empty log message ***
#
#Revision 6.0  93/05/24  16:56:01  prosb
#General Release 2.2
#
#Revision 1.1  93/05/20  11:49:13  mo
#Initial revision
#
#
.help qpphase Jun94 xray.xtiming
.ih
NAME
qpphase -- Calculate the photon phase and store it in the output QPOE file
.ih
USAGE
qpphase  input_qpoe region phase pdot qpoe eventdef 
.ih
DESCRIPTION
\fIqpphase\fR calculates the phase of each photon using the 'time'
attribute.  User provides the initial PHASE length and also PDOT -
rate of change of phase/sec.
.nf
	phi(phase) = time / PHASE ...

.fi
.ih
PARAMETERS
.ls input_qpoe = ""	prompt = input qpoe file name

The input time-ordered qpoe file name. The file must have a ".qp" extension,
but may be specified with or without the extension. Qpoe filters
can be applied using the bracket notation to filter the input photons.
.le
.ls region = ""		prompt = region descriptor

The region descriptor.  If null is input, the entire field is copied
(subject to the qpoe filters specified with the input file name).
Otherwise only those photons are copied which pass the spatial region
filter.
.le
.ls phase = 0.		prompt = phase(seconds)
        
        Period upon which to fold the data specified in seconds.

.le
.ls pdot = 0. 		[double]
        Period rate of change.  When pdot = 0.0, the period is constant.
Phase length in seconds

.le
.ls qpoe = ""		prompt = output qpoe file name

The output qpoe file name.  The file must have a ".qp" extension,
but may be specified with or without the extension.  The output file
can be the same as the input file.
.le
.ls eventdef = "{s:x,s:y,s:pha,s:pi,d:time,d:phase,s:detx,s:dety}"
						prompt = event definition
The event definition of the output QPOE file.  If the user enters the
empty string, "", the event definition will be copied from the input
QPOE file.  See 'help qpoe' for information on modifying the event
definition.
.le
.ls (exposure = "NONE") [string]

The PLIO mask containing exposure information for the specified source
image.  If the null string is input, the name will be the same root as
the source image file with a "_exp.pl" extension.  If "NONE" is input,
no exposure filtering is performed.
.le
.ls (expthresh = 0.) [real]

The percentage of total exposure required for a given source pixel to
pass the exposure filter, (if an exposure mask is present).  For
example, if expthresh is 50.0, then only pixels whose exposure time is
>= 50% will be used.  An exposure threshold of 0% allows all photons
to pass the exposure filter.
.le
.ls (clobber = no) [boolean]

Boolean flag specifying whether or not the qpoe file can be overwritten,
if it already exists.
.le
.ls (display = 1) [int]

The display level. A display level of 0 generates no display.  A display level
of 1 generates a display of header information.
.le
.ls (sort = yes) [boolean]

Flag if events are to be sorted.  If true, the type of sort is determined
by the \fIsorttype\fR parameter.
.le
.ls (sorttype = "position") [string]

The type of sort to perform.  This string consists of a list of event
element names that specifies the order in which to sort the event
record.  For example, "y x time" will sort on the "y" element as the
primary key, the "x" element as the secondary key, and "time" as the
tertiary key.  If sorting is not to be performed, this parameter can
be used as a string that will go into the x_sort qpoe param to
indicate the type of sorting of the events. For example, if the events
are already sorted by time, and are not to be resorted, one can set
\fIsort\fR to false and \fIsorttype\fR to "time", and the qpoe file
will be indistinguishable from one whose events were sorted by time.
.le
.ls (sortsize = 1000000) [int]

The number of bytes that are to be sorted at a time.  This allows
users to tailor the task to the amount of available memory.  If there
is a lot of memory available, \fIsortsize\fR should be set large
enough so that the task will do an in-core sort.  (This requires
knowing the approximate number of events and the byte size of each
event.)  If only a small amount of memory is available, use a smaller
number.  In this case, several core loads will be sorted and written
to temp files, which are then merged.
.le
.ls (qp_internals = yes) [boolean]

Boolean flag controlling whether the internal qpoe parameters (see
below) are prompted for, or whether they are defaulted to internally
hardwired values.  This parameter is not usually changed by the user.
(Prompting is normally turned off during stand-alone debugging only.)
.ls (qp_pagesize = 1024) [int]

Page size for the qpoe file.  This parameter is internal to qpoe and
should not normally be changed.
.le
.ls (qp_bucketlen = 2048) [int]

Bucket length for the qpoe file.  This parameter is internal to qpoe and
should not normally be changed.
.le
.ls (qp_blockfact = 1) [int]

The default block factor for IMIO.  This parameter is internal to qpoe and
should not normally be changed.
.le
.ls (qp_mkindex = yes) [boolean]

Boolean flag that an index should be made for the qpoe file.
This parameter is internal to qpoe and should not normally be changed.
.le
.ls (qp_key = "") [string]

Key on which to make the qpoe index.  This parameter is internal to qpoe and
should not normally be changed.
.le
.ls (qp_debug = 0) [int]

Debug level for qpoe internals.  This parameter is internal to qpoe and
should not normally be changed.
.le
.le
.ih
EXAMPLES
1. Fold a time of file on a 10 second period with ZERO pdot
.nf

     cl> timsort "xdata$snr.qp" snr "" "NONE" ""
     starting source creation - snr_sti.qp

     cl> qpphase snr_sti.qp "" 10.0 0.0 "snr_phi.qp" 
     event definition ({s:x,s:y,s:pha,s:pi,d:time,d:phase,s:detx,s:dety}):

     snr_sti.qp (; no exp.; period=10.000000; pdot=0.000000) -> snr_phi.qp
     Creating QPOE output file: snr_phi.qp

     cl> qplist snr_phi.qp ev+ last=10
.fi
.ih
TIME REQUIREMENTS
.ih
BUGS
.ih
SEE ALSO
Documentation on creating a time-ordered qpoe (\fIhelp timsort\fR) for a
task description.

See also documentation on the task \fI fold\fR.

Documentation on region filtering (\fIhelp regions\fR) for a
description of the spatial filter user interface.

Documentation on qpoe filtering (\fIhelp qpoe\fR) for a description of
the qpoe filter user interface.

Documentation on file extensions (\fIhelp extensions\fR) for a
description of PROS file extensions.

Documentation on coordinates (\fIhelp coords\fR) for a description of
PROS coordinate conventions.
.endhelp
