		Instructions for Making a PROS Release

Log on to a computer as PROS. (This document assumes that this is done
on an f68881 computer.)  The following instructions clean the PROS
source directories of junk files:

1. cd xray			# go to PROS source directory 
2. mkpkg generic		# archive and delete all libs, objects, etc.  
3. xclean			# clean junk files (does "rm -i" on junk ...
				# ... use: 'xclean "rm -f"' for no verify)

It is a good idea to delete the contents of the bin.* directories,
containing executables, libraries, etc.  To make life easier when
producing PROS tar tapes, the bin directories are subdirectories of
/pros/xraybin, not /pros/xray. (There are links in /pros/xray to these
directories.)  To delete the contents of these directories:

4. rm /pros/xraybin/bin.*/*	# remove all executables and libs from bins

Assuming you are not on a sparc machine, rlogin to a sparc that has
/pros mounted with read and write access (e.g. guinan).  It is best to
make the sparc version of PROS first, since the sparc compiler is a
bit more exacting than the f68881 compiler:

5.  rlogin <sparc_machine>	# log onto sparc station 
6.  cd xray			# go to the PROS source directory 
7.  setenv IRAFARCH sparc	# use the sparc compiler switches 
8.  unsetenv FLOAT_OPTION	# this must not be defined for a sparc 
9.  rm spool			# this is the log file for making PROS 
10. mkpkg sparc			# set up to build the sparc version

You are now set up to build the sparc version.  The command to build
PROS for any architecture is:

11. mkpkg -p xray >& spool &	# build sparc and place results into spool file

You can monitor the progress of the build continually using the "tail"
command:

11a. tail -f spool		# display what goes into spool, on
console
				# (^C quits this use of tail)

or you can get a summary of what is happening using "mkpkg":

11b. mkpkg summary		# does a grep on spool, displaying
important
				# messages

or you can simply grep the spool file for errors:

11c. egrep -i error spool	# grep in case insensitive mode for
errors

You will have to fix any errors that crop up.  As a rule, PROS should
build without errors or warnings.  It is strongly recommended that
after the initial sparc build, all errors and warnings get cleared up
manually and the above procedure then be iterated (until it is done
perfectly).

When the sparc version is complete, rename the spool log file and exit
the sparc machine:

12. mv spool spool.sparc 
13. exit

Back on the f68881 machine, you can now build the f68881 version the
same way.  There should be no compiler problems by this point. (If
there are, you will have to go back and re-make the sparc version):

14. setenv IRAFARCH f68881	# use the f68881 compiler switches 
15. setenv FLOAT_OPTION f68881	# need the FLOAT_OPTION set to f68881 here!  
16. mkpkg f68881		# set up to build the f68881 version

And then build the f6881 version:

17. mkpkg -p xray >& spool &	# build f68881

When the f68881 version has been built, rename the spool file:

18. mv spool spool.f68881

At this point, the PROS help data base should be recompiled.  Log into
IRAF as PROS, load the softools package and execute mkhelpdb:

19. cl 
    cl> softools 
    so> mkhelpdb
	root help directory to be compiled: xray$lib/root.hd
	name of help database to be created: xray$lib/helpdb.mip 
    cl> logout


Once the build has been completed, PROS release tapes can be created
using the xtar shell:

20. mkpkg generic			# so we don't send out any binaries
21. xtar <device> <type>		# tar the release
22. mkpkg f68881			# restore normal architecture

where 
	<device> is the tape or file name, 
	<type> is either the string "sun" or the string "other".  

If making a sun tape, the tar
will include bin.{ffpa,f68881,sparc,generic} directories.  Otherwise,
it will be created with a bin directory. (You will see some warning
messages about the links to libraries.  These can be ignored.)

Note that this shell script could leave the PROS in an unusable state
if interrupted.  In this case, use:

23. xtar recover <float>

where float is the type of architecture PROS was set for.  Normally this
is f68881.  This will set up the bin links properly.

		Random musings ...

1. The mkpkg files should have the dependencies updated periodically.  This
probably implies using grep on the source code to determine what files are
include'ed and then adding these to mkpkg.

2. All code should refer to <qpoe.h>, not "../../lib/qpoe.h". Same for
includes such as einstein.h, rosat.h, ext.h, etc.  In fact., all occurances
of "../../lib/<mumble.h>" should be changed to <mumble.h>.

3. Currently we build the PROS with -F (keep fortran files) and -g (debugging
switch).  These defaults are maintained in xray$lib/mkpkg.inc.  For user
sites, we should remove the -F and replace -g by -O (optimize).  But this
means that we should test with the -O switch to make sure the optimizer
does not do something bad. (Note that -g is not the VMS default, since
this causes tasks to go into the debugger when executed.  The change
is made in xray$lib/mkpkg.sf.VMS.)


