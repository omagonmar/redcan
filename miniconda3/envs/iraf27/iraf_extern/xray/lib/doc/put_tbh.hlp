#$Header: /home/pros/xray/lib/doc/RCS/put_tbh.hlp,v 11.0 1997/11/06 16:23:12 prosb Exp $
#$Log: put_tbh.hlp,v $
#Revision 11.0  1997/11/06 16:23:12  prosb
#General Release 2.5
#
#Revision 9.0  1995/11/16 18:31:16  prosb
#General Release 2.4
#
#Revision 8.0  1994/06/27  14:36:17  prosb
#General Release 2.3.1
#
#Revision 7.0  93/12/27  18:20:07  prosb
#General Release 2.3
#
#Revision 6.0  93/05/24  16:01:37  prosb
#General Release 2.2
#
#Revision 5.0  92/10/29  21:21:18  prosb
#General Release 2.1
#
#Revision 4.0  92/04/27  14:10:43  prosb
#General Release 2.0:  April 1992
#
#Revision 3.0  91/08/02  00:47:56  prosb
#General Release 1.1
#
#Revision 2.0  91/03/07  00:35:53  pros
#General Release 1.0
#
.help put_tbh Apr89 PROS_Library
NAME
.in 4
put_tbh - write standard header information to a table file
.sp
.in -4
USAGE
.in 4
call put_tbh(tp, heading, image, plhead)
.sp
.in -4
PARAMETERS
.in 4
.nf
Input Arguments:
	tp		pointer		table handle
	heading		string		parameter heading or null string
	image		string		image name
	plhead		string		plio header string

Output Arguments:
	none
.fi
.sp
.in -4
DESCRIPTION
.in 4
The subroutine put_tbh writes standard header information to a table file.
The first input argument is the table handle returned by tbtcre.
The second input argument is a string which gets used as a prefix to
create unique header parameter names (or the null string to use defaults.)
The third argument is the image file name.  The fourth argument is
the plio header string, returned by pl_loadf or pm_loadf.

The image file name is written to the table header using the heading string
as a parameter name, or else using the param name "image" if heading string is
null. The plio header string is then decoded and plio parameters are added.
The names of these parameters will either be a standard name for each
(if heading is null), or will contain the first three chars of heading,
followed by a descriptive suffix.  This use of the heading in creating table
parameter names allows more than one set of standard parameters to
be written to the same table header.  For example, one might want to
write signal and bkgd information to the same file, as imcnts does.

The plio header information written to the table file includes
the plio name, plio type, plio reference files, plio xdim and ydim,
and plio scale. The regions are also written to the file, as well as
any "notes" appended at the end of the plio header. (Exposure correction
information is normally part of the notes section.)
.sp
.in -4
EXAMPLES
.in 4
ex. The following code fragment shows how to use put_tbh.x.  Taken from
qpdisp. it is an example of a case where the heading string is null, so that
default parameter names are used.  This is the correct method to use when
only one set of standard parameters are being written to a table file.
.in 8
.nf
	...

	# open the event list
	io = qpio_open(qp, evlist, READ_ONLY)

	# reset the event mask
	call set_qpmask(qp, io, region, expname, thresh, pl, title)

	# display the header
	call msk_disp("qpdisp mask", poefile, Memc[title])

	# open the table file, if necessary
	if( dotable == YES ){
	    # and fill in the columns
	    call ini_lsttable(temp, tp, x_cp, y_cp, time_cp, pha_cp, pi_cp,
				dx_cp, dy_cp, reg_cp, s10_cp, s11_cp, evsize)
	    # write header into table
	    call put_tbh(tp, "", poefile, Memc[title])
	}
	...
.fi
.sp
.in -12
BUGS
.in 4
.in -4
.sp
SEE ALSO
.in4
