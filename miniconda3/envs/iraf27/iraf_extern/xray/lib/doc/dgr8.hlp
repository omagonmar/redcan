#$Header: /home/pros/xray/lib/doc/RCS/dgr8.hlp,v 11.0 1997/11/06 16:22:32 prosb Exp $
#$Log: dgr8.hlp,v $
#Revision 11.0  1997/11/06 16:22:32  prosb
#General Release 2.5
#
#Revision 9.0  1995/11/16 18:30:27  prosb
#General Release 2.4
#
#Revision 8.0  1994/06/27  14:35:00  prosb
#General Release 2.3.1
#
#Revision 7.0  93/12/27  18:18:44  prosb
#General Release 2.3
#
#Revision 6.0  93/05/24  16:00:06  prosb
#General Release 2.2
#
#Revision 5.0  92/10/29  21:20:07  prosb
#General Release 2.1
#
#Revision 4.0  92/04/27  14:08:24  prosb
#General Release 2.0:  April 1992
#
#Revision 3.0  91/08/02  00:47:33  prosb
#General Release 1.1
#
#Revision 2.0  91/03/07  00:34:58  pros
#General Release 1.0
#
.help dgr8 Jan89 PROS_Library
NAME
.in 4
dgr8 - convert DG 8-byte real to host format
.sp
.in -4
USAGE
.in 4
dval = dgr8(ibuf)
.sp
.in -4
PARAMETERS
.in 4
.nf
Input Arguments:
	ibuf		any type	data element containing DG double

Output Arguments:
	none

Return Value:
	dval		double		SPP double in host format
.fi
.sp
.in -4
DESCRIPTION
.in 4
The function dgr8 takes a 8-byte real in DG data format and returns
a 8-byte real (SPP double) in host format.  Because SPP (and Fortran)
pass data by reference, the DG data can be stored in any data type, and
in either an array or a scalar.

Unlike dgi2 and dgi4, there is no SPP library primitive that can be used
to convert an array of DG 8-byte reals to host format more efficiently.
.sp
.in -4
EXAMPLES
.in 4
ex. Convert a DG 8-byte real to host format.
.in 8
.nf
double	d
short	dgbuf[100]		# short is 1/4 the size as a double
double	dgr8()

# convert the 24th double
d = dgr8(dgbuf[93])
.fi
.sp
.in -12
.in 4
ex. Convert an array of DG 8-byte reals to host format.
.in 8
.nf
define	BUFSIZ 100
int	dgbuf[BUFSIZ*2]		# int is the 1/2 size of a double
double	hostbuf[BUFSIZ]
double	dgr8()

do i=1, BUFSIZ{
	hostbuf[i] = dgr8(dgbuf[i*2-1])
}
.fi
.sp
.in -12
BUGS
.sp
SEE ALSO
.in4
dgi2, dgi4, dgr4, dgi6
