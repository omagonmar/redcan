#$Header: /home/pros/xray/lib/doc/RCS/dgr4.hlp,v 11.0 1997/11/06 16:22:31 prosb Exp $
#$Log: dgr4.hlp,v $
#Revision 11.0  1997/11/06 16:22:31  prosb
#General Release 2.5
#
#Revision 9.0  1995/11/16 18:30:26  prosb
#General Release 2.4
#
#Revision 8.0  1994/06/27  14:34:57  prosb
#General Release 2.3.1
#
#Revision 7.0  93/12/27  18:18:42  prosb
#General Release 2.3
#
#Revision 6.0  93/05/24  16:00:04  prosb
#General Release 2.2
#
#Revision 5.0  92/10/29  21:20:05  prosb
#General Release 2.1
#
#Revision 4.0  92/04/27  14:08:20  prosb
#General Release 2.0:  April 1992
#
#Revision 3.0  91/08/02  00:47:32  prosb
#General Release 1.1
#
#Revision 2.0  91/03/07  00:34:57  pros
#General Release 1.0
#
.help dgr4 Jan89 PROS_Library
NAME
.in 4
dgr4 - convert DG 4-byte real to host format
.sp
.in -4
USAGE
.in 4
rval = dgr4(ibuf)
.sp
.in -4
PARAMETERS
.in 4
.nf
Input Arguments:
	ibuf		any type	data element containing DG real

Output Arguments:
	none

Return Value:
	rval		real		SPP real in host format
.fi
.sp
.in -4
DESCRIPTION
.in 4
The function dgr4 takes a 4-byte real in DG data format and returns
a 4-byte real (SPP real) in host format.  Because SPP (and Fortran)
pass data by reference, the DG data can be stored in any data type, and
in either an array or a scalar.

Unlike dgi2 and dgi4, there is no SPP library primitive that can be used
to convert an array of DG reals to host format more efficiently.
.sp
.in -4
EXAMPLES
.in 4
ex. Convert a DG 4-byte real to host format.
.in 8
.nf
real	r
short	dgbuf[100]		# a short is 1/2 the size as a real
real	dgr4()

# convert the 24th real
r = dgr4(dgbuf[47])
.fi
.sp
.in -12
.in 4
ex. Convert an array of DG 4-byte reals to host format.
.in 8
.nf
define	BUFSIZ 100
int	dgbuf[BUFSIZ]		# an int is the same size as a real
real	hostbuf[BUFSIZ]
real	dgr4()

do i=1, BUFSIZ{
	hostbuf[i] = dgr4(dgbuf[i])
}
.fi
.sp
.in -12
BUGS
.sp
SEE ALSO
.in4
dgi2, dgi4, dgr8, dgi6
