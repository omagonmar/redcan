#$Header: /home/pros/xray/lib/doc/RCS/put_qphead.hlp,v 11.0 1997/11/06 16:23:10 prosb Exp $
#$Log: put_qphead.hlp,v $
#Revision 11.0  1997/11/06 16:23:10  prosb
#General Release 2.5
#
#Revision 9.0  1995/11/16 18:31:13  prosb
#General Release 2.4
#
#Revision 8.0  1994/06/27  14:36:12  prosb
#General Release 2.3.1
#
#Revision 7.0  93/12/27  18:20:02  prosb
#General Release 2.3
#
#Revision 6.0  93/05/24  16:01:32  prosb
#General Release 2.2
#
#Revision 5.0  92/10/29  21:21:14  prosb
#General Release 2.1
#
#Revision 4.0  92/04/27  14:10:35  prosb
#General Release 2.0:  April 1992
#
#Revision 3.0  91/08/02  00:47:55  prosb
#General Release 1.1
#
#Revision 2.0  91/03/07  00:35:50  pros
#General Release 1.0
#
.help put_qphead Jan89 PROS_Library
NAME
.in 4
put_qphead - write X-ray header information to a qpoe file
.sp
.in -4
USAGE
.in 4
call put_qphead(qp, qphead)
.sp
.in -4
PARAMETERS
.in 4
.nf
Input Arguments:
	qp		pointer		qpoe handle
	qphead		pointer		pointer to qpoe header

Output Arguments:
	none
.fi
.sp
.in -4
DESCRIPTION
.in 4
The subroutine put_qphead writes header information to a qpoe file.
The input argument is a qpoe handle, returned by qp_open.
The second argument is a pointer to a struct whose record structure
is defined in xray/lib/qpoe.h.  This header information is normally created
and written by qpoe-creating routines such as xpr2qp.  However, it is
possible to read an existing header, change values in that header, and
write the header back to the qpoe file, using get_qphead and put_qphead.
.sp
.in -4
EXAMPLES
.in 4
ex. The following example shows how to get, put, and display the X-ray
header in a qpoe file.
.in 8
.nf
procedure xheader()

char	qpname[SZ_FNAME]	# qpoe name
int	display			# display level
pointer qp			# qpoe handle
pointer	qphead			# qpoe header pointer
pointer	qp_open()		# open a qpoe file
int	clgeti()

begin
	call clgstr("qpoe", qpname, SZ_FNAME)
	display = clgeti("display")
	# open the qpoe file
	qp = qp_open (qpname, READ_ONLY, NULL)
	# read in the header information
	call qp_gethead(qp, qphead)
	... (manipulate the header) ...
	# write out the header information
	call put_qphead(qp, qphead)
	# display, if necessary
	if( display >0 ){
	    call disp_qphead(qphead)
	}
	# close the file
	call qp_close(qp)
end
.fi
.sp
.in -12
BUGS
.in 4
.in -4
.sp
SEE ALSO
.in4
qpoe.h (which defines the struct into which qpoe header is read),
get_qphead, disp_qphead.
