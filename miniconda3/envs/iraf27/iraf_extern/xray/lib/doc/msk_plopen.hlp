#$Header: /home/pros/xray/lib/doc/RCS/msk_plopen.hlp,v 11.0 1997/11/06 16:23:04 prosb Exp $
#$Log: msk_plopen.hlp,v $
#Revision 11.0  1997/11/06 16:23:04  prosb
#General Release 2.5
#
#Revision 9.0  1995/11/16 18:31:06  prosb
#General Release 2.4
#
#Revision 8.0  1994/06/27  14:36:01  prosb
#General Release 2.3.1
#
#Revision 7.0  93/12/27  18:19:50  prosb
#General Release 2.3
#
#Revision 6.0  93/05/24  16:01:18  prosb
#General Release 2.2
#
#Revision 5.0  92/10/29  21:21:02  prosb
#General Release 2.1
#
#Revision 4.0  92/04/27  14:10:14  prosb
#General Release 2.0:  April 1992
#
#Revision 3.0  91/08/02  00:47:51  prosb
#General Release 1.1
#
#Revision 2.0  91/03/07  00:35:41  pros
#General Release 1.0
#
.help msk_plopen Apr89 PROS_Library
NAME
.in 4
msk_plopen - combine region and exposure into a mask (using explicit array
dimensions)
.sp
.in -4
USAGE
.in 4
pl = msk_plopen(region, expname, thresh, axislen, title)
.sp
.in -4
PARAMETERS
.in 4
.nf
Input Arguments:
	region		char		region descriptor
	expname		char		exposure file name
	thresh		real		exposure threshold
  	axislen		int[2]		array dimensions of mask

Output Arguments:
	title				pointer to plio header string

Return Value:
	pl		pointer		pl handle

.fi
.sp
.in -4
DESCRIPTION
.in 4
The function msk_plopen opens a region mask and/or an exposure mask,
and combines the two into a final mask.  The first input argument
is the region descriptor, which can be the null string.  The second
input argument is the exposure mask file name, which can be "NONE"
is no exposure correction is to be done.  The third input argument is the
exposure threshold (0 <= thresh <= 100).  The fourth input argument is
a int array containing the x and y dimension of the mask.

The return argument is the pl handle of this combined mask. This pl handle
is normally used in conjunction with qpio_seti to set the mask for
filtering in a qpoe file.  Most qpoe applications should call the higher
level set_qpmask routine (see below).  IMIO application usually use
msk_pmopen (which takes an im handle inseatd of the axislen).

The function first creates a pixel mask from the region descriptor
using the standard rg_plcreate call. If the exposure file name is "NONE",
the function simply returns the pl handle from this call.  Otherwise,
the exposure mask file is combined with the region mask into a final mask.
This is done by storing only those pixels that are both in the region mask
and above the specified threshold of the exposure mask.  The resulting
mask has the same region id's for each region as the original region
mask, but only parts of regions above the exposure threshold are saved.
The pl handle of this final mask is returned by the function.
.sp
.in -4
EXAMPLES
.in 4
ex. The following example shows how msk_plopen is used in conjunction with
qp_seti.  It is taken from the routine set_qpmask.
.in 8
.nf
include <qpset.h>
include <qpioset.h>

#
# SET_QPMASK -- create a region/exposure mask and reset the qpoe mask 
#
procedure set_qpmask(qp, io, region, exposure, expthresh, pl, title)

int	qp				# i: qp handle
int	io				# i: event io handle
char	region[ARB]			# i: region descriptor
char	exposure[ARB]			# i: exposure file name
real	expthresh			# i: exposure threshold
pointer	pl				# o: output plio handle
pointer	title				# o: mask title
int	axlen[2]			# l: axis lengths
int	block				# l: blocking factor
int	qp_stati()			# l: get qpoe status
int	qp_geti()			# l: get int param
pointer	msk_plopen()			# l: create region/exposure mask

begin
	# init title pointer
	title = 0
	# reset the mask value if a region was specified
	block = qp_stati(qp, QPOE_BLOCKFACTOR)
	if( block ==0 ){
	    call printf("block factor is 0: did you setenv the qmfiles?\n")
	    call error(1, "illegal block factor")
	}
	else if( block != 1 ){
	    call printf("\nWarning: block factor is not 1 (%d)\n")
	    call pargd(block)
	}
	axlen[1] = qp_geti(qp, "axlen[1]")/block
	axlen[2] = qp_geti(qp, "axlen[2]")/block
	# open the region and/or exposure
	pl = msk_plopen(region, exposure, expthresh, axlen, title)
	# set up the region as a mask
	call qpio_seti(io, QPIO_PL, pl)
end
.fi
.sp
.in -12
BUGS
.in 4
The pointer to the title summary must be set to zero in the calling routine,
and must be freed at the end.
.in -4
.sp
SEE ALSO
.in4
set_qpmask, msk_pmopen

