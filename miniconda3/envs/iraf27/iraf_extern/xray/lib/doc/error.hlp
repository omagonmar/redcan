#$Header: /home/pros/xray/lib/doc/RCS/error.hlp,v 11.0 1997/11/06 16:22:45 prosb Exp $
#$Log: error.hlp,v $
#Revision 11.0  1997/11/06 16:22:45  prosb
#General Release 2.5
#
#Revision 9.0  1995/11/16 18:30:43  prosb
#General Release 2.4
#
#Revision 8.0  1994/06/27  14:35:27  prosb
#General Release 2.3.1
#
#Revision 7.0  93/12/27  18:19:13  prosb
#General Release 2.3
#
#Revision 6.0  93/05/24  16:00:36  prosb
#General Release 2.2
#
#Revision 5.0  92/10/29  21:20:30  prosb
#General Release 2.1
#
#Revision 4.0  92/04/27  14:09:10  prosb
#General Release 2.0:  April 1992
#
#Revision 3.0  91/08/02  00:47:40  prosb
#General Release 1.1
#
#Revision 2.0  91/03/07  00:35:18  pros
#General Release 1.0
#
.help error Jan89 PROS_Library
NAME
.in 4
error<silrdx>, errstr - error handling routines
.sp
.in -4
USAGE
.in 4
call error<silrdx>(ercode, ermes, val)
.br
call errstr(ercocde, ermes, val)
.sp
.in -4
PARAMETERS
.in 4
.nf
Input Arguments:
	ercode		int		error code (arg 1 of SPP error)
	ermes		str		error message
	val		<silrdx>, str	value to append to error message

Output Arguments:
	none
.fi
.sp
.in -4
DESCRIPTION
.in 4
The subroutine family error<silrdx> and errstr packages an error message
string and calls the SPP error routine.  The error message string consists
of the ermes string, the string " - ", and a value, which can be of any type
<silrdx>, or another string.

This family of routines is provided as a means of all alleviating the need
to perform an sprintf into a buffer every time an error message needs to
append type-dependent information to the error string.
.sp
.in -4
EXAMPLES
.in 4
ex. Call error with a string and an integer.
.in 8
.nf
define	PROS_ERROR 1
int	ndim
pointer	im
...
ndim = IM_NDIM(im)
if( ndim != 2 )
	call errori(PROS_ERROR, "image is not 2-dimensional", ndim)
.fi
.sp
.in -12
.in 4
ex. Call error with two strings.
.in 8
.nf
char	fname[SZ_FNAME]
int	access()
if( access(fname, 0, 0) == NO )
	call errstr(1, "can't access file", fname)
.fi
.sp
.in -12
BUGS
.in 4
There are no routines to package an error string with n values, n>1.
For these cases, sprintf and error must be used.
.in -4
.sp
SEE ALSO
