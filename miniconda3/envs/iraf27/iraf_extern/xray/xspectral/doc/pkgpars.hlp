.help pkgpars Dec93 xray.xspectral
.ih
NAME
pkgpars -- edit the xspectral package wide parameters
.ih
USAGE
pkgpars
.ih
DESCRIPTION

\fIpkgpars\fR contains the parameters which are made available to
all of the tasks in \fIxspectral\fR.  It contains information that is
common to more then one task, for example the observed data set and model.
It also contains instrument specific parameters, such as the calibration
files for the Einstein IPC and ROSAT PSPC.

A  user  can  edit the \fIpkgpars\fR parameter set by calling the
\fIpkgpars\fR task.  This will put the user in an eparam session of
the parameter file pkgpars.par.

.ih
PARAMETERS
.ls observed = ""             prompt = observed spectrum [root_obs.tab]

The file names of one or more observed data sets on which the fit is
to be performed.  Multiple observation data sets can be specified by
entering the file names, separated by semi-colons, e.g. "foo1; foo2;
foo3", etc. Normally these files have a "_obs.tab" extension.  This
extension need not be input explicitly; if the files do not follow this
convention the explicit name should be typed.

Channels to fit for a given data set may be selected by appending a
bracket notation to the file name.  Thus "foo[3:11,15]" will cause
channels 3 to 11 (inclusive) and 15 to be fit. If channels are not
explicitly specified, the default channels for the given instrument
are retrieved from the pkgpars parameter file.
.le
.ls model = ""		prompt = model descriptor or ? for help

The ASCII model descriptor.  If "?" is input a short helpfile appears,
and the model prompt reappears.  A null string ("") will cause the previously
determined best
model to be taken from the _prd.tab file.  Type \fIhelp models_spectral\fR
from the CL for further information.

The spectral model descriptor is the sum of individual model components
with the option of applying absorption.
.nf

The general syntax for applying absorption to a component is:
    absorption(params) * component(params)

The general syntax for multiple model components is:
    abs(params) * compnt1(params) + abs(params) * compnt2(params) + ...

Possible components and arguments are:
powerlaw         log(normalization), energy index
bremsstrahlung   log(normalization), temperature [keV]
exponential      log(normalization), temperature [keV]
blackbody        log(normalization), temperature [keV]
raymond          log(normalization), temperature [keV], abundance table,
                                       abundance percent
line model       log(normalization), line-energy [keV],
                                       line-width [FWHM, in keV]

Absorption is applied as follows:
	absorption(log(galactic_NH))
	absorption(log(intrinsic_NH), redshift)
	absorption(log(galactic_NH), log(intrinsic_NH), redshift)

.fi
Unique abbreviations are recognized (e.g. pow).  Parameters are specified
by entering a single value (fixed) or a range (free) separated by ":".  For
free normalization of the first component, this parameter may be omitted.
The normalization of a second component is linked to that of the
first, other parameters may also be linked.
.le
.ls (predicted = "new") [string]

Each input observed data file that is fit to a model results in an
output predicted data file with the same root as the input file, and
the extension "_prd.tab" instead of the input files "_obs.tab"
extension.  Since more than one input file can be used in a fit, more
than one predicted file can be created as output.

The predicted data file contains all of the information contained in
the input observed data files.  In addition, three columns are added
detailing the results of the fit.  These are: "pred" (containing the
predicted spectrum), "chisq" (containing the chi-square contribution
for each channel) and "chans" (containing a "*" if that channel was
used in the fit.)  The table may contain more than one set of
predicted data, so the names of these columns are actually "pred_<N>",
"chisq_<N>", and "chans_<N>", where <N> distinguishes the predicted
data sets within the file (see below).

The predicted data set also contains header parameters that describe
the model used in the fit (the best fit parameters), the total
chi-square of the fit, and the file names of all observed data sets
used in the fit.

This \fIpredicted\fR parameter controls the creation of the predicted
files.  The parameter takes three possible values: "nothing", "new",
or "append".  If predicted is "nothing", no predicted data files are
created.  If the parameter value is "new", then the predicted data
files are overwritten (if the \fIclobber\fR parameter is set to yes).
If the value is "append", then the predicted data columns are appended
to the current predicted data file.  In this case, the <N> number
appended to the "pred", "chisq", and "chans" column names is
incremented so that successive runs of a fit result, for example, give
the successive predicted column names "pred_1", "pred_2", etc.
.le
.ls (clobber = yes) [boolean]

This flag determines whether the predicted data file can be overwritten,
assuming that the value of the predicted parameter is "new".
.le
.ls (chisquare = ".") [string]

The name of the table file containing accumulated chisquare results.
The file will contain one row of the following columns for each fit
performed: "date" (the time and date of the run), "chisq" (the total
chisq of the fit), "chans" (the number of channels used in the fit),
"free" (the number of free parameters used in the fit), "files" (a
list of predicted data files generated by the fit, along with the <N>
column number within each file - see above), "model" (the best fit
model).
.le
.ls (intermediate = ".") [string]

The name of the of the intermediate data file.  This file contains the final
(best fit) model spectrum produced by fit and singlefit.
.le
.ls (prd_dir = "") [string]

This is the output directory for the predicted data files.
.le
.ls (absorption_type = "morrison") [string]

The type of absorption to be used.  The options are "morrison
mccammon" or "brown gould".
.le
.ls (m_and_m_absorption_file = "xspectraldata$m_m.absorption") [string]

The absorption table for the morrison-mccammon absorption model.
.le
.ls (b_and_g_absorption_file = "xspectraldata$b_g.absorption") [string]

The absorption table for the brown-gould absorption model.
.le
.ls (raymond_directory = "xspectraldata$") [string]

The directory that contains the Raymond model data files.  The data
files must follow the PROS naming convention (see the names in the
xspectraldata$ directory).  The trailing "/" is required for the directory
name or in the IRAF definition statement, e.g. .../data/.
.le
.ls (delta = 3.0) [real]

The default delta values for free parameters that did not get delta
from user.
.le
.ls (norm_delta = 3.5) [real]

The default delta value for the normalization.
.le
.ls (em_delta = 3.5) [real]

The default delta value for the emission measure.
.le
.ls (intrinsic_delta = 4.0) [real]

The default delta value for the intrinsic nH absorption.
.le
.ls (galactic_delta = 4.0) [real]

The default delta value for the galactic nH absorption.
.le
.ls (redshift_delta = 4.0) [real]

The default delta value for the redshift.
.le
.ls (model_help = "xspectral$doc/model.hlp") [string]

The short help file that comes up when a "?" is given at the model
prompt.  Try \fIhelp models_spectral\fR at the cl for more information.
.le
.ls (spatial_prf_sigmas = "xspectraldata$spatial_prf_sigmas") [string]

The spatial point response function sigmas for the Einstein IPC.
.le
.ls (bal_steps = 85) [int]

The number of BAL tables for the Einstein IPC.
.le
.ls (bal_start = 9.0) [real]

The starting BAL value in the tables.
.le
.ls (bal_inc = 0.2) [real]

The increment between BAL tables.
.le
.ls (bal_epsilon = 0.001) [real]

Allowed deviation between BAL value and BAL tables.
.le
.ls (psgni = "xspectraldata$psgni.table") [string]

The Einstein IPC PSGNI table.
.le
.ls (dgni = "xspectraldata$dgni.table") [string]

The Einstein IPC DGNI table.
.le
.ls (arcfrac= 0.10) [real]

The arcing fraction for the Einstein IPC.
.le
.ls (area_data = "xspectraldata$area.data") [string]

The Einstein telescope mirror area data file.
.le
.ls (ein_ipc_channels = "3:11") [string]

The default Einstein IPC channels to be used in the fit if none are
given with the observed data file.
.le
.ls (ein_ipc_radius = 3.0) [real]

The Einstein point source radius.
.le
.ls (ein_ipc_ltcor = 1.04) [real]

The Einstein IPC live time correction factor.
.le
.ls (ein_ipc_syserr = "0.03") [string]

The Einstein IPC systematic error.
.le
.ls (ein_hri_channels = "1") [string]

The default Einstein HRI channels to be used in the fit if none are
given with the observed data file.
.le
.ls (ein_hri_area = "xspectraldata$hriarea.3.txt") [string]

The Einstein HRI effective area file.
.le
.ls (ein_hri_coma = "xspectraldata$hricoma.txt") [string]

The Einstein HRI coma and scattering file.
.le
.ls (ein_hri_radius = 0.3) [real]

The Einstein HRI point source radius.
.le
.ls (ein_hri_ltcor = 1.05) [real]

The Einstein HRI live time correction factor.
.le
.ls (ein_hri_syserr = "0.0") [string]

The Einstein HRI systematic error.
.le
.ls (mpc_response_datafile = "xspectraldata$mpc.rsp") [string]

The Einstein MPC response data file.
.le
.ls (ein_mpc_channels = "1:8") [string]

The Einstein MPC default channels to use in the fit if none are given in
the data file.
.le
.ls (ros_hri_channel = "1") [string]

The default ROSAT HRI channels to be used in the fit if none are
given with the observed data file.
.le
.ls (ros_hri_syserr = "0.0") [string]

The ROSAT HRI systematic error.
.le
.ls (ros_hri_radius = 0.3) [real]

The ROSAT HRI point source radius.
.le
.ls (ros_hri_ltcor = 1.0) [real]

The ROSAT HRI live time correction.
.le
.ls (ros_hri_pxx = 0.0001666667) [real]

The ROSAT HRI degrees per instrument x pixel.
.le
.ls (ros_hri_pyy = 0.0001666667) [real]

The ROSAT HRI degrees per instrument y pixel.
.le
.ls (ros_hri_dtmat_1 = "xspectraldata$hri_dtmat_1.ieee") [string]

The ROSAT HRI detector response, single channel.
.le
.ls (ros_hri_dtmat_15 = "xspectraldata$not_yet_available") [string]

The ROSAT HRI detector response, fifteen channels.  This capability
is not yet available.
.le
.ls (ros_hri_eff_area = "xspectraldata$hri_eff_area.ieee") [string]

The ROSAT HRI effective area (on axis).
.le
.ls (ros_pspc_channels = "2:34") [string]

The default ROSAT PSPC channels to be used in the fit if none are
given with the observed data file.
.le
.ls (ros_pspc_syserr = "0.0") [string]

The ROSAT PSPC systematic error.
.le
.ls (ros_pspc_radius = 2.0) [real]

The ROSAT PSPC point source radius.
.le
.ls (ros_pspc_ltcor = 1.0) [real]

The ROSAT PSPC live time correction factor.
.le
.ls (ros_pspc_pxx = 0.0002595021) [real]

The ROSAT PSPC degrees per instrument x pixel.
.le
.ls (ros_pspc_pyy = 0.0002595021) [real]

The ROSAT PSPC degrees per instrument y pixel.
.le
.ls (ros_dtmat = "xspectraldata$dtmat_6.ieee") [string]

The ROSAT PSPC detector response file.  See help pspc_fitting
for more information.
.le
.ls (ros_egrid = "xspectraldata$egrid.ieee") [string]

The ROSAT PSPC detector response bins file.
.le
.ls (ros_offar = "xspectraldata$offar2_6.ieee") [string]

The ROSAT PSPC offaxis histogram coefficient file. See help pspc_fitting
for more information.

.le
.ls (ros_filte = "xspectraldata$filter2_5.ieee") [string]

The ROSAT PSPC filter area file.  See help pspc_fitting
for more information.
.le
.ls (def_dtmat = "") [string]

The default instrument detector response file.
.le
.ls (def_egrid = "") [string]

The default instrument detector response bins file.
.le
.ls (def_offar = "") [string]

The default instrument offaxis histogram coefficient file.

.le
.ls (def_filte = "") [string]

The default instrument filter area file.
.le
.ls (default_channels = "") [string]

The default instrument channels to be used in the fit if none are
given with the observed data file.
.le
.ls (def_low_energy = 2.0) [real]

The default instrument low energy.
.le
.ls (def_kigh_energy = 30.0) [real]

The default instrument high energy.
.le
.ls (srg_hepc1_syserr = "0.0") [string]

The SRG HEPC1 systematic error.
.le
.ls (srg_hepc1_radius = 2.0) [real]

The SRG HEPC1 point source radius.
.le
.ls (srg_hepc1_ltcor = 1.0) [real]

The SRG HEPC1 live time correction factor.
.le
.ls (srg_hepc1_pxx) [real]

The SRG HEPC1 degrees per instrument x pixel.
.le
.ls (srg_hepc1_pyy) [real]

The SRG HEPC1 degrees per instrument y pixel.
.le
.ls (srg_hepc1_dtmat = "xspectraldata$hepc1_mc.rmdat") [string]

The SRG HEPC1 detector response file.
.le
.ls (srg_hepc1_egrid = "xspectraldata$hepc1_mc.egr") [string]

The SRG HEPC1 detector response bins file.
.le
.ls (srg_hepc1_offar = "xspectraldata$sodart1.ofa") [string]

The SRG HEPC1 offaxis histogram coefficient file.

.le
.ls (srg_hepc1_filte = "xspectraldata$hepc1.window") [string]

The SRG HEPC1 filter area file.
.le
.ls (srg_hepc1_channels = "1:128") [string]

The default SRG HEPC1 channels to be used in the fit if none are
given with the observed data file.
.le
.ls (srg_hepc1_low_energy = 2.0) [real]

The SRG HEPC1 low energy.
.le
.ls (srg_hepc1_kigh_energy = 30.0) [real]

The SRG HEPC1 high energy.
.le
.ls (srg_lepc1_syserr = "0.0") [string]

The SRG LEPC1 systematic error.
.le
.ls (srg_lepc1_radius = 2.0) [real]

The SRG LEPC1 point source radius.
.le
.ls (srg_lepc1_ltcor = 1.0) [real]

The SRG LEPC1 live time correction factor.
.le
.ls (srg_lepc1_pxx) [real]

The SRG LEPC1 degrees per instrument x pixel.
.le
.ls (srg_lepc1_pyy) [real]

The SRG LEPC1 degrees per instrument y pixel.
.le
.ls (srg_lepc1_dtmat = "xspectraldata$lepc1_mc.rmdat") [string]

The SRG LEPC1 detector response file.
.le
.ls (srg_lepc1_egrid = "xspectraldata$lepc1_mc.egr") [string]

The SRG LEPC1 detector response bins file.
.le
.ls (srg_lepc1_offar = "xspectraldata$sodart1.ofa") [string]

The SRG LEPC1 offaxis histogram coefficient file.

.le
.ls (srg_lepc1_filte = "xspectraldata$lepc1.window") [string]

The SRG LEPC1 filter area file.
.le
.ls (srg_lepc1_channels = "1:128") [string]

The default SRG LEPC1 channels to be used in the fit if none are
given with the observed data file.
.le
.ls (srg_lepc1_low_energy = 0.2) [real]

The SRG LEPC1 low energy.
.le
.ls (srg_lepc1_kigh_energy = 8.0) [real]

The SRG LEPC1 high energy.
.le
.ls (helium_to_hydrogen = 0.085) [real]

The Helium to Hydrogen abundance for the bremsstrahlung model.
.ih
EXAMPLES

1. List the xspectral parameters in pkgpars.

.nf
	xs> lparam pkgpars
.fi

2. Edit the xspectral parameters in pkgpars.

.nf
	xs> pkgpars
.fi

3. Edit the \fIpkgpars\fR parameters from within the \fIfit\fR
parameter file.

.nf
    xs> eparam fit

	... edit a few fit parameters

	... move down to the pkgpars parameter and type :e

	... edit the pkgpars parameters and type :q

	... finish editing the fit parameters and type :q or ^X
.fi

4. Changing a \fIpkgpars\fR parameter from the command line.

.nf
    xs> pkgpars.ein_ipc_chan="2:10"
.fi

5. Save the current \fIpkgpars\fR parameter set in a text file 
spectest.par.  This can also be done from inside a higher level task as
in the above example.

.nf
    xs> pkgpars

	... edit the parameters

	... type ":w spectest.par"  from within eparam
.fi

.ih
SEE ALSO

fit, pspc_fitting, singlefit, show_models, qpspec, xflux, search_grid,
counts_plot, grid_plot \fIand\fR lparam, eparam.
.endhelp
